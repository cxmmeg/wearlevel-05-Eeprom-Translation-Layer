Warning[w6]: Type conflict for external/entry "sys_errorcode_runcode", in module uart_config against external/entry in module timer; different basic types
  /* In module uart_config: */
  bool sys_errorcode_runcode;
  /* In module timer: */
  unsigned int sys_errorcode_runcode;
################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.4.100                                         #
#                                                                              #
#           Link time     =  02/Dec/2020  15:33:46                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#           Output file 1 =  \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43      #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\83797\AppData\Local\Temp\EWFF81.tmp   #
#                            (\\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\aes.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\battbak.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\common.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\Console.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\crc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\datapage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\debug.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\dma.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\etl.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\etltest.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43    #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\gpio.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\infopage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\led.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\main.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\oa.r43              #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmap.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmm.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ram.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ref.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rom.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\sfr.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\tec.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\tlv.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\tool.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart0.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart1.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart3.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\ucs.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43 -o        #
#                            \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43 -l   #
#                            \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\lnk430f5438a.xcl"     #
#                            (-cmsp430 -D?CPU30_OFFSET=2 -QCODE_I=CODE_ID      #
#                            -QTLS16_I=TLS16_ID -D__iar_HWMUL=4C0              #
#                            -Z(CONST)INFO=1800-19FF                           #
#                            -Z(CONST)INFOA=1980-19FF                          #
#                            -Z(CONST)INFOB=1900-197F                          #
#                            -Z(CONST)INFOC=1880-18FF                          #
#                            -Z(CONST)INFOD=1800-187F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=1C00-5 #
#                            BFF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=5C00-FF7F                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE16=5C00-FF7F          #
#                            -P(CODE)CODE=5C00-FF7F,10000-45BFF                #
#                            -Z(CONST)DATA20_C,DATA20_ID,CODE_ID=5C00-FF7F,100 #
#                            40-45BFF                                          #
#                            -Z(CODE)INTVEC=FF80-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\multiplier32.xcl"     #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw32=?Mul32   #
#                            -e?Mul64Hw32=_Mul64i                              #
#                            -e?Mul32u32uto64iHw32=_Mul32u32uto64i             #
#                            -e?Mul32fHw32=_Mul32f                             #
#                            -e_Mul64fHw32Ptr=_Mul64fPtr) -D_STACK_SIZE=FA0    #
#                            -rt                                               #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\lib\dlib\dl430xlsfn.r43"            #
#                            -D_DATA16_HEAP_SIZE=1F40 -s __program_start       #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2018 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           6258  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __code_model               = large
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

       All references to: _Printf
         were redirected to: _PrintfLargeNoMb



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       1F40 
           _STACK_SIZE             0FA0 
           __iar_HWMUL             04C0            ?Mul16to32sHw (?Mul16to32sHw)
                                                   ?Mul32fHw32 (?Mul32fHw32)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Segment part 1 (?Mul8Hw)
           ?CPU30_OFFSET           0002 
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\aes.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\battbak.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\common.r43
  PROGRAM MODULE, NAME : common

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 021A - 021B (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIE_L               021A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIE                    021A 
           PAIE_H                  021B 
           PAIE_L                  021A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 021C - 021D (0x2 bytes), align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIFG_L              021C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIFG                   021C 
           PAIFG_H                 021D 
           PAIFG_L                 021C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 024A - 024B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCSEL_L              024A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCSEL                   024A 
           PCSEL_H                 024B 
           PCSEL_L                 024A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0262 - 0263 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   Clear_ExternWatchdog()
                                                   Restart_Init() (main)
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDOUT_L              0262 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDOUT                   0262 
           PDOUT_H                 0263 
           PDOUT_L                 0262 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 026A - 026B (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDSEL_L              026A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDSEL                   026A 
           PDSEL_H                 026B 
           PDSEL_L                 026A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0282 - 0283 (0x2 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   IIC_SCL_HIGH() (rtc)
                                                   IIC_SCL_LOW() (rtc)
                                                   IIC_SDA_HIGH() (rtc)
                                                   IIC_SDA_LOW() (rtc)
                                                   Max3222_Open()
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEOUT_L              0282 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEOUT                   0282 
           PEOUT_H                 0283 
           PEOUT_L                 0282 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0284 - 0285 (0x2 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   IIC_Ack() (rtc)
                                                   IIC_NAck() (rtc)
                                                   IIC_Read_Byte(unsigned char) (rtc)
                                                   IIC_Send_Byte(unsigned char) (rtc)
                                                   IIC_Start() (rtc)
                                                   IIC_Stop() (rtc)
                                                   IIC_Wait_Ack() (rtc)
                                                   Max3222_Open()
                                                   RTC_Open() (rtc)
                                                   Restart_Init() (main)
                                                   UART3_Open(int) (uart3)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEDIR_L              0284 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEDIR                   0284 
           PEDIR_H                 0285 
           PEDIR_L                 0284 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMCTL0_L            0120 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMCTL0                 0120 
           PMMCTL0_H               0121 
           PMMCTL0_L               0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0124 - 0125 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMHCTL_L           0124 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMHCTL                0124 
           SVSMHCTL_H              0125 
           SVSMHCTL_L              0124 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0126 - 0127 (0x2 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMLCTL_L           0126 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMLCTL                0126 
           SVSMLCTL_H              0127 
           SVSMLCTL_L              0126 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012C - 012D (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMIFG_L             012C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMIFG                  012C 
           PMMIFG_H                012D 
           PMMIFG_L                012C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0102 - 0103 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_Init()
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIFG1_L            0102 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIFG1                 0102 
           SFRIFG1_H               0103 
           SFRIFG1_L               0102 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0168 - 0169 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL4_L            0168 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL4                 0168 
           UCSCTL4_H               0169 
           UCSCTL4_L               0168 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016A - 016B (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL5_L            016A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL5                 016A 
           UCSCTL5_H               016B 
           UCSCTL5_L               016A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016C - 016D (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL6_L            016C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL6                 016C 
           UCSCTL6_H               016D 
           UCSCTL6_L               016C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016E - 016F (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL7_L            016E 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL7                 016E 
           UCSCTL7_H               016F 
           UCSCTL7_L               016E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 015C - 015D (0x2 bytes), align: 0
  Segment part 17. ROOT       Intra module refs:   Clock_Init()
                                                   WatchDog_Clear() (timer)
                                                   WatchDog_Init() (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCTL_L             015C 
           LOCAL                   ADDRESS         
           =====                   =======         
           WDTCTL                  015C 
           WDTCTL_H                015D 
           WDTCTL_L                015C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C02 - 1C03 (0x2 bytes), align: 1
  Segment part 36.            Intra module refs:   TraceFunctionLine(char const *, int)
                                                   TraceMsgFuncLine(char *, int, char const *, int)
                                                   TraceOpen()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trace_open              1C02 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C04 - 1C05 (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   System_Delayms(unsigned int)
           LOCAL                   ADDRESS         
           =====                   =======         
           s_clock                 1C04 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C06 - 1C07 (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   DownInt()
                                                   UpInt()
           LOCAL                   ADDRESS         
           =====                   =======         
           _int                    1C06 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C08 - 1C09 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   Clear_ExternWatchdog()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_pin             1C08 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B70C - B719 (0xe bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceOpen()             B70C            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B07A - B099 (0x20 bytes), align: 1
  Segment part 41.            Intra module refs:   TraceMsgFuncLine(char *, int, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceFunctionLine(char const *, int)
                                   B07A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AAD2 - AB03 (0x32 bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceMsgFuncLine(char *, int, char const *, int)
                                   AAD2            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A928 - A95F (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Delayms(unsigned int)
                                   A928            I2C_STOP() (rom)
                                                   Led_Round() (led)
                                                   RTC_Open() (rtc)
                                                   UART3_Send(char *, int, int) (uart3)
                                                   main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B86E - B877 (0xa bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DownInt()               B86E            ROM_ReadBytes_Page(unsigned long long, char *, int) (rom)
                                                   ROM_WriteBytes_Page_(unsigned long long, char const *, int) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B326 - B33D (0x18 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpInt()                 B326            ROM_ReadBytes_Page(unsigned long long, char *, int) (rom)
                                                   ROM_WriteBytes_Page_(unsigned long long, char const *, int) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B908 - B90D (0x6 bytes), align: 1
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EnInt()                 B908            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6F0 - B6FD (0xe bytes), align: 1
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Max3222_Open()          B6F0            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AD6 - 9B3D (0x68 bytes), align: 1
  Segment part 62.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_SMCLK_DIV(int)    9AD6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A6E - 9AD5 (0x68 bytes), align: 1
  Segment part 63.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_ACLK_DIV(int)     9A6E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EE4 - 9F39 (0x56 bytes), align: 1
  Segment part 64.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Set_Vcore(unsigned int)
                                   9EE4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CCA - 9D25 (0x5c bytes), align: 1
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_Init()            9CCA            Restart_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B440 - B455 (0x16 bytes), align: 1
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_Strlen(char *)
                                   B440            Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9932 - 999D (0x6c bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_UintToStr4(unsigned int, char *)
                                   9932            Console_WriteInt(int) (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B178 - B195 (0x1e bytes), align: 1
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear_ExternWatchdog()
                                   B178            TIMERB1_ISR() (timer)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1C - 5C1D (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   TraceFunctionLine(char const *, int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\Console.r43
  PROGRAM MODULE, NAME : Console

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA5E - BA61 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   DataPage::~DataPage() (dualpool)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free                    BA5E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA66 - BA69 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  BA66 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B83C - B845 (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Open()          B83C            Restart_Init() (main)
                                                   TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8D2 - B8D9 (0x8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Close()         B8D2            TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AECE - AEF1 (0x24 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteString(char *)
                                   AECE            TraceFunctionLine(char const *, int) (common)
                                                   TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AF82 - AFA5 (0x24 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteStringln(char *)
                                   AF82            TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B482 - B495 (0x14 bytes), align: 1
  Segment part 8.             Intra module refs:   Console_WriteInt(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteBytesln(char *, int)
                                   B482 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B2A4 - B2BD (0x1a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteInt(int)   B2A4            TraceFunctionLine(char const *, int) (common)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\crc.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43
  LIBRARY MODULE, NAME : ?cstart

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __MSP430F5212__         0000 
  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 4C60, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0A, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 6256, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CODE_I
  Relative segment, address: 4452, align: 1
  Segment part 5.
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: BABC, align: 1
  Segment part 6.
    -------------------------------------------------------------------------
DATA20_Z
  Relative segment, address: 4452, align: 1
  Segment part 7.
    -------------------------------------------------------------------------
DATA20_I
  Relative segment, address: 4452, align: 1
  Segment part 8.
    -------------------------------------------------------------------------
DATA20_ID
  Relative segment, address: BABC, align: 1
  Segment part 9.
    -------------------------------------------------------------------------
DATA20_C
  Relative segment, address: BABC, align: 1
  Segment part 10.
    -------------------------------------------------------------------------
DATA20_N
  Relative segment, address: 4452, align: 1
  Segment part 12.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 6258 - 6261 (0xa bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         6258            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           6258 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 6262 - 626D (0xc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       6262            GetCharSelBitCnt(char)::dict (tool)
                                                   GetCharSelBitCnt(char)::static guard for dict (tool)
                                                   IsGetInput (uart0)
                                                   Is_RS485_1 (main)
                                                   Is_uart1_RX_INT (main)
                                                   Is_uart3_RX_INT (uart3)
                                                   Segment part 2 (?xgetmemchunk)
                                                   UART0_Rx_BufLen (uart0)
                                                   UART0_Rx_Buffer (uart0)
                                                   UART0_Rx_INTIndex (uart0)
                                                   UART0_Rx_INTLen (uart0)
                                                   UART1_Rx_BufLen (uart1)
                                                   UART1_Rx_Buffer (uart1)
                                                   UART1_Rx_INTIndex (uart1)
                                                   UART1_Rx_INTLen (uart1)
                                                   UART3_Rx_BufLen (uart3)
                                                   UART3_Rx_Buffer (uart3)
                                                   UART3_Rx_INTIndex (uart3)
                                                   UART3_Rx_INTLen (uart3)
                                                   UART3_Rx_RecvIndex (uart3)
                                                   UART3_Tx_Buf (uart3)
                                                   UART3_Tx_Flag (uart3)
                                                   UART3_Tx_Len (uart3)
                                                   __data16_Aldata (?xxmemxmalloc)
                                                   __iar_New_hand (?new)
                                                   _int (common)
                                                   etl (etltest)
                                                   s_ClockTicks (timer)
                                                   s_clock (common)
                                                   s_reset_count (timer)
                                                   s_reset_pin (common)
                                                   s_uart1_type (uart1)
                                                   s_uart3_type (uart3)
                                                   trace_open (common)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 626E - 627D (0x10 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       626E            Opened (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 627E - 6285 (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       627E 
           ?cstart_end             6286 
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: BABC, align: 1
  Segment part 28.            Intra module refs:   Segment part 5

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 15 (?cstart)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\datapage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\debug.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dma.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43
  PROGRAM MODULE, NAME : dualpool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA7E - BA81 (0x4 bytes), align: 1
  Segment part 87.            Intra module refs:   DataPage::DataPage(int)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calloc                  BA7E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AB68 - AB97 (0x30 bytes), align: 1
  Segment part 88.            Intra module refs:   DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool)
                                                   DualPool::InitialPoolBorder()
                                                   DualPool::PrintPoolInfo(enum PoolIdentify)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::DataPage(int)
                                   AB68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B5F6 - B605 (0x10 bytes), align: 1
  Segment part 89.            Intra module refs:   DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool)
                                                   DualPool::InitialPoolBorder()
                                                   DualPool::PrintPoolInfo(enum PoolIdentify)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::~DataPage()   B5F6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAA0 - BAA1 (0x2 bytes), align: 1
  Segment part 55.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ucopy(unsigned char const *, unsigned char const *, unsigned char *)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ufill(unsigned char *, unsigned int, unsigned char)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int) (tool)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *) (tool)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_Alval()
                                   BAA0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAA4 - BAA5 (0x2 bytes), align: 1
  Segment part 65.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const (etl)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Altyval() const
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_Alval() const
                                   BAA4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B36E - B385 (0x18 bytes), align: 1
  Segment part 43.            Intra module refs:   _Ty *_Copy_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *)
                                   B36E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA4E - BA51 (0x4 bytes), align: 1
  Segment part 44.            Intra module refs:   _Ty1 *_Copy_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty *_Copy_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
                                   BA4E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA4A - BA4D (0x4 bytes), align: 1
  Segment part 45.            Intra module refs:   _OutIt copy(_InIt, _InIt, _OutIt)[with _InIt=unsigned char *, _OutIt=unsigned char *]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty1 *_Copy_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned char]
                                   BA4A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA3A - BA3D (0x4 bytes), align: 1
  Segment part 46.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Erase(unsigned char *, unsigned char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _OutIt copy(_InIt, _InIt, _OutIt)[with _InIt=unsigned char *, _OutIt=unsigned char *]
                                   BA3A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B386 - B39D (0x18 bytes), align: 1
  Segment part 57.            Intra module refs:   _Ty *_Copy_backward_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Backward_copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *)
                                   B386 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA32 - BA35 (0x4 bytes), align: 1
  Segment part 58.            Intra module refs:   _Ty1 *_Copy_backward_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty *_Copy_backward_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
                                   BA32 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA2E - BA31 (0x4 bytes), align: 1
  Segment part 59.            Intra module refs:   _BidIt2 copy_backward(_BidIt1, _BidIt1, _BidIt2)[with _BidIt1=unsigned char *, _BidIt2=unsigned char *]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty1 *_Copy_backward_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned char]
                                   BA2E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA26 - BA29 (0x4 bytes), align: 1
  Segment part 60.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _BidIt2 copy_backward(_BidIt1, _BidIt1, _BidIt2)[with _BidIt1=unsigned char *, _BidIt2=unsigned char *]
                                   BA26 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA22 - BA25 (0x4 bytes), align: 1
  Segment part 90.            Intra module refs:   allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int) (etl)
                                                   allocator<unsigned char>::allocate(unsigned int)
                                                   allocator<unsigned short>::allocate(unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::allocate(unsigned int)
                                   BA22 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA12 - BA15 (0x4 bytes), align: 1
  Segment part 61.            Intra module refs:   allocator<unsigned char>::deallocate(unsigned char *, unsigned int)
                                                   allocator<unsigned short>::deallocate(unsigned short *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::deallocate(void *)
                                   BA12 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAAC - BAAD (0x2 bytes), align: 1
  Segment part 54.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Altyval() const
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ucopy(unsigned char const *, unsigned char const *, unsigned char *)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ufill(unsigned char *, unsigned int, unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<unsigned char>::allocator(allocator<_Other> const &)[with _Other=void]
                                   BAAC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B96E - B973 (0x6 bytes), align: 1
  Segment part 62.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned char>::deallocate(unsigned char *, unsigned int)
                                   B96E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B974 - B979 (0x6 bytes), align: 1
  Segment part 74.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned char>::allocate(unsigned int)
                                   B974 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B846 - B84F (0xa bytes), align: 1
  Segment part 91.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned char>::max_size() const
                                   B846 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B3CE - B3E5 (0x18 bytes), align: 1
  Segment part 92.            Intra module refs:   _Uninit_copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Uninit_copy(char const *, char const *, char *)
                                   B3CE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9DE - B9E1 (0x4 bytes), align: 1
  Segment part 69.            Intra module refs:   _Ty *_Uninit_copy(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Uninit_copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *)
                                   B9DE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9DA - B9DD (0x4 bytes), align: 1
  Segment part 70.            Intra module refs:   _FwdIt _Uninit_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned char const *, _FwdIt=unsigned char *, _Alloc=allocator<unsigned char>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty *_Uninit_copy(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned char]
                                   B9DA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9CE - B9D1 (0x4 bytes), align: 1
  Segment part 71.            Intra module refs:   _FwdIt _Uninitialized_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned char const *, _FwdIt=unsigned char *, _Alloc=allocator<unsigned char>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FwdIt _Uninit_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned char const *, _FwdIt=unsigned char *, _Alloc=allocator<unsigned char>]
                                   B9CE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9CA - B9CD (0x4 bytes), align: 1
  Segment part 72.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ucopy(unsigned char const *, unsigned char const *, unsigned char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FwdIt _Uninitialized_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned char const *, _FwdIt=unsigned char *, _Alloc=allocator<unsigned char>]
                                   B9CA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B5B6 - B5C5 (0x10 bytes), align: 1
  Segment part 53.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Ufill(unsigned char *, unsigned int, unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Uninitialized_fill_n(_FwdIt, _Diff, _Tval const &, _Alloc &)[with _FwdIt=unsigned char *, _Diff=unsigned int, _Tval=unsigned char, _Alloc=allocator<unsigned char>]
                                   B5B6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7A6 - B7B3 (0xe bytes), align: 1
  Segment part 10.            Intra module refs:   vector<char>::vector()
                                                   vector<int>::vector() (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Zero()
                                   B7A6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9C6 - B9C9 (0x4 bytes), align: 1
  Segment part 93.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short) (tool)
                                                   _Vector_value<allocator<void>>::_Bcapacity() const
                                                   _Vector_value<allocator<void>>::_Bsize() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Bfirst() const
                                   B9C6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B992 - B997 (0x6 bytes), align: 1
  Segment part 94.            Intra module refs:   _Vector_value<allocator<void>>::_Bsize() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Blast() const
                                   B992 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B98C - B991 (0x6 bytes), align: 1
  Segment part 95.            Intra module refs:   _Vector_value<allocator<void>>::_Bcapacity() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Bend() const
                                   B98C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B222 - B23B (0x1a bytes), align: 1
  Segment part 96.            Intra module refs:   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Size<_Sz>() const[with _Alloc=allocator<void>, _Sz=1]
                                                   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Size<_Sz>() const[with _Alloc=allocator<void>, _Sz=2] (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Bsize() const
                                   B222 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B23C - B255 (0x1a bytes), align: 1
  Segment part 97.            Intra module refs:   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Capacity<_Sz>() const[with _Alloc=allocator<void>, _Sz=1]
                                                   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Capacity<_Sz>() const[with _Alloc=allocator<void>, _Sz=2] (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Bcapacity() const
                                   B23C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B882 - B88B (0xa bytes), align: 1
  Segment part 78.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::capacity() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Capacity<_Sz>() const[with _Alloc=allocator<void>, _Sz=1]
                                   B882 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B88C - B895 (0xa bytes), align: 1
  Segment part 76.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::size() const
                                                   vector<char>::size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Size<_Sz>() const[with _Alloc=allocator<void>, _Sz=1]
                                   B88C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAAA - BAAB (0x2 bytes), align: 1
  Segment part 75.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_Xlen() const
                                   BAAA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B28A - B2A3 (0x1a bytes), align: 1
  Segment part 66.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Altyval() const
                                   B28A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AF3A - AF5D (0x24 bytes), align: 1
  Segment part 67.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_EraseAll()
                                   AF3A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A448 - A489 (0x42 bytes), align: 1
  Segment part 68.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
                                   A448 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA9C - BA9D (0x2 bytes), align: 1
  Segment part 42.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Erase(unsigned char *, unsigned char *)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_EraseAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Destroy(unsigned char *, unsigned char *)
                                   BA9C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B93E - B943 (0x6 bytes), align: 1
  Segment part 82.            Intra module refs:   vector<char>::_Append(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Vector_impl<_Ty, _Alloc>::_Insert_n(_Vector_impl<_Ty, _Alloc>::pointer, _Vector_impl<_Ty, _Alloc>::size_type, _Ty1 const &)[with _Ty=unsigned char, _Alloc=allocator<unsigned char>, _Ty1=char]
                                   B93E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A848 - A87F (0x38 bytes), align: 1
  Segment part 48.            Intra module refs:   vector<char>::erase(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Erase(unsigned char *, unsigned char *)
                                   A848 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9F2 - B9F5 (0x4 bytes), align: 1
  Segment part 63.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_EraseAll()
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Mytyfirst() const
                                   B9F2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9A4 - B9A9 (0x6 bytes), align: 1
  Segment part 47.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Erase(unsigned char *, unsigned char *)
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_EraseAll()
                                                   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                                   vector<char>::_Append(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Mytylast() const
                                   B9A4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B998 - B99D (0x6 bytes), align: 1
  Segment part 64.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Mytyend() const
                                   B998 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 896C - 8A6D (0x102 bytes), align: 1
  Segment part 80.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Insert_n0(unsigned char *, unsigned int, unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
                                   896C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9E2 - B9E5 (0x4 bytes), align: 1
  Segment part 77.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::size() const
                                   B9E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9E6 - B9E9 (0x4 bytes), align: 1
  Segment part 79.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::capacity() const
                                   B9E6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AFEE - B011 (0x24 bytes), align: 1
  Segment part 81.            Intra module refs:   void _Vector_impl<_Ty, _Alloc>::_Insert_n(_Vector_impl<_Ty, _Alloc>::pointer, _Vector_impl<_Ty, _Alloc>::size_type, _Ty1 const &)[with _Ty=unsigned char, _Alloc=allocator<unsigned char>, _Ty1=char]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Insert_n0(unsigned char *, unsigned int, unsigned char)
                                   AFEE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A9CC - AA01 (0x36 bytes), align: 1
  Segment part 56.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Insert_n0(unsigned char *, unsigned int, unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Ufill(unsigned char *, unsigned int, unsigned char)
                                   A9CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AC58 - AC85 (0x2e bytes), align: 1
  Segment part 73.            Intra module refs:   _Vector_impl<unsigned char, allocator<unsigned char>>::_Make_room(unsigned char *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned char, allocator<unsigned char>>::_Ucopy(unsigned char const *, unsigned char const *, unsigned char *)
                                   AC58 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B686 - B695 (0x10 bytes), align: 1
  Segment part 11.            Intra module refs:   DualPool::DualPool(unsigned int, ETL *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::vector()
                                   B686 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA2A - BA2D (0x4 bytes), align: 1
  Segment part 51.            Intra module refs:   vector<char>::operator[](unsigned int) (tool)
                                                   vector<char>::resize(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::begin()   BA2A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B902 - B907 (0x6 bytes), align: 1
  Segment part 52.            Intra module refs:   vector<char>::resize(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::end()     B902 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A37C - A3C1 (0x46 bytes), align: 1
  Segment part 85.            Intra module refs:   DualPool::DualPool(unsigned int, ETL *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::resize(unsigned int, char)
                                   A37C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA6E - BA71 (0x4 bytes), align: 1
  Segment part 83.            Intra module refs:   Tool::CountSelBitCnt(vector<char> const &) (tool)
                                                   vector<char>::_Append(unsigned int, char)
                                                   vector<char>::resize(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::size() const
                                   BA6E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: ACB4 - ACE1 (0x2e bytes), align: 1
  Segment part 50.            Intra module refs:   vector<char>::resize(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::erase(char *, char *)
                                   ACB4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AD68 - AD91 (0x2a bytes), align: 1
  Segment part 84.            Intra module refs:   vector<char>::resize(unsigned int, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::_Append(unsigned int, char)
                                   AD68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA02 - BA05 (0x4 bytes), align: 1
  Segment part 49.            Intra module refs:   vector<char>::erase(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::_P(char *)
                                   BA02 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9B2 - B9B5 (0x4 bytes), align: 1
  Segment part 41.            Intra module refs:   vector<char>::erase(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::_I(unsigned char *)
                                   B9B2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B896 - B89F (0xa bytes), align: 1
  Segment part 9.             Intra module refs:   DualPool::DualPool(unsigned int, ETL *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::PageCycle()
                                   B896 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B81E - B827 (0xa bytes), align: 1
  Segment part 98.            Intra module refs:   DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool)
                                                   DualPool::InitialPoolBorder()
                                                   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
                                                   ETL::DirtySwap() (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::PageCycle(unsigned int, int)
                                   B81E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9778 - 97E9 (0x72 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::DualPool(unsigned int, ETL *)
                                   9778            ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B46C - B481 (0x16 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsDirtySwapTriggered()
                                   B46C            ETL::TryToExecDualPoolAlgorithm() (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B42A - B43F (0x16 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsColdPoolResizeTriggered()
                                   B42A            ETL::TryToExecDualPoolAlgorithm() (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B3B6 - B3CD (0x18 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsHotPoolResizeTriggered()
                                   B3B6            ETL::TryToExecDualPoolAlgorithm() (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B646 - B655 (0x10 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::AddPageIntoPool(unsigned int, DataPage *, enum PoolIdentify)
                                   B646            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B666 - B675 (0x10 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopPageFromPool(unsigned int, DataPage *, enum PoolIdentify)
                                   B666            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A6E - 8B4D (0xe0 bytes), align: 1
  Segment part 21.            Intra module refs:   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   DualPool::TryToUpdateColdECTail(PageCycle *)
                                                   DualPool::TryToUpdateHotECTail(PageCycle *)
                                                   DualPool::TryToUpdateHotEECTail(PageCycle *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool)
                                   8A6E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0DC - A127 (0x4c bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontHotPoolByEraseCycle()
                                   A0DC            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A20C - A257 (0x4c bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackHotPoolByEraseCycle()
                                   A20C            ETL::HotPoolResize() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A258 - A2A3 (0x4c bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackColdPoolByEraseCycle()
                                   A258            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A1C0 - A20B (0x4c bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                   A1C0            ETL::ColdPoolResize() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9478 - 94FF (0x88 bytes), align: 1
  Segment part 26.            Intra module refs:   DualPool::PrintPool()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PrintPoolInfo(enum PoolIdentify)
                                   9478 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B3E - 9BA5 (0x68 bytes), align: 1
  Segment part 27.            Intra module refs:   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdateHotECTail(PageCycle *)
                                   9B3E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 999E - 9A05 (0x68 bytes), align: 1
  Segment part 28.            Intra module refs:   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdateColdECTail(PageCycle *)
                                   999E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A06 - 9A6D (0x68 bytes), align: 1
  Segment part 29.            Intra module refs:   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdateHotEECTail(PageCycle *)
                                   9A06 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: ABC8 - ABF7 (0x30 bytes), align: 1
  Segment part 30.            Intra module refs:   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdateHotECHead(PageCycle *)
                                   ABC8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AB98 - ABC7 (0x30 bytes), align: 1
  Segment part 31.            Intra module refs:   DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdateColdEECHead(PageCycle *)
                                   AB98 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8532 - 8645 (0x114 bytes), align: 1
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::InitialPoolBorder()
                                   8532            ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F3A - 9F8D (0x54 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::TryToUpdatePoolBorder(unsigned int, int, int)
                                   9F3A            ETL::Write(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6FE - B70B (0xe bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::GetPoolSize(enum PoolIdentify)
                                   B6FE            ETL::DirtySwap() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A880 - A8B7 (0x38 bytes), align: 1
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PrintPool()   A880            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B808 - B813 (0xc bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::SetHotECHead(PageCycle const &)
                                   B808            ETL::DirtySwap() (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7D8 - B7E3 (0xc bytes), align: 1
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::SetColdECTail(PageCycle const &)
                                   B7D8            ETL::DirtySwap() (etl)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1E - 5C28 (0xb bytes), align: 0
  Segment part 2.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C29 - 5C47 (0x1f bytes), align: 0
  Segment part 3.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C48 - 5C7E (0x37 bytes), align: 0
  Segment part 4.             Intra module refs:   DualPool::PrintPool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C7F - 5C8C (0xe bytes), align: 0
  Segment part 5.             Intra module refs:   DualPool::PrintPool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C8D - 5C9B (0xf bytes), align: 0
  Segment part 6.             Intra module refs:   DualPool::PrintPool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C9C - 5CD3 (0x38 bytes), align: 0
  Segment part 7.             Intra module refs:   DualPool::PrintPool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CD4 - 5D0F (0x3c bytes), align: 0
  Segment part 8.             Intra module refs:   DualPool::PrintPoolInfo(enum PoolIdentify)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etl.r43
  PROGRAM MODULE, NAME : etl

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B99E - B9A3 (0x6 bytes), align: 1
  Segment part 62.            Intra module refs:   void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<unsigned int>]
                                   B99E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAB6 - BAB7 (0x2 bytes), align: 1
  Segment part 72.            Intra module refs:   _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::Ref()
                                   BAB6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B696 - B6A5 (0x10 bytes), align: 1
  Segment part 63.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
                                   B696 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9C2 - B9C5 (0x4 bytes), align: 1
  Segment part 73.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
                                   B9C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAB8 - BAB9 (0x2 bytes), align: 1
  Segment part 65.            Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_AllocHolder(allocator<void>)
                                   BAB8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7FC - B807 (0xc bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<unsigned int>::operator()(unsigned int, unsigned int) const
                                   B7FC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9BA - B9BD (0x4 bytes), align: 1
  Segment part 76.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
                                                   Time::Show() (rtc)
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strrchr(char const *, int)
                                   B9BA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B864 - B86D (0xa bytes), align: 1
  Segment part 77.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<unsigned int const, unsigned int>::pair(unsigned int)
                                   B864 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B85A - B863 (0xa bytes), align: 1
  Segment part 78.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   B85A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9D2 - B9D5 (0x4 bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int, void *)
                                   B9D2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAB4 - BAB5 (0x2 bytes), align: 1
  Segment part 81.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   BAB4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B77C - B789 (0xe bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int)
                                   B77C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7CC - B7D7 (0xc bytes), align: 1
  Segment part 83.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::max_size() const
                                   B7CC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B39E - B3B5 (0x18 bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenNode::_GenNode(_Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, char)
                                   B39E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B938 - B93D (0x6 bytes), align: 1
  Segment part 85.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Color(_Genptr)
                                   B938 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B914 - B919 (0x6 bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Isnil(_Genptr)
                                   B914 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAA6 - BAA7 (0x2 bytes), align: 1
  Segment part 87.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lmost()
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Left(_Genptr)
                                   BAA6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA36 - BA39 (0x4 bytes), align: 1
  Segment part 88.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Root()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Parent(_Genptr)
                                   BA36 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA3E - BA41 (0x4 bytes), align: 1
  Segment part 89.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rmost()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Right(_Genptr)
                                   BA3E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AE5C - AE81 (0x26 bytes), align: 1
  Segment part 90.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                   AE5C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AE82 - AEA7 (0x26 bytes), align: 1
  Segment part 91.            Intra module refs:   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                   AE82 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97EA - 9857 (0x6e bytes), align: 1
  Segment part 92.            Intra module refs:   _Tree_algobase<allocator<void>>::_GenIter::_Dec()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                   97EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E36 - 9E8D (0x58 bytes), align: 1
  Segment part 93.            Intra module refs:   _Tree_algobase<allocator<void>>::_GenIter::_Inc()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                   9E36 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B90E - B913 (0x6 bytes), align: 1
  Segment part 94.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_GenIter(_Tree_algobase<allocator<void>>::_Genptr)
                                   B90E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B78A - B797 (0xe bytes), align: 1
  Segment part 95.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::operator==(_Tree_algobase<allocator<void>>::_GenIter const &) const
                                   B78A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B4E6 - B4F7 (0x12 bytes), align: 1
  Segment part 96.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                   B4E6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B51C - B52D (0x12 bytes), align: 1
  Segment part 97.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator++()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Inc()
                                   B51C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA46 - BA49 (0x4 bytes), align: 1
  Segment part 98.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Mynode() const
                                   BA46 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B1B2 - B1CD (0x1c bytes), align: 1
  Segment part 66.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
                                   B1B2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B2BE - B2D7 (0x1a bytes), align: 1
  Segment part 64.            Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Clear()
                                   B2BE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA52 - BA55 (0x4 bytes), align: 1
  Segment part 99.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Root()
                                   BA52 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA56 - BA59 (0x4 bytes), align: 1
  Segment part 100.           Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lmost()
                                   BA56 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA62 - BA65 (0x4 bytes), align: 1
  Segment part 101.           Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rmost()
                                   BA62 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9014 - 90C7 (0xb4 bytes), align: 1
  Segment part 102.           Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
                                   9014 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F60 - 9013 (0xb4 bytes), align: 1
  Segment part 103.           Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                   8F60 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7446 - 7675 (0x230 bytes), align: 1
  Segment part 104.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                   7446 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8EA - B8F1 (0x8 bytes), align: 1
  Segment part 105.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
                                   B8EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AF5E - AF81 (0x24 bytes), align: 1
  Segment part 106.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char)
                                   AF5E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B012 - B035 (0x24 bytes), align: 1
  Segment part 67.            Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   B012 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B414 - B429 (0x16 bytes), align: 1
  Segment part 68.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   B414 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA8A - BA8D (0x4 bytes), align: 1
  Segment part 108.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   BA8A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B30C - B325 (0x1a bytes), align: 1
  Segment part 109.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
                                   B30C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9BE - B9C1 (0x4 bytes), align: 1
  Segment part 110.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   B9BE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8CA - B8D1 (0x8 bytes), align: 1
  Segment part 112.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   B8CA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAB0 - BAB1 (0x2 bytes), align: 1
  Segment part 113.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   BAB0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9FE - BA01 (0x4 bytes), align: 1
  Segment part 114.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   B9FE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA06 - BA09 (0x4 bytes), align: 1
  Segment part 115.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   BA06 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA0E - BA11 (0x4 bytes), align: 1
  Segment part 111.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   BA0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B626 - B635 (0x10 bytes), align: 1
  Segment part 116.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   B626 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA1A - BA1D (0x4 bytes), align: 1
  Segment part 117.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator!=(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                   BA1A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B828 - B831 (0xa bytes), align: 1
  Segment part 118.           Intra module refs:   ETL::PrintPMTT()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator!=(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                   B828 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA92 - BA95 (0x4 bytes), align: 1
  Segment part 119.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const
                                   BA92 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6B6 - B6C5 (0x10 bytes), align: 1
  Segment part 120.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::end()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   B6B6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8E2 - B8E9 (0x8 bytes), align: 1
  Segment part 121.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator->() const
                                                   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
                                   B8E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA8E - BA91 (0x4 bytes), align: 1
  Segment part 122.           Intra module refs:   ETL::PrintPMTT()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator->() const
                                   BA8E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B636 - B645 (0x10 bytes), align: 1
  Segment part 123.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator++(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator++()
                                   B636 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B196 - B1B1 (0x1c bytes), align: 1
  Segment part 124.           Intra module refs:   ETL::PrintPMTT()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator++(int)
                                   B196 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B576 - B585 (0x10 bytes), align: 1
  Segment part 125.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--()
                                   B576 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B456 - B46B (0x16 bytes), align: 1
  Segment part 69.            Intra module refs:   map<unsigned int, unsigned int>::map()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
                                   B456 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B13A - B159 (0x20 bytes), align: 1
  Segment part 128.           Intra module refs:   ETL::PrintPMTT()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                   B13A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B356 - B36D (0x18 bytes), align: 1
  Segment part 129.           Intra module refs:   ETL::PrintPMTT()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::end()
                                   B356 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B4F8 - B509 (0x12 bytes), align: 1
  Segment part 130.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
                                   B4F8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81B0 - 82EB (0x13c bytes), align: 1
  Segment part 134.           Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
                                   81B0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C0A - 9C69 (0x60 bytes), align: 1
  Segment part 132.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                   9C0A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8DA - B8E1 (0x8 bytes), align: 1
  Segment part 127.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                   B8DA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8C2 - B8C9 (0x8 bytes), align: 1
  Segment part 133.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                   B8C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAA2 - BAA3 (0x2 bytes), align: 1
  Segment part 126.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Head() const
                                   BAA2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A174 - A1BF (0x4c bytes), align: 1
  Segment part 131.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                   A174 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA5A - BA5D (0x4 bytes), align: 1
  Segment part 107.           Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   BA5A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B2D8 - B2F1 (0x1a bytes), align: 1
  Segment part 70.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::map()
                                   B2D8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A960 - A995 (0x36 bytes), align: 1
  Segment part 136.           Intra module refs:   ETL::DirtySwap()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::operator[](unsigned int)
                                   A960 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E8E - 9EE3 (0x56 bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ETL(unsigned long long)
                                   9E8E            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AA02 - AA37 (0x36 bytes), align: 1
  Segment part 48.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::NeedFormat()       AA02 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 92BE - 9359 (0x9c bytes), align: 1
  Segment part 44.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Format(unsigned char, unsigned int)
                                   92BE            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F8E - 9FE1 (0x54 bytes), align: 1
  Segment part 43.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::SetInfoPage(InfoPage)
                                   9F8E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9704 - 9777 (0x74 bytes), align: 1
  Segment part 47.            Intra module refs:   ETL::NeedFormat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetInfoPage()      9704            DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool) (dualpool)
                                                   DualPool::InitialPoolBorder() (dualpool)
                                                   DualPool::PrintPoolInfo(enum PoolIdentify) (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7A38 - 7BF1 (0x1ba bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Write(unsigned long long, char const *, int)
                                   7A38            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7D9E - 7F0B (0x16e bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Read(unsigned long long, char *, int)
                                   7D9E            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B0BA - B0D9 (0x20 bytes), align: 1
  Segment part 40.            Intra module refs:   ETL::SetInfoPage(InfoPage)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteBytes(unsigned long long, char const *, int)
                                   B0BA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B11A - B139 (0x20 bytes), align: 1
  Segment part 35.            Intra module refs:   ETL::GetInfoPage()
                                                   ETL::ReadDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadBytes(unsigned long long, char *, int)
                                   B11A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9176 - 921B (0xa6 bytes), align: 1
  Segment part 42.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialPhysicalPages()
                                   9176 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90C8 - 9175 (0xae bytes), align: 1
  Segment part 38.            Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialDualpool()
                                   90C8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CF6 - 8DC5 (0xd0 bytes), align: 1
  Segment part 41.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::WriteDataPage(int, DataPage *)
                                   8CF6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C24 - 8CF5 (0xd2 bytes), align: 1
  Segment part 37.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ReadDataPage(int, DataPage *)
                                   8C24            DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool) (dualpool)
                                                   DualPool::InitialPoolBorder() (dualpool)
                                                   DualPool::PrintPoolInfo(enum PoolIdentify) (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B878 - B881 (0xa bytes), align: 1
  Segment part 36.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetDataPageSize()
                                   B878 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D26 - 9D81 (0x5c bytes), align: 1
  Segment part 39.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitLpnToPpnTable()
                                   9D26 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 968C - 9703 (0x78 bytes), align: 1
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::PrintPMTT()        968C            TestHotPageToColdPage(unsigned int) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 71F4 - 7445 (0x252 bytes), align: 1
  Segment part 52.            Intra module refs:   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::TryToExecDualPoolAlgorithm()
                                   71F4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7BF2 - 7D9D (0x1ac bytes), align: 1
  Segment part 51.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::DirtySwap()        7BF2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93EE - 9477 (0x8a bytes), align: 1
  Segment part 50.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ColdPoolResize()   93EE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C6A - 9CC9 (0x60 bytes), align: 1
  Segment part 49.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::HotPoolResize()    9C6A 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D10 - 5D2D (0x1e bytes), align: 0
  Segment part 4.             Intra module refs:   ETL::ETL(unsigned long long)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D2E - 5D44 (0x17 bytes), align: 0
  Segment part 5.             Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D45 - 5D59 (0x15 bytes), align: 0
  Segment part 6.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D5A - 5D74 (0x1b bytes), align: 0
  Segment part 7.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D75 - 5D79 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   ETL::InitialPhysicalPages()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D7A - 5D94 (0x1b bytes), align: 0
  Segment part 9.             Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D95 - 5DD0 (0x3c bytes), align: 0
  Segment part 10.            Intra module refs:   ETL::InitialDualpool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DD1 - 5DD5 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DD6 - 5DFB (0x26 bytes), align: 0
  Segment part 12.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DFC - 5E27 (0x2c bytes), align: 0
  Segment part 13.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E28 - 5E51 (0x2a bytes), align: 0
  Segment part 14.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E52 - 5E80 (0x2f bytes), align: 0
  Segment part 15.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E81 - 5EB0 (0x30 bytes), align: 0
  Segment part 16.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EB1 - 5EE0 (0x30 bytes), align: 0
  Segment part 17.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EE1 - 5F0F (0x2f bytes), align: 0
  Segment part 18.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F10 - 5F42 (0x33 bytes), align: 0
  Segment part 19.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F43 - 5F6B (0x29 bytes), align: 0
  Segment part 28.            Intra module refs:   ETL::PrintPMTT()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F6C - 5F7F (0x14 bytes), align: 0
  Segment part 29.            Intra module refs:   ETL::PrintPMTT()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F80 - 5FA8 (0x29 bytes), align: 0
  Segment part 30.            Intra module refs:   ETL::PrintPMTT()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FA9 - 5FB9 (0x11 bytes), align: 0
  Segment part 31.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FBA - 5FC9 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FCA - 5FDE (0x15 bytes), align: 0
  Segment part 33.            Intra module refs:   ETL::ColdPoolResize()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etltest.r43
  PROGRAM MODULE, NAME : etltest

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C0A - 1C0B (0x2 bytes), align: 1
  Segment part 42.            Intra module refs:   TestHotPageToColdPage(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           etl                     1C0A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AE0E - AE35 (0x28 bytes), align: 1
  Segment part 152.           Intra module refs:   TestHotPageToColdPage(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsSame(void const *, void const *, size_t)
                                   AE0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 786C - 7A37 (0x1cc bytes), align: 1
  Segment part 154.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TestHotPageToColdPage(unsigned int)
                                   786C            main (main)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FDF - 5FE5 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   TestHotPageToColdPage(unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FE6 - 6021 (0x3c bytes), align: 0
  Segment part 34.            Intra module refs:   TestHotPageToColdPage(unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6022 - 602E (0xd bytes), align: 0
  Segment part 35.            Intra module refs:   TestHotPageToColdPage(unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 602F - 604E (0x20 bytes), align: 0
  Segment part 37.            Intra module refs:   TestHotPageToColdPage(unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 604F - 606A (0x1c bytes), align: 0
  Segment part 38.            Intra module refs:   TestHotPageToColdPage(unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 606B - 6071 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   TestHotPageToColdPage(unsigned int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\gpio.r43
  PROGRAM MODULE, NAME : gpio

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 5C00 - 5C1B (0x1c bytes), align: 1
  Segment part 2.             Intra module refs:   GPIO_clearInterrupt
                                                   GPIO_getInterruptStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           GPIO_PORT_TO_BASE       5C00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A54A - A587 (0x3e bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_getInterruptStatus
                                   A54A            Port_2() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B036 - B057 (0x22 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_clearInterrupt     B036            Port_2() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\infopage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\led.r43
  PROGRAM MODULE, NAME : led

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0222 - 0223 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led1_Off()
                                                   Led1_On()
                                                   Led2_Off()
                                                   Led2_On()
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBOUT_L              0222 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBOUT                   0222 
           PBOUT_H                 0223 
           PBOUT_L                 0222 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0224 - 0225 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   I2C_GetACK() (rom)
                                                   I2C_RxByte() (rom)
                                                   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBDIR_L              0224 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBDIR                   0224 
           PBDIR_H                 0225 
           PBDIR_L                 0224 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 022A - 022B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBSEL_L              022A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBSEL                   022A 
           PBSEL_H                 022B 
           PBSEL_L                 022A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B4AA - B4BD (0x14 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Init()              B4AA            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B09A - B0B9 (0x20 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Round()             B09A            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B986 - B98B (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_On()               B986 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B980 - B985 (0x6 bytes), align: 1
  Segment part 7.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_On()               B980 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B932 - B937 (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_Off()              B932 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B91A - B91F (0x6 bytes), align: 1
  Segment part 6.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_Off()              B91A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA9E - BA9F (0x2 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_WorkLightOff()     BA9E            Restart_Init() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43
  PROGRAM MODULE, NAME : lowpower

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0202 - 0203 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAOUT_L              0202 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAOUT                   0202 
           PAOUT_H                 0203 
           PAOUT_L                 0202 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0204 - 0205 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PADIR_L              0204 
           LOCAL                   ADDRESS         
           =====                   =======         
           PADIR                   0204 
           PADIR_H                 0205 
           PADIR_L                 0204 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8A0 - B8A9 (0xa bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BoardPowerOn()          B8A0            main (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 020A - 020B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PASEL_L              020A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PASEL                   020A 
           PASEL_H                 020B 
           PASEL_L                 020A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0264 - 0265 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Restart_Init()
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDDIR_L              0264 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDDIR                   0264 
           PDDIR_H                 0265 
           PDDIR_L                 0264 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 02A4 - 02A5 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PFDIR_L              02A4 
           LOCAL                   ADDRESS         
           =====                   =======         
           PFDIR                   02A4 
           PFDIR_H                 02A5 
           PFDIR_L                 02A4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0100 - 0101 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIE1_L             0100 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIE1                  0100 
           SFRIE1_H                0101 
           SFRIE1_L                0100 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B2F2 - B30B (0x1a bytes), align: 1
  Segment part 28.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Time::Time()            B2F2 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00 - 1C01 (0x2 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Opened                  1C00            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C48 - 1C48 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_RS485_1              1C48 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C49 - 1C49 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart1_RX_INT         1C49            UART1_RX_ISR() (uart1)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DC6 - 8E93 (0xce bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    8DC6            Segment part 27 (?cstart)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6286 - 62AD (0x28 bytes), align: 1
  Segment part 34.            Intra module refs:   Port_2()::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()                6286 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DDC - 9E35 (0x5a bytes), align: 1
  Segment part 30.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Restart_Init()          9DDC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B0DA - B0F9 (0x20 bytes), align: 1
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Main_Init()             B0DA 
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD5 (0x56 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()::??INTVEC 84   FFD4 
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 6256 - 6257 (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   Opened
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6072 - 6076 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main::__FUNCTION__      6072 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6077 - 6084 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6085 - 60A1 (0x1d bytes), align: 0
  Segment part 14.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 60A2 - 60BD (0x1c bytes), align: 0
  Segment part 15.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 60BE - 60D8 (0x1b bytes), align: 0
  Segment part 16.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 60D9 - 60E3 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   Port_2()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\oa.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmap.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmm.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ram.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ref.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rom.r43
  PROGRAM MODULE, NAME : rom

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBIN_L               0220 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBIN                    0220 
           PBIN_H                  0221 
           PBIN_L                  0220 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6C6 - B6D3 (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_OFF()            B6C6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6D4 - B6E1 (0xe bytes), align: 1
  Segment part 28.            Intra module refs:   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_ON()             B6D4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E94 - 8F5F (0xcc bytes), align: 1
  Segment part 40.            Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
           LOCAL                   ADDRESS         
           =====                   =======         
           _ROM_WriteBytes(unsigned long long, char const *, int)
                                   8E94 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AFA6 - AFC9 (0x24 bytes), align: 1
  Segment part 41.            Intra module refs:   ROM_WriteBytes_Page(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsSame_(char const *, char const *, size_t)
                                   AFA6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7676 - 786B (0x1f6 bytes), align: 1
  Segment part 42.            Intra module refs:   ROM_WriteBytes_Page(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteBytes_Page_(unsigned long long, char const *, int)
                                   7676 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9500 - 9587 (0x88 bytes), align: 1
  Segment part 47.            Intra module refs:   ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteBytes_Page(unsigned long long, char const *, int)
                                   9500 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8070 - 81AF (0x140 bytes), align: 1
  Segment part 46.            Intra module refs:   ROM_ReadBytes(unsigned long long, char *, int)
                                                   ROM_WriteBytes_Page(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_ReadBytes_Page(unsigned long long, char *, int)
                                   8070 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B728 - B735 (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_SetNAK()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_high()      B728 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B736 - B743 (0xe bytes), align: 1
  Segment part 32.            Intra module refs:   I2C_START()
                                                   I2C_STOP()
                                                   I2C_SetACK()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_low()       B736 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B744 - B751 (0xe bytes), align: 1
  Segment part 31.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_SetACK()
                                                   I2C_SetNAK()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_high()      B744 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B752 - B75F (0xe bytes), align: 1
  Segment part 29.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_SetACK()
                                                   I2C_SetNAK()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_low()       B752 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A766 - A79F (0x3a bytes), align: 1
  Segment part 49.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
                                                   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_GetACK()            A766 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B5D6 - B5E5 (0x10 bytes), align: 1
  Segment part 44.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_SetACK()            B5D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B586 - B595 (0x10 bytes), align: 1
  Segment part 43.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_SetNAK()            B586 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AA6C - AA9F (0x34 bytes), align: 1
  Segment part 37.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
                                                   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_START()             AA6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A602 - A63D (0x3c bytes), align: 1
  Segment part 33.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
                                                   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_STOP()              A602 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A67A - A6B5 (0x3c bytes), align: 1
  Segment part 36.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
                                                   _ROM_WriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_TxByte(char)        A67A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A128 - A173 (0x4c bytes), align: 1
  Segment part 45.            Intra module refs:   ROM_ReadBytes_Page(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_RxByte()            A128 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8646 - 8757 (0x112 bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteBytes(unsigned long long, char const *, int)
                                   8646            ETL::RomWriteBytes(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8868 - 896B (0x104 bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_ReadBytes(unsigned long long, char *, int)
                                   8868            ETL::RomReadBytes(unsigned long long, char *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 60E4 - 610E (0x2b bytes), align: 0
  Segment part 7.             Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 610F - 613D (0x2f bytes), align: 0
  Segment part 8.             Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 613E - 6166 (0x29 bytes), align: 0
  Segment part 9.             Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6167 - 617F (0x19 bytes), align: 0
  Segment part 10.            Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6180 - 6198 (0x19 bytes), align: 0
  Segment part 11.            Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6199 - 61B1 (0x19 bytes), align: 0
  Segment part 12.            Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 61B2 - 61CA (0x19 bytes), align: 0
  Segment part 13.            Intra module refs:   ROM_WriteBytes_Page_(unsigned long long, char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 61CB - 61DA (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   ROM_WriteBytes_Page(unsigned long long, char const *, int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc.r43
  PROGRAM MODULE, NAME : rtc

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIN_L               0200 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIN                    0200 
           PAIN_H                  0201 
           PAIN_L                  0200 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0280 - 0281 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   READ_SDA()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEIN_L               0280 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEIN                    0280 
           PEIN_H                  0281 
           PEIN_L                  0280 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B4E - 8C23 (0xd6 bytes), align: 1
  Segment part 57.            Intra module refs:   Time::GetRtcTime()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_ReadTime(char *, char *, char *, char *, char *, char *, char *, char *)
                                   8B4E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A5C6 - A601 (0x3c bytes), align: 1
  Segment part 56.            Intra module refs:   _RTC_ReadTime(char *, char *, char *, char *, char *, char *, char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_Read_OneByte(char)
                                   A5C6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AB36 - AB67 (0x32 bytes), align: 1
  Segment part 62.            Intra module refs:   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_Write_OneByte(char, char)
                                   AB36            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B5C6 - B5D5 (0x10 bytes), align: 1
  Segment part 44.            Intra module refs:   _RTC_ReadTime(char *, char *, char *, char *, char *, char *, char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _BCDtoHEX(char)         B5C6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A4CA - A509 (0x40 bytes), align: 1
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTC_Open()              A4CA            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B920 - B925 (0x6 bytes), align: 1
  Segment part 46.            Intra module refs:   IIC_Ack()
                                                   IIC_NAck()
                                                   IIC_Read_Byte(unsigned char)
                                                   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_HIGH()          B920 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B944 - B949 (0x6 bytes), align: 1
  Segment part 48.            Intra module refs:   IIC_Ack()
                                                   IIC_NAck()
                                                   IIC_Read_Byte(unsigned char)
                                                   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_LOW()           B944 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B95C - B961 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   IIC_NAck()
                                                   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_HIGH()          B95C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B97A - B97F (0x6 bytes), align: 1
  Segment part 47.            Intra module refs:   IIC_Ack()
                                                   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_LOW()           B97A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6E2 - B6EF (0xe bytes), align: 1
  Segment part 97.            Intra module refs:   IIC_Read_Byte(unsigned char)
                                                   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           READ_SDA()              B6E2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AFCA - AFED (0x24 bytes), align: 1
  Segment part 55.            Intra module refs:   _RTC_Read_OneByte(char)
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Start()             AFCA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AEA8 - AECD (0x26 bytes), align: 1
  Segment part 49.            Intra module refs:   IIC_Wait_Ack()
                                                   _RTC_Read_OneByte(char)
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Stop()              AEA8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A72C - A765 (0x3a bytes), align: 1
  Segment part 53.            Intra module refs:   _RTC_Read_OneByte(char)
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Wait_Ack()          A72C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B1EA - B205 (0x1c bytes), align: 1
  Segment part 50.            Intra module refs:   IIC_Read_Byte(unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Ack()               B1EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B1CE - B1E9 (0x1c bytes), align: 1
  Segment part 51.            Intra module refs:   IIC_Read_Byte(unsigned char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_NAck()              B1CE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A7D8 - A80F (0x38 bytes), align: 1
  Segment part 54.            Intra module refs:   _RTC_Read_OneByte(char)
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Send_Byte(unsigned char)
                                   A7D8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A3C2 - A405 (0x44 bytes), align: 1
  Segment part 52.            Intra module refs:   _RTC_Read_OneByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Read_Byte(unsigned char)
                                   A3C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AAA0 - AAD1 (0x32 bytes), align: 1
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Time::GetRtcTime()      AAA0            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98C6 - 9931 (0x6c bytes), align: 1
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Time::Show()            98C6            main (main)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 61DB - 61FE (0x24 bytes), align: 0
  Segment part 9.             Intra module refs:   Time::Show()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 61FF - 6219 (0x1b bytes), align: 0
  Segment part 10.            Intra module refs:   Time::Show()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sfr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43
  PROGRAM MODULE, NAME : sys_status

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0352 - 0353 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCR0                 0352 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tec.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0340 - 0341 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CTL                  0340 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0342 - 0343 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCTL0                0342 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0380 - 0381 (0x2 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CTL                  0380 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0382 - 0383 (0x2 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCTL0                0382 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0392 - 0393 (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCR0                 0392 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C0 - 03C1 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CTL                  03C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C2 - 03C3 (0x2 bytes), align: 0
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL0                03C2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C4 - 03C5 (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL1                03C4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C6 - 03C7 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL2                03C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D2 - 03D3 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR0                 03D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D4 - 03D5 (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR1                 03D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D6 - 03D7 (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR2                 03D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03EE - 03EF (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0IV                   03EE 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0C - 1C0D (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   TIMERA0_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_ClockTicks            1C0C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0E - 1C0F (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Clear()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_count           1C0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8B2 - B8B9 (0x8 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Init()         B8B2            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8AA - B8B1 (0x8 bytes), align: 1
  Segment part 32.            Intra module refs:   TIMERA0_ISR()
                                                   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Clear()        B8AA            Main_Init() (main)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A406 - A447 (0x42 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Init(unsigned int)
                                   A406            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B926 - B92B (0x6 bytes), align: 1
  Segment part 34.            Intra module refs:   TIMERA0_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Clear()          B926            Main_Init() (main)
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 62AE - 62AF (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   TIMER0_A0_ISR()::??INTVEC 108
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()         62AE 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 62B0 - 62BD (0xe bytes), align: 1
  Segment part 40.            Intra module refs:   TIMERA0_ISR()::??INTVEC 98
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()           62B0 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 62BE - 62BF (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   TIMERB0_ISR()::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()           62BE 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 62C0 - 62F1 (0x32 bytes), align: 1
  Segment part 42.            Intra module refs:   TIMERB1_ISR()::??INTVEC 118
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()           62C0 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFE3 (0x64 bytes), align: 1
  Segment part 18. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()::??INTVEC 98
                                   FFE2 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFED (0x6e bytes), align: 1
  Segment part 19. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()::??INTVEC 108
                                   FFEC 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF7 (0x78 bytes), align: 1
  Segment part 20. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()::??INTVEC 118
                                   FFF6 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF9 (0x7a bytes), align: 1
  Segment part 21. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()::??INTVEC 120
                                   FFF8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tlv.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tool.r43
  PROGRAM MODULE, NAME : tool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B9D6 - B9D9 (0x4 bytes), align: 1
  Segment part 14.            Intra module refs:   _Ty *_Copy_backward_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned short]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Backward_copier<><_Ty, true>[with _Ty=unsigned short]::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                   B9D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9FA - B9FD (0x4 bytes), align: 1
  Segment part 15.            Intra module refs:   _Ty1 *_Copy_backward_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned short]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty *_Copy_backward_opt(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned short]
                                   B9FA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA96 - BA99 (0x4 bytes), align: 1
  Segment part 16.            Intra module refs:   _BidIt2 copy_backward(_BidIt1, _BidIt1, _BidIt2)[with _BidIt1=unsigned short *, _BidIt2=unsigned short *]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty1 *_Copy_backward_opt(_Ty1 *, _Ty1 *, _Ty1 *)[with _Ty1=unsigned short]
                                   BA96 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA86 - BA89 (0x4 bytes), align: 1
  Segment part 17.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _BidIt2 copy_backward(_BidIt1, _BidIt1, _BidIt2)[with _BidIt1=unsigned short *, _BidIt2=unsigned short *]
                                   BA86 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BABA - BABB (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<unsigned short>::allocator(allocator<_Other> const &)[with _Other=void]
                                   BABA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B92C - B931 (0x6 bytes), align: 1
  Segment part 21.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned short>::deallocate(unsigned short *, unsigned int)
                                   B92C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8F2 - B8F9 (0x8 bytes), align: 1
  Segment part 22.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned short>::allocate(unsigned int)
                                   B8F2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7B4 - B7BF (0xc bytes), align: 1
  Segment part 23.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<unsigned short>::max_size() const
                                   B7B4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA76 - BA79 (0x4 bytes), align: 1
  Segment part 24.            Intra module refs:   _Ty *_Uninit_copy(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned short]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Uninit_copier<><_Ty, true>[with _Ty=unsigned short]::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                   BA76 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA72 - BA75 (0x4 bytes), align: 1
  Segment part 25.            Intra module refs:   _FwdIt _Uninit_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned short const *, _FwdIt=unsigned short *, _Alloc=allocator<unsigned short>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Ty *_Uninit_copy(_Ty const *, _Ty const *, _Ty *)[with _Ty=unsigned short]
                                   BA72 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA42 - BA45 (0x4 bytes), align: 1
  Segment part 26.            Intra module refs:   _FwdIt _Uninitialized_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned short const *, _FwdIt=unsigned short *, _Alloc=allocator<unsigned short>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FwdIt _Uninit_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned short const *, _FwdIt=unsigned short *, _Alloc=allocator<unsigned short>]
                                   BA42 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA16 - BA19 (0x4 bytes), align: 1
  Segment part 27.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FwdIt _Uninitialized_copy(_InIt, _InIt, _FwdIt, _Alloc &)[with _InIt=unsigned short const *, _FwdIt=unsigned short *, _Alloc=allocator<unsigned short>]
                                   BA16 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B656 - B665 (0x10 bytes), align: 1
  Segment part 28.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Uninitialized_fill_n(_FwdIt, _Diff, _Tval const &, _Alloc &)[with _FwdIt=unsigned short *, _Diff=unsigned int, _Tval=unsigned short, _Alloc=allocator<unsigned short>]
                                   B656 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAA8 - BAA9 (0x2 bytes), align: 1
  Segment part 30.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<allocator<void>>::_ToBptr(void *)
                                   BAA8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8BA - B8C1 (0x8 bytes), align: 1
  Segment part 36.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Capacity<_Sz>() const[with _Alloc=allocator<void>, _Sz=2]
                                   B8BA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B8FA - B901 (0x8 bytes), align: 1
  Segment part 37.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
                                                   vector<int>::size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Size<_Sz>() const[with _Alloc=allocator<void>, _Sz=2]
                                   B8FA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B256 - B26F (0x1a bytes), align: 1
  Segment part 40.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
                                   B256 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AF16 - AF39 (0x24 bytes), align: 1
  Segment part 44.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                   AF16 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A336 - A37B (0x46 bytes), align: 1
  Segment part 46.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
                                   A336 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BAB2 - BAB3 (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Destroy(unsigned short *, unsigned short *)
                                   BAB2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B94A - B94F (0x6 bytes), align: 1
  Segment part 55.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<_Ty, _Alloc>::pointer _Vector_impl<_Ty, _Alloc>::_Insert(_Vector_impl<_Ty, _Alloc>::pointer, _Ty1 const &)[with _Ty=unsigned short, _Alloc=allocator<unsigned short>, _Ty1=unsigned short]
                                   B94A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B950 - B955 (0x6 bytes), align: 1
  Segment part 53.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Vector_impl<_Ty, _Alloc>::_Insert_n(_Vector_impl<_Ty, _Alloc>::pointer, _Vector_impl<_Ty, _Alloc>::size_type, _Ty1 const &)[with _Ty=unsigned short, _Alloc=allocator<unsigned short>, _Ty1=unsigned short]
                                   B950 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B956 - B95B (0x6 bytes), align: 1
  Segment part 57.            Intra module refs:   vector<int>::push_back(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(_Ty1 const &)[with _Ty1=int]
                                   B956 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9F6 - B9F9 (0x4 bytes), align: 1
  Segment part 42.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                   B9F6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B962 - B967 (0x6 bytes), align: 1
  Segment part 43.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                   B962 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B968 - B96D (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyend() const
                                   B968 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8758 - 8867 (0x110 bytes), align: 1
  Segment part 51.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                   8758 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9EE - B9F1 (0x4 bytes), align: 1
  Segment part 49.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
                                   B9EE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9EA - B9ED (0x4 bytes), align: 1
  Segment part 50.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
                                   B9EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A63E - A679 (0x3c bytes), align: 1
  Segment part 54.            Intra module refs:   _Vector_impl<_Ty, _Alloc>::pointer _Vector_impl<_Ty, _Alloc>::_Insert(_Vector_impl<_Ty, _Alloc>::pointer, _Ty1 const &)[with _Ty=unsigned short, _Alloc=allocator<unsigned short>, _Ty1=unsigned short]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
                                   A63E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AEF2 - AF15 (0x24 bytes), align: 1
  Segment part 52.            Intra module refs:   void _Vector_impl<_Ty, _Alloc>::_Insert_n(_Vector_impl<_Ty, _Alloc>::pointer, _Vector_impl<_Ty, _Alloc>::size_type, _Ty1 const &)[with _Ty=unsigned short, _Alloc=allocator<unsigned short>, _Ty1=unsigned short]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
                                   AEF2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A6B6 - A6F1 (0x3c bytes), align: 1
  Segment part 56.            Intra module refs:   void _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(_Ty1 const &)[with _Ty1=int]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
                                   A6B6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A810 - A847 (0x38 bytes), align: 1
  Segment part 47.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
                                                   _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
                                   A810 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: ACE2 - AD0F (0x2e bytes), align: 1
  Segment part 48.            Intra module refs:   _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                   ACE2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B616 - B625 (0x10 bytes), align: 1
  Segment part 58.            Intra module refs:   GetCharSelBitCnt(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<int>::vector()   B616 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9B6 - B9B9 (0x4 bytes), align: 1
  Segment part 60.            Intra module refs:   vector<int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<int>::begin()    B9B6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9AA - B9AD (0x4 bytes), align: 1
  Segment part 61.            Intra module refs:   vector<char>::operator[](unsigned int) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::begin() const
                                   B9AA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B9AE - B9B1 (0x4 bytes), align: 1
  Segment part 63.            Intra module refs:   GetCharSelBitCnt(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<int>::size() const
                                   B9AE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B760 - B76D (0xe bytes), align: 1
  Segment part 64.            Intra module refs:   Tool::SetBit(vector<char> &, int)
                                                   Tool::UnSetBit(vector<char> &, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::operator[](unsigned int)
                                   B760 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B5E6 - B5F5 (0x10 bytes), align: 1
  Segment part 65.            Intra module refs:   GetCharSelBitCnt(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<int>::operator[](unsigned int)
                                   B5E6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B76E - B77B (0xe bytes), align: 1
  Segment part 66.            Intra module refs:   Tool::CountSelBitCnt(vector<char> const &)
                                                   Tool::IsBitSet(vector<char> const &, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<char>::operator[](unsigned int) const
                                   B76E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7C0 - B7CB (0xc bytes), align: 1
  Segment part 67.            Intra module refs:   GetCharSelBitCnt(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vector<int>::push_back(int)
                                   B7C0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FE2 - A035 (0x54 bytes), align: 1
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::SwapMemory(void *, void *, unsigned int)
                                   9FE2            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A8F0 - A927 (0x38 bytes), align: 1
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::SetBit(vector<char> &, int)
                                   A8F0            DualPool::AddPageIntoPool(unsigned int, DataPage *, enum PoolIdentify) (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A8B8 - A8EF (0x38 bytes), align: 1
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::UnSetBit(vector<char> &, int)
                                   A8B8            DualPool::PopBackColdPoolByEraseCycle() (dualpool)
                                                   DualPool::PopBackHotPoolByEraseCycle() (dualpool)
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle() (dualpool)
                                                   DualPool::PopFrontHotPoolByEraseCycle() (dualpool)
                                                   DualPool::PopPageFromPool(unsigned int, DataPage *, enum PoolIdentify) (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A48A - A4C9 (0x40 bytes), align: 1
  Segment part 75.            Intra module refs:   Tool::IsBitUnSet(vector<char> const &, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::IsBitSet(vector<char> const &, int)
                                   A48A            DualPool::InitialPoolBorder() (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B6A6 - B6B5 (0x10 bytes), align: 1
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::IsBitUnSet(vector<char> const &, int)
                                   B6A6            DualPool::GetSonOfOldPage(PageCycle *, enum PoolIdentify, bool, bool) (dualpool)
                                                   DualPool::PrintPoolInfo(enum PoolIdentify) (dualpool)
                                                   DualPool::TryToUpdateColdECTail(PageCycle *) (dualpool)
                                                   DualPool::TryToUpdateColdEECHead(PageCycle *) (dualpool)
                                                   DualPool::TryToUpdateHotECHead(PageCycle *) (dualpool)
                                                   DualPool::TryToUpdateHotECTail(PageCycle *) (dualpool)
                                                   DualPool::TryToUpdateHotEECTail(PageCycle *) (dualpool)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B4BE - B4D1 (0x14 bytes), align: 1
  Segment part 77.            Intra module refs:   GetCharSelBitCnt(char)
           LOCAL                   ADDRESS         
           =====                   =======         
           CalcCharSelBitCnt(char)
                                   B4BE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A036 - A089 (0x54 bytes), align: 1
  Segment part 78.            Intra module refs:   Tool::CountSelBitCnt(vector<char> const &)
           LOCAL                   ADDRESS         
           =====                   =======         
           GetCharSelBitCnt(char)
                                   A036 
               calls direct
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C4A - 1C4A (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GetCharSelBitCnt(char)
           LOCAL                   ADDRESS         
           =====                   =======         
           GetCharSelBitCnt(char)::static guard for dict
                                   1C4A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C10 - 1C15 (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   GetCharSelBitCnt(char)
           LOCAL                   ADDRESS         
           =====                   =======         
           GetCharSelBitCnt(char)::dict
                                   1C10 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AC86 - ACB3 (0x2e bytes), align: 1
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::CountSelBitCnt(vector<char> const &)
                                   AC86            DualPool::GetPoolSize(enum PoolIdentify) (dualpool)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 621A - 6235 (0x1c bytes), align: 0
  Segment part 4.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6236 - 623C (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart0.r43
  PROGRAM MODULE, NAME : uart0

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 05C0 - 05C1 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0CTLW0_L          05C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0CTLW0               05C0 
           UCA0CTLW0_H             05C1 
           UCA0CTLW0_L             05C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C6 - 05C7 (0x2 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0BRW_L            05C6 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0BRW                 05C6 
           UCA0BRW_H               05C7 
           UCA0BRW_L               05C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C8 - 05C8 (0x1 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                05C8 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CC - 05CC (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               05CC 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CE - 05CE (0x1 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               05CE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05DC - 05DD (0x2 bytes), align: 0
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0ICTL_L           05DC 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0ICTL                05DC 
           UCA0ICTL_H              05DD 
           UCA0ICTL_L              05DC 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C16 - 1C17 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsGetInput              1C16 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C4B - 1ECF (0x285 bytes), align: 0
  Segment part 16.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_Buffer         1C4B 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C18 - 1C1D (0x6 bytes), align: 1
  Segment part 17.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_BufLen         1C18 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1E - 1C1F (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTIndex       1C1E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C20 - 1C21 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTLen         1C20 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 62F2 - 643B (0x14a bytes), align: 1
  Segment part 46.            Intra module refs:   UART0_RX_ISR()::??INTVEC 114
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()          62F2 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF3 (0x74 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()::??INTVEC 114
                                   FFF2 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart1.r43
  PROGRAM MODULE, NAME : uart1

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0244 - 0245 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCDIR_L              0244 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCDIR                   0244 
           PCDIR_H                 0245 
           PCDIR_L                 0244 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0600 - 0601 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1CTLW0_L          0600 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1CTLW0               0600 
           UCA1CTLW0_H             0601 
           UCA1CTLW0_L             0600 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0606 - 0607 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1BRW_L            0606 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1BRW                 0606 
           UCA1BRW_H               0607 
           UCA1BRW_L               0606 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0608 - 0608 (0x1 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                0608 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060C - 060C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               060C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060E - 060E (0x1 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               060E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 061C - 061D (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1ICTL_L           061C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1ICTL                061C 
           UCA1ICTL_H              061D 
           UCA1ICTL_L              061C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1ED0 - 21EF (0x320 bytes), align: 0
  Segment part 13.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_Buffer         1ED0 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C22 - 1C25 (0x4 bytes), align: 1
  Segment part 14.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_BufLen         1C22 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C26 - 1C27 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTIndex       1C26 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C28 - 1C29 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTLen         1C28 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2A - 1C2B (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           s_uart1_type            1C2A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: ADBC - ADE5 (0x2a bytes), align: 1
  Segment part 31.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Judge_Watermeter()      ADBC 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 643C - 6527 (0xec bytes), align: 1
  Segment part 32.            Intra module refs:   UART1_RX_ISR()::??INTVEC 92
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()          643C 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFDD (0x5e bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()::??INTVEC 92
                                   FFDC 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart3.r43
  PROGRAM MODULE, NAME : uart3

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 028A - 028B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PESEL_L              028A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PESEL                   028A 
           PESEL_H                 028B 
           PESEL_L                 028A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0680 - 0681 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3CTLW0_L          0680 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3CTLW0               0680 
           UCA3CTLW0_H             0681 
           UCA3CTLW0_L             0680 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0686 - 0687 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3BRW_L            0686 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3BRW                 0686 
           UCA3BRW_H               0687 
           UCA3BRW_L               0686 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0688 - 0688 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3MCTL                0688 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068C - 068C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3RXBUF               068C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068E - 068E (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3TXBUF               068E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 069C - 069D (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
                                                   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3ICTL_L           069C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3ICTL                069C 
           UCA3ICTL_H              069D 
           UCA3ICTL_L              069C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2C - 1C2D (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Buf            1C2C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 21F0 - 250F (0x320 bytes), align: 0
  Segment part 15.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_Buffer         21F0 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2E - 1C31 (0x4 bytes), align: 1
  Segment part 16.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_BufLen         1C2E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C32 - 1C33 (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTIndex       1C32 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C34 - 1C35 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTLen         1C34 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C36 - 1C37 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART3_ClearBuffer()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_RecvIndex      1C36 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C38 - 1C39 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Flag           1C38 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C3A - 1C3B (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Len            1C3A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 2510 - 2510 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart3_RX_INT         2510 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C3C - 1C3D (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   UART3_Open(int)
                                                   UART3_RX_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_uart3_type            1C3C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A7A0 - A7D7 (0x38 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Open(int)         A7A0            Console_Open() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B832 - B83B (0xa bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Close()           B832            Console_Close() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AB04 - AB35 (0x32 bytes), align: 1
  Segment part 24.            Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_ClearBuffer()     AB04 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 935A - 93ED (0x94 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Send(char *, int, int)
                                   935A            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6528 - 660D (0xe6 bytes), align: 1
  Segment part 35.            Intra module refs:   UART3_RX_ISR()::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()          6528 
               interrupt function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B7E4 - B7EF (0xc bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 B7E4            _Prout (?xprout)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD9 (0x5a bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()::??INTVEC 88
                                   FFD8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ucs.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43
    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B5A6 - B5B5 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   B5A6            _Nomemory() (?nomemory)
                                                   __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BAAE - BAAF (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            BAAE            __exit (?__exit)
                                                   __iar_ReportAssert (?_ReportAssert)
                                                   abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_ReportAssert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: AD3C - AD67 (0x2c bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_ReportAssert      AD3C            __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B496 - B4A9 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  B496            Segment part 6 (?_exit)
                                                   _exit (?_exit)
                                                   abort (?abort)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA0A, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   BA0A            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA0A - BA0D (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B814 - B81D (0xa bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   B814            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   _Allocator<void>::deallocate(void *) (dualpool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 921C - 92BD (0xa2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 921C            ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B270 - B289 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Div64u

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B3FE - B413 (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div                     B3FE            _GenldLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA1E - BA21 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    BA1E            Segment part 27 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul32fHw32

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 841C - 8531 (0x116 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32fHw32             841C            _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   scale (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 960E - 968B (0x7e bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32uto32f           960E            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B7F0 - B7FB (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32u           B7F0            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A2A4 - A2EF (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            A2A4            _Cast32fto32u (_Cast32fto32u)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A08A - A0DB (0x52 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 A08A            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 82EC - 841B (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 82EC            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Add32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7F0C - 7F0F (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Sub32f                 7F0C            _LdtobLargeNoMb (?xprintflarge_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7F10 - 806F (0x160 bytes), align: 1
  Segment part 1.             Intra module refs:   _Sub32f
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Add32f                 7F10 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?iutility

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B676 - B685 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Copy_a2           B676            _Uninit_copier<><_Ty, true>[with _Ty=unsigned short]::_Copy(unsigned short const *, unsigned short const *, unsigned short *) (tool)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B564 - B575 (0x12 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Copy_backward_a2
                                   B564            _Backward_copier<><_Ty, true>[with _Ty=unsigned short]::_Copy(unsigned short const *, unsigned short const *, unsigned short *) (tool)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B3E6 - B3FD (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              B3E6            ?DivMod16s (?DivMod816s)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
                                                   Utility_UintToStr4(unsigned int, char *) (common)
                                                   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Capacity<_Sz>() const[with _Alloc=allocator<void>, _Sz=1] (dualpool)
                                                   _Vector_value<_Alloc>::size_type _Vector_value<_Alloc>::_Size<_Sz>() const[with _Alloc=allocator<void>, _Sz=1] (dualpool)
                                                   __data16_calloc (?xxmemxcalloc)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: ABF8 - AC27 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              ABF8            ETL::InitialPhysicalPages() (etl)
                                                   Tool::IsBitSet(vector<char> const &, int) (tool)
                                                   Tool::SetBit(vector<char> &, int) (tool)
                                                   Tool::UnSetBit(vector<char> &, int) (tool)
                                                   __aeabi_assert (?xassert)
                                                   div (?div)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: AC28 - AC57 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              AC28            ?DivMod32s (?DivMod32s)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A50A - A549 (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32s              A50A            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B4D2 - B4E5 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            B4D2            _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B50A - B51B (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  B50A            ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Segment part 12 (?xprintflarge_nomb)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __data16_memcpy (?memzero)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: AA38 - AA6B (0x34 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 AA38            _Backward_copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *) (dualpool)
                                                   _Copier<><_Ty, true>[with _Ty=unsigned char]::_Copy(unsigned char const *, unsigned char const *, unsigned char *) (dualpool)
                                                   _Uninit_copy(char const *, char const *, char *) (dualpool)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ClearMemoryWords

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B606 - B615 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ClearMemoryWords       B606            ROM_WriteBytes_Page(unsigned long long, char const *, int) (rom)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B596 - B5A5 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        B596            ?cstart_init_zero (?cstart)
                                                   __data16_calloc (?xxmemxcalloc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: BA6A - BA6D (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         BA6A            ?cstart_init_copy (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul8Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B0FA - B0FD (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8Hw                 B0FA            _LitobLargeNoMb (?xprintflarge_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B0FE - B119 (0x1c bytes), align: 1
  Segment part 1.             Intra module refs:   ?Mul8Hw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16Hw                B0FE            __data16_calloc (?xxmemxcalloc)
           ?Mul16to32uHw           B0FE 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul16to32sHw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B206 - B221 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16to32sHw           B206            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C3E - 1C41 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          1C3E            operator new(size_t) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: AD92 - ADBB (0x2a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    AD92            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
                                                   _Allocator<void>::allocate(unsigned int) (dualpool)
               calls direct and indirect

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA7A - BA7D (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             BA7A            operator new(size_t) (?newop_0)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: AE36 - AE5B (0x26 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  AE36            DualPool::PrintPool() (dualpool)
                                                   DualPool::PrintPoolInfo(enum PoolIdentify) (dualpool)
                                                   ETL::ETL(unsigned long long) (etl)
                                                   ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::PrintPMTT() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   Port_2() (main)
                                                   ROM_WriteBytes_Page(unsigned long long, char const *, int) (rom)
                                                   ROM_WriteBytes_Page_(unsigned long long, char const *, int) (rom)
                                                   TestHotPageToColdPage(unsigned int) (etltest)
                                                   Time::Show() (rtc)
                                                   main (main)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR11

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA82 - BA85 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR11             BA82            _PutcharLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B798 - B7A5 (0xe bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            B798            _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B540 - B551 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  B540            TestHotPageToColdPage(unsigned int) (etltest)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strrchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B52E - B53F (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strrchr           B52E            strrchr(char const *, int) (etl)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xassert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: BA9A - BA9B (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_EmptyStepPoint    BA9A            DataPage::DataPage(int) (dualpool)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D82 - 9DDB (0x5a bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_assert          9D82            DataPage::DataPage(int) (dualpool)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xdunscal

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A2F0 - A335 (0x46 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dunscale          A2F0            _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B15A - B177 (0x1e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    B15A            __data16_findmem (?xxmemxmalloc)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C42 - 1C43 (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_GetMemChunk
    -------------------------------------------------------------------------
DATA16_HEAP
  Relative segment, address: 2512, align: 1
  Segment part 4.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintflarge_nomb

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6D5C - 71F3 (0x498 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLargeNoMb        6D5C            printf (?printf)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B058 - B05F (0x8 bytes), align: 1
  Segment part 23.            Intra module refs:   Segment part 26
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B060 - B067 (0x8 bytes), align: 1
  Segment part 24.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B068 - B073 (0xc bytes), align: 1
  Segment part 25.            Intra module refs:   Segment part 23
                                                   Segment part 24
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B074 - B079 (0x6 bytes), align: 1
  Segment part 26.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 660E - 6691 (0x84 bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 660E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6692 - 669F (0xe bytes), align: 1
  Segment part 9.             Intra module refs:   LoadInt
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 66A0 - 68DD (0x23e bytes), align: 1
  Segment part 10.            Intra module refs:   _LdtobLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLargeNoMb         66A0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 68DE - 68ED (0x10 bytes), align: 1
  Segment part 11.            Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 68EE - 68FB (0xe bytes), align: 1
  Segment part 12.            Intra module refs:   Segment part 11
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 68FC - 6919 (0x1e bytes), align: 1
  Segment part 13.            Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 691A - 695B (0x42 bytes), align: 1
  Segment part 14.            Intra module refs:   _LdtobLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           scale                   691A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 695C - 6B99 (0x23e bytes), align: 1
  Segment part 15.            Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLargeNoMb         695C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B9A - 6D3F (0x1a6 bytes), align: 1
  Segment part 16.            Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLargeNoMb         6B9A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D40 - 6D51 (0x12 bytes), align: 1
  Segment part 17.            Intra module refs:   _LitobLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D52 - 6D5B (0xa bytes), align: 1
  Segment part 18.            Intra module refs:   LoadInt
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A996 - A9CB (0x36 bytes), align: 1
  Segment part 28.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     A996 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: ADE6 - AE0D (0x28 bytes), align: 1
  Segment part 29.            Intra module refs:   _PrintfLargeNoMb
                                                   _PutcharsLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLargeNoMb       ADE6 
               calls indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: AD10 - AD3B (0x2c bytes), align: 1
  Segment part 30.            Intra module refs:   Segment part 24
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLargeNoMb      AD10 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B71A - B727 (0xe bytes), align: 1
  Segment part 20.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B850 - B859 (0xa bytes), align: 1
  Segment part 21.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: B552 - B563 (0x12 bytes), align: 1
  Segment part 22.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A588 - A5C5 (0x3e bytes), align: 1
  Segment part 27.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 623D - 6243 (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6244 - 6247 (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6248 - 624B (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 624C - 624F (0x4 bytes), align: 0
  Segment part 5.             Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6250 - 6253 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 6254 - 6255 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   _GenldLargeNoMb

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: B33E - B355 (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout                  B33E            printf (?printf)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxcalloc

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A6F2 - A72B (0x3a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_calloc         A6F2            calloc (dualpool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9588 - 960D (0x86 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           9588            __data16_findmem (?xxmemxmalloc)
                                                   free (Console)
                                                   operator delete(void *) (?delop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C44 - 1C47 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_findmem
                                                   __data16_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         1C44            __data16_free (?xxmemxfree)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BA6 - 9C09 (0x64 bytes), align: 1
  Segment part 3.             Intra module refs:   __data16_malloc
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        9BA6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9858 - 98C5 (0x6e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         9858            __data16_calloc (?xxmemxcalloc)
                                                   malloc (Console)
                                                   operator new(size_t) (?newop_0)
               calls direct




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0100 - 0103               4   rel    0
                                       0120 - 0121               2 
                                       0124 - 0127               4 
                                       012C - 012D               2 
                                       015C - 015D               2 
                                       0168 - 016F               8 
                                       0200 - 0205               6 
                                       020A - 020B               2 
                                       021A - 021D               4 
                                       0220 - 0225               6 
                                       022A - 022B               2 
                                       0244 - 0245               2 
                                       024A - 024B               2 
                                       0262 - 0265               4 
                                       026A - 026B               2 
                                       0280 - 0285               6 
                                       028A - 028B               2 
                                       02A4 - 02A5               2 
                                       0340 - 0343               4 
                                       0352 - 0353               2 
                                       0380 - 0383               4 
                                       0392 - 0393               2 
                                       03C0 - 03C7               8 
                                       03D2 - 03D7               6 
                                       03EE - 03EF               2 
                                       05C0 - 05C1               2 
                                       05C6 - 05C8               3 
                                       05CC - 05CC               1 
                                       05CE - 05CE               1 
                                       05DC - 05DD               2 
                                       0600 - 0601               2 
                                       0606 - 0608               3 
                                       060C - 060C               1 
                                       060E - 060E               1 
                                       061C - 061D               2 
                                       0680 - 0681               2 
                                       0686 - 0688               3 
                                       068C - 068C               1 
                                       068E - 068E               1 
                                       069C - 069D               2 
DATA16_I                               1C00 - 1C01               2   rel    1
DATA16_Z                               1C02 - 2510             90F   rel    1
DATA16_HEAP                            2512 - 4451            1F40   rel    1
DATA20_I                                  4452                       rel    1
DATA20_Z                                  4452                       rel    1
DATA20_N                                  4452                       rel    1
CODE_I                                    4452                       rel    1
CSTACK                                 4C60 - 5BFF             FA0   rel    1
DATA16_C                               5C00 - 6255             656   rel    1
DATA16_ID                              6256 - 6257               2   rel    1
CSTART                                 6258 - 6285              2E   rel    1
ISR_CODE                               6286 - 660D             388   rel    1
<CODE> 1                               660E - BABB            54AE   rel    1
CODE_ID                                   BABC                       rel    1
DATA20_ID                                 BABC                       rel    1
DATA20_C                                  BABC                       rel    1
INTVEC                                 FF80 - FFF9              7A   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 22 752 bytes of CODE  memory
 14 321 bytes of DATA  memory (+ 117 absolute )
  1 624 bytes of CONST memory

Errors: none
Warnings: 1

