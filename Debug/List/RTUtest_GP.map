Warning[w6]: Type conflict for external/entry "sys_errorcode_runcode", in module uart_config against external/entry in module timer; different basic types
  /* In module uart_config: */
  bool sys_errorcode_runcode;
  /* In module timer: */
  unsigned int sys_errorcode_runcode;
################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.4.100                                         #
#                                                                              #
#           Link time     =  20/Oct/2020  16:13:10                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#           Output file 1 =  \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43      #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\83797\AppData\Local\Temp\EWB538.tmp   #
#                            (\\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\aes.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\battbak.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\common.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\Console.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\crc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\datapage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\debug.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\dma.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\etl.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\etltest.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43    #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\gpio.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\infopage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\led.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\main.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\oa.r43              #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmap.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmm.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ram.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ref.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rom.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\sfr.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\tec.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\tlv.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\tool.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart0.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart1.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart3.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\ucs.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43 -o        #
#                            \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43 -l   #
#                            \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\lnk430f5438a.xcl"     #
#                            (-cmsp430 -D?CPU30_OFFSET=2 -QCODE_I=CODE_ID      #
#                            -QTLS16_I=TLS16_ID -D__iar_HWMUL=4C0              #
#                            -Z(CONST)INFO=1800-19FF                           #
#                            -Z(CONST)INFOA=1980-19FF                          #
#                            -Z(CONST)INFOB=1900-197F                          #
#                            -Z(CONST)INFOC=1880-18FF                          #
#                            -Z(CONST)INFOD=1800-187F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=1C00-5 #
#                            BFF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=5C00-FF7F                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE16=5C00-FF7F          #
#                            -P(CODE)CODE=5C00-FF7F,10000-45BFF                #
#                            -Z(CONST)DATA20_C,DATA20_ID,CODE_ID=5C00-FF7F,100 #
#                            40-45BFF                                          #
#                            -Z(CODE)INTVEC=FF80-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\multiplier32.xcl"     #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw32=?Mul32   #
#                            -e?Mul64Hw32=_Mul64i                              #
#                            -e?Mul32u32uto64iHw32=_Mul32u32uto64i             #
#                            -e?Mul32fHw32=_Mul32f                             #
#                            -e_Mul64fHw32Ptr=_Mul64fPtr) -D_STACK_SIZE=7D0    #
#                            -rt                                               #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\lib\dlib\dl430xlsfn.r43"            #
#                            -D_DATA16_HEAP_SIZE=2AF8 -s __program_start       #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2018 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           5EE2  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __code_model               = large
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

       All references to: _Printf
         were redirected to: _PrintfSmallNoMb



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       2AF8 
           _STACK_SIZE             07D0 
           __iar_HWMUL             04C0            ?Mul32Hw32 (?Mul32Hw32)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Segment part 1 (?Mul8Hw)
           ?CPU30_OFFSET           0002 
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\aes.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\battbak.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\common.r43
  PROGRAM MODULE, NAME : common

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 021A - 021B (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIE_L               021A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIE                    021A 
           PAIE_H                  021B 
           PAIE_L                  021A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 021C - 021D (0x2 bytes), align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIFG_L              021C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIFG                   021C 
           PAIFG_H                 021D 
           PAIFG_L                 021C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 024A - 024B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCSEL_L              024A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCSEL                   024A 
           PCSEL_H                 024B 
           PCSEL_L                 024A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0262 - 0263 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   Clear_ExternWatchdog()
                                                   Restart_Init() (main)
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDOUT_L              0262 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDOUT                   0262 
           PDOUT_H                 0263 
           PDOUT_L                 0262 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 026A - 026B (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDSEL_L              026A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDSEL                   026A 
           PDSEL_H                 026B 
           PDSEL_L                 026A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0282 - 0283 (0x2 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   IIC_SCL_HIGH() (rtc)
                                                   IIC_SCL_LOW() (rtc)
                                                   IIC_SDA_HIGH() (rtc)
                                                   IIC_SDA_LOW() (rtc)
                                                   Max3222_Open()
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEOUT_L              0282 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEOUT                   0282 
           PEOUT_H                 0283 
           PEOUT_L                 0282 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0284 - 0285 (0x2 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   IIC_Send_Byte(unsigned char) (rtc)
                                                   IIC_Start() (rtc)
                                                   IIC_Stop() (rtc)
                                                   IIC_Wait_Ack() (rtc)
                                                   Max3222_Open()
                                                   RTC_Open() (rtc)
                                                   Restart_Init() (main)
                                                   UART3_Open(int) (uart3)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEDIR_L              0284 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEDIR                   0284 
           PEDIR_H                 0285 
           PEDIR_L                 0284 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMCTL0_L            0120 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMCTL0                 0120 
           PMMCTL0_H               0121 
           PMMCTL0_L               0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0124 - 0125 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMHCTL_L           0124 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMHCTL                0124 
           SVSMHCTL_H              0125 
           SVSMHCTL_L              0124 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0126 - 0127 (0x2 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMLCTL_L           0126 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMLCTL                0126 
           SVSMLCTL_H              0127 
           SVSMLCTL_L              0126 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012C - 012D (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMIFG_L             012C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMIFG                  012C 
           PMMIFG_H                012D 
           PMMIFG_L                012C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0102 - 0103 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_Init()
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIFG1_L            0102 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIFG1                 0102 
           SFRIFG1_H               0103 
           SFRIFG1_L               0102 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0168 - 0169 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL4_L            0168 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL4                 0168 
           UCSCTL4_H               0169 
           UCSCTL4_L               0168 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016A - 016B (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL5_L            016A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL5                 016A 
           UCSCTL5_H               016B 
           UCSCTL5_L               016A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016C - 016D (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL6_L            016C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL6                 016C 
           UCSCTL6_H               016D 
           UCSCTL6_L               016C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016E - 016F (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL7_L            016E 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL7                 016E 
           UCSCTL7_H               016F 
           UCSCTL7_L               016E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 015C - 015D (0x2 bytes), align: 0
  Segment part 17. ROOT       Intra module refs:   Clock_Init()
                                                   System_Reset()
                                                   WatchDog_Clear() (timer)
                                                   WatchDog_Init() (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCTL_L             015C 
           LOCAL                   ADDRESS         
           =====                   =======         
           WDTCTL                  015C 
           WDTCTL_H                015D 
           WDTCTL_L                015C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C06 - 1C07 (0x2 bytes), align: 1
  Segment part 36.            Intra module refs:   TraceFunctionLine(char const *, int)
                                                   TraceMsgFuncLine(char *, int, char const *, int)
                                                   TraceOpen()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trace_open              1C06 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C08 - 1C09 (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   System_Delayms(unsigned int)
           LOCAL                   ADDRESS         
           =====                   =======         
           s_clock                 1C08 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0A - 1C0B (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   DownInt()
                                                   UpInt()
           LOCAL                   ADDRESS         
           =====                   =======         
           _int                    1C0A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0C - 1C0D (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   Clear_ExternWatchdog()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_pin             1C0C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E4A - 9E57 (0xe bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceOpen()             9E4A            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99F6 - 9A15 (0x20 bytes), align: 1
  Segment part 41.            Intra module refs:   TraceMsgFuncLine(char *, int, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceFunctionLine(char const *, int)
                                   99F6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 94F0 - 9521 (0x32 bytes), align: 1
  Segment part 43.            Intra module refs:   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceMsgFuncLine(char *, int, char const *, int)
                                   94F0            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9346 - 937D (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   Clock_Init()
                                                   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Delayms(unsigned int)
                                   9346            I2C_STOP() (rom)
                                                   Led_Round() (led)
                                                   RTC_Open() (rtc)
                                                   UART3_Send(char *, int, int) (uart3)
                                                   main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F98 - 9FA1 (0xa bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DownInt()               9F98            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BAC - 9BC3 (0x18 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpInt()                 9BAC            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A03E - A043 (0x6 bytes), align: 1
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EnInt()                 A03E            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E3C - 9E49 (0xe bytes), align: 1
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Max3222_Open()          9E3C            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A16 - 9A35 (0x20 bytes), align: 1
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Reset()          9A16            TIMERB1_ISR() (timer)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8606 - 866D (0x68 bytes), align: 1
  Segment part 62.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_SMCLK_DIV(int)    8606 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 866E - 86D5 (0x68 bytes), align: 1
  Segment part 63.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_ACLK_DIV(int)     866E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CAE - 8D03 (0x56 bytes), align: 1
  Segment part 64.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Set_Vcore(unsigned int)
                                   8CAE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 89E2 - 8A3D (0x5c bytes), align: 1
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_Init()            89E2            Restart_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C64 - 9C79 (0x16 bytes), align: 1
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_Strlen(char *)
                                   9C64            Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8532 - 859D (0x6c bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_UintToStr4(unsigned int, char *)
                                   8532            Console_WriteInt(int) (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A36 - 9A53 (0x1e bytes), align: 1
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear_ExternWatchdog()
                                   9A36            TIMERB1_ISR() (timer)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1C - 5C1D (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   TraceFunctionLine(char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1E - 5C2A (0xd bytes), align: 0
  Segment part 21.            Intra module refs:   System_Reset()
           LOCAL                   ADDRESS         
           =====                   =======         
           System_Reset()::__FUNCTION__
                                   5C1E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C2B - 5C37 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   System_Reset()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\Console.r43
  PROGRAM MODULE, NAME : Console

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A0DC - A0DF (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   DataPage::~DataPage() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free                    A0DC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A104 - A107 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  A104 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F52 - 9F5B (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Open()          9F52            Restart_Init() (main)
                                                   TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF0 - 9FF7 (0x8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Close()         9FF0            TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9860 - 9883 (0x24 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteString(char *)
                                   9860            TraceFunctionLine(char const *, int) (common)
                                                   TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9818 - 983B (0x24 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteStringln(char *)
                                   9818            TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CA2 - 9CB5 (0x14 bytes), align: 1
  Segment part 8.             Intra module refs:   Console_WriteInt(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteBytesln(char *, int)
                                   9CA2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AFA - 9B13 (0x1a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteInt(int)   9AFA            TraceFunctionLine(char const *, int) (common)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\crc.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43
  LIBRARY MODULE, NAME : ?cstart

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __MSP430F5212__         0000 
  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 5430, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0E, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5EDC, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CODE_I
  Relative segment, address: 5094, align: 1
  Segment part 5.
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: A15A, align: 1
  Segment part 6.
    -------------------------------------------------------------------------
DATA20_Z
  Relative segment, address: 5094, align: 1
  Segment part 7.
    -------------------------------------------------------------------------
DATA20_I
  Relative segment, address: 5094, align: 1
  Segment part 8.
    -------------------------------------------------------------------------
DATA20_ID
  Relative segment, address: A15A, align: 1
  Segment part 9.
    -------------------------------------------------------------------------
DATA20_C
  Relative segment, address: A15A, align: 1
  Segment part 10.
    -------------------------------------------------------------------------
DATA20_N
  Relative segment, address: 5094, align: 1
  Segment part 12.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5EE2 - 5EEB (0xa bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         5EE2            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           5EE2 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5EEC - 5EF7 (0xc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       5EEC            IsGetInput (uart0)
                                                   Is_RS485_1 (main)
                                                   Is_uart1_RX_INT (main)
                                                   Is_uart3_RX_INT (uart3)
                                                   Segment part 2 (?xgetmemchunk)
                                                   Segment part 7 (?rand)
                                                   Segment part 9 (?rand)
                                                   UART0_Rx_BufLen (uart0)
                                                   UART0_Rx_Buffer (uart0)
                                                   UART0_Rx_INTIndex (uart0)
                                                   UART0_Rx_INTLen (uart0)
                                                   UART1_Rx_BufLen (uart1)
                                                   UART1_Rx_Buffer (uart1)
                                                   UART1_Rx_INTIndex (uart1)
                                                   UART1_Rx_INTLen (uart1)
                                                   UART3_Rx_BufLen (uart3)
                                                   UART3_Rx_Buffer (uart3)
                                                   UART3_Rx_INTIndex (uart3)
                                                   UART3_Rx_INTLen (uart3)
                                                   UART3_Rx_RecvIndex (uart3)
                                                   UART3_Tx_Buf (uart3)
                                                   UART3_Tx_Flag (uart3)
                                                   UART3_Tx_Len (uart3)
                                                   _Randinit (?rand)
                                                   __data16_Aldata (?xxmemxmalloc)
                                                   __iar_New_hand (?new)
                                                   __iar_Tls_setup__Randinit (?rand)
                                                   __iar_Tls_setup__Randseed (?rand)
                                                   _int (common)
                                                   etl (etltest)
                                                   s_ClockTicks (timer)
                                                   s_clock (common)
                                                   s_reset_count (timer)
                                                   s_reset_pin (common)
                                                   s_uart1_type (uart1)
                                                   s_uart3_type (uart3)
                                                   trace_open (common)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5EF8 - 5F07 (0x10 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       5EF8            Opened (main)
                                                   _Randseed (?rand)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5F08 - 5F0F (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       5F08 
           ?cstart_end             5F10 
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: A15A, align: 1
  Segment part 28.            Intra module refs:   Segment part 5

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 15 (?cstart)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\datapage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\debug.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dma.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43
  PROGRAM MODULE, NAME : dualpool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A05C - A061 (0x6 bytes), align: 1
  Segment part 2.             Intra module refs:   void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_MemHolder(_Ty1 const &)[with _Ty1=less<PageCycle>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<PageCycle>]
                                   A05C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A148 - A149 (0x2 bytes), align: 1
  Segment part 26.            Intra module refs:   _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> const &() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::Ref() const
                                   A148 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A144 - A145 (0x2 bytes), align: 1
  Segment part 27.            Intra module refs:   _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::Ref()
                                   A144 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DBC - 9DCB (0x10 bytes), align: 1
  Segment part 3.             Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_MemHolder(_Ty1 const &)[with _Ty1=less<PageCycle>]
                                   9DBC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0F4 - A0F7 (0x4 bytes), align: 1
  Segment part 28.            Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> const &() const
                                   A0F4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A110 - A113 (0x4 bytes), align: 1
  Segment part 29.            Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> &()
                                   A110 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A13E - A13F (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_AllocHolder(allocator<void>)
                                   A13E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A13C - A13D (0x2 bytes), align: 1
  Segment part 30.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_Alval() const
                                   A13C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FE8 - 9FEF (0x8 bytes), align: 1
  Segment part 32.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<PageCycle>::operator()(_ParamTy, _ParamTy) const
                                   9FE8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F18 - 9F23 (0xc bytes), align: 1
  Segment part 33.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void swap(_Ty &, _Ty &)[with _Ty=char]
                                   9F18 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F7A - 9F83 (0xa bytes), align: 1
  Segment part 34.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   9F7A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F84 - 9F8D (0xa bytes), align: 1
  Segment part 35.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator, _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::pair(_TypeUtil::_ParameterType<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type, _TypeUtil::_ParameterType<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type)
                                   9F84 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 966C - 9695 (0x2a bytes), align: 1
  Segment part 44.            Intra module refs:   iterator_traits<_InIt>::difference_type distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
                                   966C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CDC - 9CED (0x12 bytes), align: 1
  Segment part 45.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iterator_traits<_InIt>::difference_type distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
                                   9CDC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A124 - A127 (0x4 bytes), align: 1
  Segment part 46.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int, void *)
                                   A124 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A120 - A123 (0x4 bytes), align: 1
  Segment part 47.            Intra module refs:   allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int) (etl)
                                                   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocate(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::allocate(unsigned int)
                                   A120 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A118 - A11B (0x4 bytes), align: 1
  Segment part 48.            Intra module refs:   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::deallocate(pointer, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::deallocate(void *)
                                   A118 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A114 - A117 (0x4 bytes), align: 1
  Segment part 50.            Intra module refs:   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::destroy(pointer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Destroy(_Ty *)[with _Ty=allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::value_type]
                                   A114 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A140 - A141 (0x2 bytes), align: 1
  Segment part 51.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   A140 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A038 - A03D (0x6 bytes), align: 1
  Segment part 52.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::deallocate(pointer, unsigned int)
                                   A038 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9ED6 - 9EE3 (0xe bytes), align: 1
  Segment part 53.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocate(unsigned int)
                                   9ED6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A09E - A0A3 (0x6 bytes), align: 1
  Segment part 54.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::destroy(pointer)
                                   A09E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F0C - 9F17 (0xc bytes), align: 1
  Segment part 55.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::max_size() const
                                   9F0C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B7C - 9B93 (0x18 bytes), align: 1
  Segment part 56.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenNode::_GenNode(_Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, char)
                                   9B7C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A044 - A049 (0x6 bytes), align: 1
  Segment part 57.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Color(_Genptr)
                                   A044 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A050 - A055 (0x6 bytes), align: 1
  Segment part 37.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Isnil(_Genptr)
                                   A050 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A142 - A143 (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lmost()
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Left(_Genptr)
                                   A142 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A108 - A10B (0x4 bytes), align: 1
  Segment part 36.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Root()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Parent(_Genptr)
                                   A108 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0E8 - A0EB (0x4 bytes), align: 1
  Segment part 40.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rmost()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Right(_Genptr)
                                   A0E8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97AA - 97CF (0x26 bytes), align: 1
  Segment part 58.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                   97AA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9784 - 97A9 (0x26 bytes), align: 1
  Segment part 39.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                   9784 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8456 - 84C3 (0x6e bytes), align: 1
  Segment part 59.            Intra module refs:   _Tree_algobase<allocator<void>>::_GenIter::_Dec()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                   8456 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BAA - 8C01 (0x58 bytes), align: 1
  Segment part 41.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_GenIter::_Inc()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                   8BAA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A056 - A05B (0x6 bytes), align: 1
  Segment part 60.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_GenIter(_Tree_algobase<allocator<void>>::_Genptr)
                                   A056 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EC8 - 9ED5 (0xe bytes), align: 1
  Segment part 61.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::operator==(_Tree_algobase<allocator<void>>::_GenIter const &) const
                                   9EC8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D5A - 9D6B (0x12 bytes), align: 1
  Segment part 62.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--() (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator--()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                   9D5A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D48 - 9D59 (0x12 bytes), align: 1
  Segment part 42.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Inc()
                                   9D48 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0D8 - A0DB (0x4 bytes), align: 1
  Segment part 63.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const (etl)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::_Mynode() const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Mynode() const
                                   A0D8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A8E - 9AA9 (0x1c bytes), align: 1
  Segment part 6.             Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>) (etl)
                                                   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
                                   9A8E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AE0 - 9AF9 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                                   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Clear()
                                   9AE0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0D0 - A0D3 (0x4 bytes), align: 1
  Segment part 64.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Root()
                                   A0D0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0C8 - A0CB (0x4 bytes), align: 1
  Segment part 65.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lmost()
                                   A0C8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0C4 - A0C7 (0x4 bytes), align: 1
  Segment part 66.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rmost()
                                   A0C4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7CC8 - 7D7B (0xb4 bytes), align: 1
  Segment part 67.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
                                   7CC8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7D7C - 7E2F (0xb4 bytes), align: 1
  Segment part 68.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                   7D7C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 62A4 - 66CB (0x428 bytes), align: 1
  Segment part 69.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                   62A4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7034 - 7263 (0x230 bytes), align: 1
  Segment part 70.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                   7034 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A14C - A14D (0x2 bytes), align: 1
  Segment part 49.            Intra module refs:   void _Destroy(_Ty *)[with _Ty=allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::value_type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::~_Node()
                                   A14C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BC4 - 9BDB (0x18 bytes), align: 1
  Segment part 71.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp() const
                                   9BC4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FC8 - 9FCF (0x8 bytes), align: 1
  Segment part 72.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp()
                                   9FC8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98A8 - 98CB (0x24 bytes), align: 1
  Segment part 73.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, PageCycle const &, char)
                                   98A8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9884 - 98A7 (0x24 bytes), align: 1
  Segment part 7.             Intra module refs:   _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_val(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
                                   9884 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C0C - 9C21 (0x16 bytes), align: 1
  Segment part 8.             Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree(less<PageCycle> const &, allocator<PageCycle> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_val(less<PageCycle> const &, allocator<PageCycle>)
                                   9C0C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0B4 - A0B7 (0x4 bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Kfn(PageCycle const &)
                                   A0B4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B62 - 9B7B (0x1a bytes), align: 1
  Segment part 76.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
                                   9B62 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0AC - A0AF (0x4 bytes), align: 1
  Segment part 77.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   A0AC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FE0 - 9FE7 (0x8 bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FE0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A150 - A151 (0x2 bytes), align: 1
  Segment part 80.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   A150 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0A4 - A0A7 (0x4 bytes), align: 1
  Segment part 81.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   A0A4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0A8 - A0AB (0x4 bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   A0A8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0B0 - A0B3 (0x4 bytes), align: 1
  Segment part 78.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   A0B0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D6C - 9D7B (0x10 bytes), align: 1
  Segment part 83.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9D6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0B8 - A0BB (0x4 bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator!=(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                   A0B8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F66 - 9F6F (0xa bytes), align: 1
  Segment part 85.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator!=(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                   9F66 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0CC - A0CF (0x4 bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::_Mynode() const
                                   A0CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DDC - 9DEB (0x10 bytes), align: 1
  Segment part 87.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::end()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9DDC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A010 - A017 (0x8 bytes), align: 1
  Segment part 88.            Intra module refs:   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator->() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
                                   A010 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0F8 - A0FB (0x4 bytes), align: 1
  Segment part 89.            Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator->() const
                                   A0F8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D7C - 9D8B (0x10 bytes), align: 1
  Segment part 43.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++(int)
                                                   iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++()
                                   9D7C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AAA - 9AC5 (0x1c bytes), align: 1
  Segment part 90.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++(int)
                                   9AAA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D8C - 9D9B (0x10 bytes), align: 1
  Segment part 91.            Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
                                                   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator--()
                                   9D8C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C4E - 9C63 (0x16 bytes), align: 1
  Segment part 9.             Intra module refs:   set<PageCycle>::set()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree(less<PageCycle> const &, allocator<PageCycle> const &)
                                   9C4E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99B6 - 99D5 (0x20 bytes), align: 1
  Segment part 94.            Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
                                   99B6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B94 - 9BAB (0x18 bytes), align: 1
  Segment part 95.            Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
                                                   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::end()
                                   9B94 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CCA - 9CDB (0x12 bytes), align: 1
  Segment part 96.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
                                   9CCA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7722 - 785D (0x13c bytes), align: 1
  Segment part 100.           Intra module refs:   DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
                                   7722 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 879E - 87FF (0x62 bytes), align: 1
  Segment part 101.           Intra module refs:   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                   879E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80C6 - 815D (0x98 bytes), align: 1
  Segment part 104.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                   80C6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9172 - 91AF (0x3e bytes), align: 1
  Segment part 111.           Intra module refs:   DualPool::PopPageFromPool(PageCycle, enum PoolIdentify)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
                                   9172 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A72 - 9A8D (0x1c bytes), align: 1
  Segment part 103.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                   9A72 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9934 - 9955 (0x22 bytes), align: 1
  Segment part 109.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
                                   9934 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98F0 - 9911 (0x22 bytes), align: 1
  Segment part 107.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
                                   98F0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 906E - 90B1 (0x44 bytes), align: 1
  Segment part 110.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
                                   906E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A3E - 8A99 (0x5c bytes), align: 1
  Segment part 102.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                   8A3E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8922 - 8981 (0x60 bytes), align: 1
  Segment part 98.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                   8922 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8982 - 89E1 (0x60 bytes), align: 1
  Segment part 108.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                   8982 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A018 - A01F (0x8 bytes), align: 1
  Segment part 93.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                   A018 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A020 - A027 (0x8 bytes), align: 1
  Segment part 99.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                   A020 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A030 - A037 (0x8 bytes), align: 1
  Segment part 105.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
                                   A030 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A158 - A159 (0x2 bytes), align: 1
  Segment part 92.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Head() const
                                   A158 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8862 - 88C1 (0x60 bytes), align: 1
  Segment part 106.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                   8862 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F3E - 8F89 (0x4c bytes), align: 1
  Segment part 97.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
                                   8F3E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A154 - A155 (0x2 bytes), align: 1
  Segment part 74.            Intra module refs:   _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Kfn(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>::_Kfn(PageCycle const &)
                                   A154 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AC6 - 9ADF (0x1a bytes), align: 1
  Segment part 10.            Intra module refs:   DualPool::DualPool(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set<PageCycle>::set()   9AC6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FAC - 9FB5 (0xa bytes), align: 1
  Segment part 112.           Intra module refs:   DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::PageCycle(unsigned int, unsigned int)
                                   9FAC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9554 - 9583 (0x30 bytes), align: 1
  Segment part 31.            Intra module refs:   less<PageCycle>::operator()(_ParamTy, _ParamTy) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::operator<(PageCycle const &) const
                                   9554 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 948A - 94BD (0x34 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::DualPool(unsigned int)
                                   948A            ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EA0 - 8EEF (0x50 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsDirtySwapTriggered()
                                   8EA0            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DAC - 8DFD (0x52 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsColdPoolResizeTriggered()
                                   8DAC            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E50 - 8E9F (0x50 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsHotPoolResizeTriggered()
                                   8E50            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8378 - 83E7 (0x70 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                   8378            ETL::InitialDualpool() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F8A - 8FD5 (0x4c bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopPageFromPool(PageCycle, enum PoolIdentify)
                                   8F8A            ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EF0 - 8F3D (0x4e bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontHotPoolByEraseCycle()
                                   8EF0            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C58 - 8CAD (0x56 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackHotPoolByEraseCycle()
                                   8C58            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A9A - 8AF5 (0x5c bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackColdPoolByEraseCycle()
                                   8A9A            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D04 - 8D57 (0x54 bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                   8D04            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etl.r43
  PROGRAM MODULE, NAME : etl

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A0FC - A0FF (0x4 bytes), align: 1
  Segment part 61.            Intra module refs:   DataPage::DataPage(int)
                                                   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
                                                   ETLFullWriteAndReadFullTest() (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calloc                  A0FC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 95E4 - 9613 (0x30 bytes), align: 1
  Segment part 50.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::DataPage(int)
                                   95E4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DFC - 9E0B (0x10 bytes), align: 1
  Segment part 51.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::~DataPage()   9DFC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A04A - A04F (0x6 bytes), align: 1
  Segment part 52.            Intra module refs:   void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<unsigned int>]
                                   A04A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A152 - A153 (0x2 bytes), align: 1
  Segment part 63.            Intra module refs:   _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::Ref()
                                   A152 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E0C - 9E1B (0x10 bytes), align: 1
  Segment part 53.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
                                   9E0C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0C0 - A0C3 (0x4 bytes), align: 1
  Segment part 65.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
                                   A0C0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F24 - 9F2F (0xc bytes), align: 1
  Segment part 69.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<unsigned int>::operator()(unsigned int, unsigned int) const
                                   9F24 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FB6 - 9FBF (0xa bytes), align: 1
  Segment part 70.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<unsigned int const, unsigned int>::pair(unsigned int)
                                   9FB6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F48 - 9F51 (0xa bytes), align: 1
  Segment part 71.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   9F48 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A14A - A14B (0x2 bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   A14A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E58 - 9E65 (0xe bytes), align: 1
  Segment part 77.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int)
                                   9E58 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F00 - 9F0B (0xc bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::max_size() const
                                   9F00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A028 - A02F (0x8 bytes), align: 1
  Segment part 100.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
                                   A028 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98CC - 98EF (0x24 bytes), align: 1
  Segment part 102.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char)
                                   98CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97F4 - 9817 (0x24 bytes), align: 1
  Segment part 57.            Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   97F4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C22 - 9C37 (0x16 bytes), align: 1
  Segment part 58.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   9C22 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0E4 - A0E7 (0x4 bytes), align: 1
  Segment part 106.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   A0E4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B2E - 9B47 (0x1a bytes), align: 1
  Segment part 108.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
                                   9B2E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A100 - A103 (0x4 bytes), align: 1
  Segment part 110.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   A100 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FC0 - 9FC7 (0x8 bytes), align: 1
  Segment part 114.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FC0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A13A - A13B (0x2 bytes), align: 1
  Segment part 116.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   A13A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A130 - A133 (0x4 bytes), align: 1
  Segment part 118.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   A130 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A134 - A137 (0x4 bytes), align: 1
  Segment part 120.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   A134 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A128 - A12B (0x4 bytes), align: 1
  Segment part 113.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   A128 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D9C - 9DAB (0x10 bytes), align: 1
  Segment part 122.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9D9C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0D4 - A0D7 (0x4 bytes), align: 1
  Segment part 124.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                   A0D4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0BC - A0BF (0x4 bytes), align: 1
  Segment part 126.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const
                                   A0BC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DCC - 9DDB (0x10 bytes), align: 1
  Segment part 128.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9DCC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF8 - 9FFF (0x8 bytes), align: 1
  Segment part 129.           Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
                                   9FF8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DEC - 9DFB (0x10 bytes), align: 1
  Segment part 131.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--()
                                   9DEC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C38 - 9C4D (0x16 bytes), align: 1
  Segment part 59.            Intra module refs:   map<unsigned int, unsigned int>::map()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
                                   9C38 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99D6 - 99F5 (0x20 bytes), align: 1
  Segment part 137.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                   99D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A098 - A09D (0x6 bytes), align: 1
  Segment part 26.            Intra module refs:   ETL::InitialDualpool()
                                                   ETLFullWriteAndReadFullTest() (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::size() const
                                   A098 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D36 - 9D47 (0x12 bytes), align: 1
  Segment part 139.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
                                   9D36 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 785E - 7999 (0x13c bytes), align: 1
  Segment part 147.           Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
                                   785E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88C2 - 8921 (0x60 bytes), align: 1
  Segment part 145.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                   88C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A000 - A007 (0x8 bytes), align: 1
  Segment part 136.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                   A000 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A008 - A00F (0x8 bytes), align: 1
  Segment part 146.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                   A008 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A156 - A157 (0x2 bytes), align: 1
  Segment part 135.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Head() const
                                   A156 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD6 - 9021 (0x4c bytes), align: 1
  Segment part 144.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                   8FD6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0EC - A0EF (0x4 bytes), align: 1
  Segment part 105.           Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   A0EC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B14 - 9B2D (0x1a bytes), align: 1
  Segment part 60.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::map()
                                   9B14 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9420 - 9455 (0x36 bytes), align: 1
  Segment part 148.           Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::operator[](unsigned int)
                                   9420 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C02 - 8C57 (0x56 bytes), align: 1
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ETL(unsigned long long)
                                   8C02            ETLFullWriteAndReadFullTest() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93EA - 941F (0x36 bytes), align: 1
  Segment part 41.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::NeedFormat()       93EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 802A - 80C5 (0x9c bytes), align: 1
  Segment part 37.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Format(unsigned char, unsigned int)
                                   802A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D58 - 8DAB (0x54 bytes), align: 1
  Segment part 36.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::SetInfoPage(InfoPage)
                                   8D58 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8304 - 8377 (0x74 bytes), align: 1
  Segment part 40.            Intra module refs:   ETL::NeedFormat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetInfoPage()      8304 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7264 - 746F (0x20c bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Write(unsigned long long, char const *, int)
                                   7264            ETLFullWriteAndReadFullTest() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7470 - 75DD (0x16e bytes), align: 1
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Read(unsigned long long, char *, int)
                                   7470            ETLFullWriteAndReadFullTest() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CEE - 9CFF (0x12 bytes), align: 1
  Segment part 45.            Intra module refs:   ETL::RomWriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteByte(unsigned long long, char)
                                   9CEE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D12 - 9D23 (0x12 bytes), align: 1
  Segment part 46.            Intra module refs:   ETL::RomReadBytes(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadByte(unsigned long long, char *)
                                   9D12 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 873A - 879D (0x64 bytes), align: 1
  Segment part 33.            Intra module refs:   ETL::SetInfoPage(InfoPage)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteBytes(unsigned long long, char const *, int)
                                   873A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8800 - 8861 (0x62 bytes), align: 1
  Segment part 28.            Intra module refs:   ETL::GetInfoPage()
                                                   ETL::ReadDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadBytes(unsigned long long, char *, int)
                                   8800 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7EE2 - 7F87 (0xa6 bytes), align: 1
  Segment part 35.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialPhysicalPages()
                                   7EE2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7B3C - 7C07 (0xcc bytes), align: 1
  Segment part 31.            Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialDualpool()
                                   7B3C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7A6C - 7B3B (0xd0 bytes), align: 1
  Segment part 34.            Intra module refs:   ETL::InitialPhysicalPages()
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::WriteDataPage(int, DataPage *)
                                   7A6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 799A - 7A6B (0xd2 bytes), align: 1
  Segment part 30.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ReadDataPage(int, DataPage *)
                                   799A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F70 - 9F79 (0xa bytes), align: 1
  Segment part 29.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetDataPageSize()
                                   9F70 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84C4 - 8531 (0x6e bytes), align: 1
  Segment part 32.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitLpnToPpnTable()
                                   84C4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6A76 - 6DF1 (0x37c bytes), align: 1
  Segment part 42.            Intra module refs:   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::TryToExecDualPoolAlgorithm()
                                   6A76 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C38 - 5C42 (0xb bytes), align: 0
  Segment part 2.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C43 - 5C61 (0x1f bytes), align: 0
  Segment part 3.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C62 - 5C7F (0x1e bytes), align: 0
  Segment part 4.             Intra module refs:   ETL::ETL(unsigned long long)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C80 - 5C96 (0x17 bytes), align: 0
  Segment part 5.             Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C97 - 5CAB (0x15 bytes), align: 0
  Segment part 6.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CAC - 5CC6 (0x1b bytes), align: 0
  Segment part 7.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CC7 - 5CCB (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   ETL::InitialPhysicalPages()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CCC - 5CE6 (0x1b bytes), align: 0
  Segment part 9.             Intra module refs:   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::TryToExecDualPoolAlgorithm()
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CE7 - 5D10 (0x2a bytes), align: 0
  Segment part 10.            Intra module refs:   ETL::InitialDualpool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D11 - 5D15 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D16 - 5D29 (0x14 bytes), align: 0
  Segment part 12.            Intra module refs:   ETL::InitLpnToPpnTable()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D2A - 5D41 (0x18 bytes), align: 0
  Segment part 13.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D42 - 5D52 (0x11 bytes), align: 0
  Segment part 14.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D53 - 5D62 (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D63 - 5D80 (0x1e bytes), align: 0
  Segment part 16.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D81 - 5D95 (0x15 bytes), align: 0
  Segment part 17.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D96 - 5DB2 (0x1d bytes), align: 0
  Segment part 18.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etltest.r43
  PROGRAM MODULE, NAME : etltest

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C0E - 1C0F (0x2 bytes), align: 1
  Segment part 35.            Intra module refs:   ETLFullWriteAndReadFullTest()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           etl                     1C0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6DF2 - 7033 (0x242 bytes), align: 1
  Segment part 142.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETLFullWriteAndReadFullTest()
                                   6DF2            main (main)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DB3 - 5DC3 (0x11 bytes), align: 0
  Segment part 19.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DC4 - 5DD1 (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DD2 - 5DE3 (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DE4 - 5DE8 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DE9 - 5E07 (0x1f bytes), align: 0
  Segment part 23.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E08 - 5E14 (0xd bytes), align: 0
  Segment part 24.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E15 - 5E2F (0x1b bytes), align: 0
  Segment part 25.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E30 - 5E46 (0x17 bytes), align: 0
  Segment part 26.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E47 - 5E5D (0x17 bytes), align: 0
  Segment part 27.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E5E - 5E69 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   ETLFullWriteAndReadFullTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E6A - 5E93 (0x2a bytes), align: 0
  Segment part 29.            Intra module refs:   ETLFullWriteAndReadFullTest()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\gpio.r43
  PROGRAM MODULE, NAME : gpio

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 5C00 - 5C1B (0x1c bytes), align: 1
  Segment part 2.             Intra module refs:   GPIO_clearInterrupt
                                                   GPIO_getInterruptStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           GPIO_PORT_TO_BASE       5C00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9134 - 9171 (0x3e bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_getInterruptStatus
                                   9134            Port_2() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9912 - 9933 (0x22 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_clearInterrupt     9912            Port_2() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\infopage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\led.r43
  PROGRAM MODULE, NAME : led

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0222 - 0223 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led1_Off()
                                                   Led1_On()
                                                   Led2_Off()
                                                   Led2_On()
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBOUT_L              0222 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBOUT                   0222 
           PBOUT_H                 0223 
           PBOUT_L                 0222 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0224 - 0225 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   I2C_GetACK() (rom)
                                                   I2C_RxByte() (rom)
                                                   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBDIR_L              0224 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBDIR                   0224 
           PBDIR_H                 0225 
           PBDIR_L                 0224 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 022A - 022B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBSEL_L              022A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBSEL                   022A 
           PBSEL_H                 022B 
           PBSEL_L                 022A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CB6 - 9CC9 (0x14 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Init()              9CB6            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9996 - 99B5 (0x20 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Round()             9996            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A062 - A067 (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_On()               A062 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A068 - A06D (0x6 bytes), align: 1
  Segment part 7.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_On()               A068 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A08C - A091 (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_Off()              A08C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A092 - A097 (0x6 bytes), align: 1
  Segment part 6.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_Off()              A092 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A14E - A14F (0x2 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_WorkLightOff()     A14E            Restart_Init() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43
  PROGRAM MODULE, NAME : lowpower

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0202 - 0203 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAOUT_L              0202 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAOUT                   0202 
           PAOUT_H                 0203 
           PAOUT_L                 0202 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0204 - 0205 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PADIR_L              0204 
           LOCAL                   ADDRESS         
           =====                   =======         
           PADIR                   0204 
           PADIR_H                 0205 
           PADIR_L                 0204 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F5C - 9F65 (0xa bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BoardPowerOn()          9F5C            main (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 020A - 020B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PASEL_L              020A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PASEL                   020A 
           PASEL_H                 020B 
           PASEL_L                 020A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0264 - 0265 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Restart_Init()
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDDIR_L              0264 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDDIR                   0264 
           PDDIR_H                 0265 
           PDDIR_L                 0264 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 02A4 - 02A5 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PFDIR_L              02A4 
           LOCAL                   ADDRESS         
           =====                   =======         
           PFDIR                   02A4 
           PFDIR_H                 02A5 
           PFDIR_L                 02A4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0100 - 0101 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIE1_L             0100 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIE1                  0100 
           SFRIE1_H                0101 
           SFRIE1_L                0100 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00 - 1C01 (0x2 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Opened                  1C00            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1CD2 - 1CD2 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_RS485_1              1CD2 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1CD3 - 1CD3 (0x1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart1_RX_INT         1CD3            UART1_RX_ISR() (uart1)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93B4 - 93E9 (0x36 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    93B4            Segment part 27 (?cstart)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F10 - 5F37 (0x28 bytes), align: 1
  Segment part 29.            Intra module refs:   Port_2()::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()                5F10 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8AF6 - 8B4F (0x5a bytes), align: 1
  Segment part 25.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Restart_Init()          8AF6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9976 - 9995 (0x20 bytes), align: 1
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Main_Init()             9976 
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD5 (0x56 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()::??INTVEC 84   FFD4 
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5EDC - 5EDD (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   Opened
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E94 - 5E98 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main::__FUNCTION__      5E94 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E99 - 5EA6 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EA7 - 5EB1 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   Port_2()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\oa.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmap.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmm.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ram.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ref.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rom.r43
  PROGRAM MODULE, NAME : rom

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBIN_L               0220 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBIN                    0220 
           PBIN_H                  0221 
           PBIN_L                  0220 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E66 - 9E73 (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_OFF()            9E66 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E74 - 9E81 (0xe bytes), align: 1
  Segment part 28.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_ON()             9E74 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7C08 - 7CC7 (0xc0 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteByte(unsigned long long, char)
                                   7C08            ETL::RomWriteByte(unsigned long long, char) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7E30 - 7EE1 (0xb2 bytes), align: 1
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_ReadByte(unsigned long long, char *)
                                   7E30            ETL::RomReadByte(unsigned long long, char *) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E82 - 9E8F (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_high()      9E82 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E90 - 9E9D (0xe bytes), align: 1
  Segment part 32.            Intra module refs:   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_low()       9E90 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E9E - 9EAB (0xe bytes), align: 1
  Segment part 31.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_high()      9E9E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EAC - 9EB9 (0xe bytes), align: 1
  Segment part 29.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_low()       9EAC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9262 - 929B (0x3a bytes), align: 1
  Segment part 49.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_GetACK()            9262 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9456 - 9489 (0x34 bytes), align: 1
  Segment part 37.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_START()             9456 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 91B0 - 91EB (0x3c bytes), align: 1
  Segment part 33.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_STOP()              91B0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 91EC - 9227 (0x3c bytes), align: 1
  Segment part 36.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_TxByte(char)        91EC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9022 - 906D (0x4c bytes), align: 1
  Segment part 45.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_RxByte()            9022 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc.r43
  PROGRAM MODULE, NAME : rtc

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIN_L               0200 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIN                    0200 
           PAIN_H                  0201 
           PAIN_L                  0200 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0280 - 0281 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   READ_SDA()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEIN_L               0280 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEIN                    0280 
           PEIN_H                  0281 
           PEIN_L                  0280 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 94BE - 94EF (0x32 bytes), align: 1
  Segment part 59.            Intra module refs:   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_Write_OneByte(char, char)
                                   94BE            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90F4 - 9133 (0x40 bytes), align: 1
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTC_Open()              90F4            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A06E - A073 (0x6 bytes), align: 1
  Segment part 43.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_HIGH()          A06E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A074 - A079 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_LOW()           A074 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A07A - A07F (0x6 bytes), align: 1
  Segment part 42.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_HIGH()          A07A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A080 - A085 (0x6 bytes), align: 1
  Segment part 44.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_LOW()           A080 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EBA - 9EC7 (0xe bytes), align: 1
  Segment part 94.            Intra module refs:   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           READ_SDA()              9EBA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 983C - 985F (0x24 bytes), align: 1
  Segment part 52.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Start()             983C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9738 - 975D (0x26 bytes), align: 1
  Segment part 46.            Intra module refs:   IIC_Wait_Ack()
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Stop()              9738 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9228 - 9261 (0x3a bytes), align: 1
  Segment part 50.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Wait_Ack()          9228 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 930E - 9345 (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Send_Byte(unsigned char)
                                   930E 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sfr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43
  PROGRAM MODULE, NAME : sys_status

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0352 - 0353 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCR0                 0352 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tec.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0340 - 0341 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CTL                  0340 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0342 - 0343 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCTL0                0342 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0380 - 0381 (0x2 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CTL                  0380 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0382 - 0383 (0x2 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCTL0                0382 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0392 - 0393 (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCR0                 0392 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C0 - 03C1 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CTL                  03C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C2 - 03C3 (0x2 bytes), align: 0
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL0                03C2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C4 - 03C5 (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL1                03C4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C6 - 03C7 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL2                03C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D2 - 03D3 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR0                 03D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D4 - 03D5 (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR1                 03D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D6 - 03D7 (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR2                 03D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03EE - 03EF (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0IV                   03EE 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C10 - 1C11 (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   TIMERA0_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_ClockTicks            1C10 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C12 - 1C13 (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Clear()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_count           1C12 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FD8 - 9FDF (0x8 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Init()         9FD8            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FD0 - 9FD7 (0x8 bytes), align: 1
  Segment part 32.            Intra module refs:   TIMERA0_ISR()
                                                   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Clear()        9FD0            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90B2 - 90F3 (0x42 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Init(unsigned int)
                                   90B2            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A086 - A08B (0x6 bytes), align: 1
  Segment part 34.            Intra module refs:   TIMERA0_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Clear()          A086            Main_Init() (main)
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F38 - 5F39 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   TIMER0_A0_ISR()::??INTVEC 108
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()         5F38 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F3A - 5F47 (0xe bytes), align: 1
  Segment part 40.            Intra module refs:   TIMERA0_ISR()::??INTVEC 98
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()           5F3A 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F48 - 5F49 (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   TIMERB0_ISR()::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()           5F48 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F4A - 5F87 (0x3e bytes), align: 1
  Segment part 42.            Intra module refs:   TIMERB1_ISR()::??INTVEC 118
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()           5F4A 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFE3 (0x64 bytes), align: 1
  Segment part 18. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()::??INTVEC 98
                                   FFE2 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFED (0x6e bytes), align: 1
  Segment part 19. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()::??INTVEC 108
                                   FFEC 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF7 (0x78 bytes), align: 1
  Segment part 20. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()::??INTVEC 118
                                   FFF6 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF9 (0x7a bytes), align: 1
  Segment part 21. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()::??INTVEC 120
                                   FFF8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tlv.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tool.r43
  PROGRAM MODULE, NAME : tool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8DFE - 8E4F (0x52 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::SwapMemory(void *, void *, unsigned int)
                                   8DFE            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EB2 - 5EB8 (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EB9 - 5ED4 (0x1c bytes), align: 0
  Segment part 3.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart0.r43
  PROGRAM MODULE, NAME : uart0

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 05C0 - 05C1 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0CTLW0_L          05C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0CTLW0               05C0 
           UCA0CTLW0_H             05C1 
           UCA0CTLW0_L             05C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C6 - 05C7 (0x2 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0BRW_L            05C6 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0BRW                 05C6 
           UCA0BRW_H               05C7 
           UCA0BRW_L               05C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C8 - 05C8 (0x1 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                05C8 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CC - 05CC (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               05CC 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CE - 05CE (0x1 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               05CE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05DC - 05DD (0x2 bytes), align: 0
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0ICTL_L           05DC 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0ICTL                05DC 
           UCA0ICTL_H              05DD 
           UCA0ICTL_L              05DC 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C14 - 1C15 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsGetInput              1C14 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1CD4 - 1F58 (0x285 bytes), align: 0
  Segment part 16.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_Buffer         1CD4 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C16 - 1C1B (0x6 bytes), align: 1
  Segment part 17.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_BufLen         1C16 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1C - 1C1D (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTIndex       1C1C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1E - 1C1F (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTLen         1C1E 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F88 - 60D1 (0x14a bytes), align: 1
  Segment part 46.            Intra module refs:   UART0_RX_ISR()::??INTVEC 114
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()          5F88 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF3 (0x74 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()::??INTVEC 114
                                   FFF2 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart1.r43
  PROGRAM MODULE, NAME : uart1

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0244 - 0245 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCDIR_L              0244 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCDIR                   0244 
           PCDIR_H                 0245 
           PCDIR_L                 0244 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0600 - 0601 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1CTLW0_L          0600 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1CTLW0               0600 
           UCA1CTLW0_H             0601 
           UCA1CTLW0_L             0600 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0606 - 0607 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1BRW_L            0606 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1BRW                 0606 
           UCA1BRW_H               0607 
           UCA1BRW_L               0606 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0608 - 0608 (0x1 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                0608 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060C - 060C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               060C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060E - 060E (0x1 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               060E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 061C - 061D (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1ICTL_L           061C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1ICTL                061C 
           UCA1ICTL_H              061D 
           UCA1ICTL_L              061C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1F59 - 2278 (0x320 bytes), align: 0
  Segment part 13.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_Buffer         1F59 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C20 - 1C23 (0x4 bytes), align: 1
  Segment part 14.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_BufLen         1C20 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C24 - 1C25 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTIndex       1C24 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C26 - 1C27 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTLen         1C26 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C28 - 1C29 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           s_uart1_type            1C28 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 96C0 - 96E9 (0x2a bytes), align: 1
  Segment part 31.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Judge_Watermeter()      96C0 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 60D2 - 61BD (0xec bytes), align: 1
  Segment part 32.            Intra module refs:   UART1_RX_ISR()::??INTVEC 92
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()          60D2 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFDD (0x5e bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()::??INTVEC 92
                                   FFDC 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart3.r43
  PROGRAM MODULE, NAME : uart3

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 028A - 028B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PESEL_L              028A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PESEL                   028A 
           PESEL_H                 028B 
           PESEL_L                 028A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0680 - 0681 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3CTLW0_L          0680 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3CTLW0               0680 
           UCA3CTLW0_H             0681 
           UCA3CTLW0_L             0680 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0686 - 0687 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3BRW_L            0686 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3BRW                 0686 
           UCA3BRW_H               0687 
           UCA3BRW_L               0686 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0688 - 0688 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3MCTL                0688 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068C - 068C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3RXBUF               068C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068E - 068E (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3TXBUF               068E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 069C - 069D (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
                                                   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3ICTL_L           069C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3ICTL                069C 
           UCA3ICTL_H              069D 
           UCA3ICTL_L              069C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2A - 1C2B (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Buf            1C2A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 2279 - 2598 (0x320 bytes), align: 0
  Segment part 15.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_Buffer         2279 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2C - 1C2F (0x4 bytes), align: 1
  Segment part 16.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_BufLen         1C2C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C30 - 1C31 (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTIndex       1C30 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C32 - 1C33 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTLen         1C32 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C34 - 1C35 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART3_ClearBuffer()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_RecvIndex      1C34 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C36 - 1C37 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Flag           1C36 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C38 - 1C39 (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Len            1C38 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 2599 - 2599 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart3_RX_INT         2599 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C3A - 1C3B (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   UART3_Open(int)
                                                   UART3_RX_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_uart3_type            1C3A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 92D6 - 930D (0x38 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Open(int)         92D6            Console_Open() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F8E - 9F97 (0xa bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Close()           9F8E            Console_Close() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9522 - 9553 (0x32 bytes), align: 1
  Segment part 24.            Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_ClearBuffer()     9522 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 815E - 81F1 (0x94 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Send(char *, int, int)
                                   815E            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 61BE - 62A3 (0xe6 bytes), align: 1
  Segment part 35.            Intra module refs:   UART3_RX_ISR()::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()          61BE 
               interrupt function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F3C - 9F47 (0xc bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 9F3C            _Prout (?xprout)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD9 (0x5a bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()::??INTVEC 88
                                   FFD8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ucs.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43
    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9E2C - 9E3B (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   9E2C            _Nomemory() (?nomemory)
                                                   __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A146 - A147 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            A146            __exit (?__exit)
                                                   __iar_ReportAssert (?_ReportAssert)
                                                   abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_ReportAssert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9640 - 966B (0x2c bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_ReportAssert      9640            __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9C8E - 9CA1 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  9C8E            Segment part 6 (?_exit)
                                                   _exit (?_exit)
                                                   abort (?abort)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A0E0, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   A0E0            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0E0 - A0E3 (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9FA2 - 9FAB (0xa bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   9FA2            ETL::InitLpnToPpnTable() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   _Allocator<void>::deallocate(void *) (dualpool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7F88 - 8029 (0xa2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 7F88            ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B48 - 9B61 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Div64u

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A0F0 - A0F3 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    A0F0            Segment part 27 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9BF4 - 9C0B (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              9BF4            ?DivMod16s (?DivMod816s)
                                                   Utility_UintToStr4(unsigned int, char *) (common)
                                                   __data16_calloc (?xxmemxcalloc)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 95B4 - 95E3 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              95B4            ETL::InitialPhysicalPages() (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   __aeabi_assert (?xassert)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9584 - 95B3 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              9584            _LitobSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9C7A - 9C8D (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            9C7A            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9D24 - 9D35 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  9D24            ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
                                                   __data16_memcpy (?memzero)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9DAC - 9DBB (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        9DAC            ?cstart_init_zero (?cstart)
                                                   __data16_calloc (?xxmemxcalloc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A10C - A10F (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         A10C            ?cstart_init_copy (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul8Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9956 - 9959 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8Hw                 9956            _LitobSmallNoMb (?xprintfsmall_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 995A - 9975 (0x1c bytes), align: 1
  Segment part 1.             Intra module refs:   ?Mul8Hw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16Hw                995A            __data16_calloc (?xxmemxcalloc)
           ?Mul16to32uHw           995A 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul32Hw32

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 97D0 - 97F3 (0x24 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32Hw32              97D0            Segment part 12 (?rand)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C3C - 1C3F (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          1C3C            operator new(size_t) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9696 - 96BF (0x2a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    9696            ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   _Allocator<void>::allocate(unsigned int) (dualpool)
               calls direct and indirect

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A11C - A11F (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             A11C            operator new(size_t) (?newop_0)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 975E - 9783 (0x26 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  975E            ETL::ETL(unsigned long long) (etl)
                                                   ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   Port_2() (main)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?rand

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 259A - 259A (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   rand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Randinit               259A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C40 - 1C43 (0x4 bytes), align: 1
  Segment part 3.             Intra module refs:   rand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Tls_setup__Randinit
                                   1C40 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C02 - 1C05 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Randseed               1C02 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C44 - 1C47 (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   rand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Tls_setup__Randseed
                                   1C44 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C48 - 1C4B (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   rand
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C4C - 1CCB (0x80 bytes), align: 1
  Segment part 9.             Intra module refs:   rand
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81F2 - 827D (0x8c bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rand                    81F2            ETLFullWriteAndReadFullTest() (etltest)
               calls direct and indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9712 - 9737 (0x26 bytes), align: 1
  Segment part 12.            Intra module refs:   rand
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5EDE - 5EE1 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _Randseed

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR11

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A12C - A12F (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR11             A12C            _PutcharSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9EE4 - 9EF1 (0xe bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            9EE4            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9D00 - 9D11 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  9D00            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xassert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A138 - A139 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_EmptyStepPoint    A138            DataPage::DataPage(int) (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B50 - 8BA9 (0x5a bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_assert          8B50            DataPage::DataPage(int) (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   ETLFullWriteAndReadFullTest() (etltest)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9A54 - 9A71 (0x1e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    9A54            __data16_findmem (?xxmemxmalloc)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1CCC - 1CCD (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_GetMemChunk
    -------------------------------------------------------------------------
DATA16_HEAP
  Relative segment, address: 259C, align: 1
  Segment part 4.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintfsmall_nomb

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 66CC - 6A75 (0x3aa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfSmallNoMb        66CC            printf (?printf)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EF2 - 9EFF (0xe bytes), align: 1
  Segment part 5.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E1C - 9E1D (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E1E - 9E2B (0xe bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 6
                                                   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 859E - 8605 (0x68 bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 859E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F30 - 9F3B (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   LoadInt
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 937E - 93B3 (0x36 bytes), align: 1
  Segment part 10.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     937E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 75DE - 7721 (0x144 bytes), align: 1
  Segment part 3.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobSmallNoMb         75DE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 96EA - 9711 (0x28 bytes), align: 1
  Segment part 11.            Intra module refs:   _PrintfSmallNoMb
                                                   _PutcharsSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharSmallNoMb       96EA 
               calls indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9614 - 963F (0x2c bytes), align: 1
  Segment part 12.            Intra module refs:   Segment part 5
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsSmallNoMb      9614 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5ED5 - 5EDA (0x6 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfSmallNoMb

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9BDC - 9BF3 (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout                  9BDC            printf (?printf)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxcalloc

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 929C - 92D5 (0x3a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_calloc         929C            calloc (etl)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 827E - 8303 (0x86 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           827E            __data16_findmem (?xxmemxmalloc)
                                                   free (Console)
                                                   operator delete(void *) (?delop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1CCE - 1CD1 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_findmem
                                                   __data16_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         1CCE            __data16_free (?xxmemxfree)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 86D6 - 8739 (0x64 bytes), align: 1
  Segment part 3.             Intra module refs:   __data16_malloc
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        86D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83E8 - 8455 (0x6e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         83E8            __data16_calloc (?xxmemxcalloc)
                                                   malloc (Console)
                                                   operator new(size_t) (?newop_0)
               calls direct




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0100 - 0103               4   rel    0
                                       0120 - 0121               2 
                                       0124 - 0127               4 
                                       012C - 012D               2 
                                       015C - 015D               2 
                                       0168 - 016F               8 
                                       0200 - 0205               6 
                                       020A - 020B               2 
                                       021A - 021D               4 
                                       0220 - 0225               6 
                                       022A - 022B               2 
                                       0244 - 0245               2 
                                       024A - 024B               2 
                                       0262 - 0265               4 
                                       026A - 026B               2 
                                       0280 - 0285               6 
                                       028A - 028B               2 
                                       02A4 - 02A5               2 
                                       0340 - 0343               4 
                                       0352 - 0353               2 
                                       0380 - 0383               4 
                                       0392 - 0393               2 
                                       03C0 - 03C7               8 
                                       03D2 - 03D7               6 
                                       03EE - 03EF               2 
                                       05C0 - 05C1               2 
                                       05C6 - 05C8               3 
                                       05CC - 05CC               1 
                                       05CE - 05CE               1 
                                       05DC - 05DD               2 
                                       0600 - 0601               2 
                                       0606 - 0608               3 
                                       060C - 060C               1 
                                       060E - 060E               1 
                                       061C - 061D               2 
                                       0680 - 0681               2 
                                       0686 - 0688               3 
                                       068C - 068C               1 
                                       068E - 068E               1 
                                       069C - 069D               2 
DATA16_I                               1C00 - 1C05               6   rel    1
DATA16_Z                               1C06 - 259A             995   rel    1
DATA16_HEAP                            259C - 5093            2AF8   rel    1
DATA20_I                                  5094                       rel    1
DATA20_Z                                  5094                       rel    1
DATA20_N                                  5094                       rel    1
CODE_I                                    5094                       rel    1
CSTACK                                 5430 - 5BFF             7D0   rel    1
DATA16_C                               5C00 - 5EDA             2DB   rel    1
DATA16_ID                              5EDC - 5EE1               6   rel    1
CSTART                                 5EE2 - 5F0F              2E   rel    1
ISR_CODE                               5F10 - 62A3             394   rel    1
<CODE> 1                               62A4 - A159            3EB6   rel    1
CODE_ID                                   A15A                       rel    1
DATA20_ID                                 A15A                       rel    1
DATA20_C                                  A15A                       rel    1
INTVEC                                 FF80 - FFF9              7A   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 17 140 bytes of CODE  memory
 15 459 bytes of DATA  memory (+ 117 absolute )
    737 bytes of CONST memory

Errors: none
Warnings: 1

