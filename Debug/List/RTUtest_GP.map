Warning[w6]: Type conflict for external/entry "sys_errorcode_runcode", in module uart_config against external/entry in module timer; different basic types
  /* In module uart_config: */
  bool sys_errorcode_runcode;
  /* In module timer: */
  unsigned int sys_errorcode_runcode;
################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.4.100                                         #
#                                                                              #
#           Link time     =  20/Oct/2020  20:48:46                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#           Output file 1 =  \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43      #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\83797\AppData\Local\Temp\EWB1A.tmp    #
#                            (\\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\aes.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\battbak.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\common.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\Console.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\crc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\datapage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\debug.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\dma.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\etl.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\etltest.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43    #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\gpio.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\infopage.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\led.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\main.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\oa.r43              #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmap.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmm.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ram.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ref.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rom.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\sfr.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\tec.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\tlv.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\tool.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart0.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart1.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart3.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\ucs.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43 -o        #
#                            \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43 -l   #
#                            \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\lnk430f5438a.xcl"     #
#                            (-cmsp430 -D?CPU30_OFFSET=2 -QCODE_I=CODE_ID      #
#                            -QTLS16_I=TLS16_ID -D__iar_HWMUL=4C0              #
#                            -Z(CONST)INFO=1800-19FF                           #
#                            -Z(CONST)INFOA=1980-19FF                          #
#                            -Z(CONST)INFOB=1900-197F                          #
#                            -Z(CONST)INFOC=1880-18FF                          #
#                            -Z(CONST)INFOD=1800-187F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=1C00-5 #
#                            BFF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=5C00-FF7F                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE16=5C00-FF7F          #
#                            -P(CODE)CODE=5C00-FF7F,10000-45BFF                #
#                            -Z(CONST)DATA20_C,DATA20_ID,CODE_ID=5C00-FF7F,100 #
#                            40-45BFF                                          #
#                            -Z(CODE)INTVEC=FF80-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\multiplier32.xcl"     #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw32=?Mul32   #
#                            -e?Mul64Hw32=_Mul64i                              #
#                            -e?Mul32u32uto64iHw32=_Mul32u32uto64i             #
#                            -e?Mul32fHw32=_Mul32f                             #
#                            -e_Mul64fHw32Ptr=_Mul64fPtr) -D_STACK_SIZE=7D0    #
#                            -rt                                               #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\lib\dlib\dl430xlsfn.r43"            #
#                            -D_DATA16_HEAP_SIZE=2AF8 -s __program_start       #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2018 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           5FAE  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __code_model               = large
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

       All references to: _Printf
         were redirected to: _PrintfSmallNoMb



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       2AF8 
           _STACK_SIZE             07D0 
           __iar_HWMUL             04C0            ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Segment part 1 (?Mul8Hw)
           ?CPU30_OFFSET           0002 
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\aes.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\battbak.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\common.r43
  PROGRAM MODULE, NAME : common

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 021A - 021B (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIE_L               021A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIE                    021A 
           PAIE_H                  021B 
           PAIE_L                  021A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 021C - 021D (0x2 bytes), align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIFG_L              021C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIFG                   021C 
           PAIFG_H                 021D 
           PAIFG_L                 021C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 024A - 024B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCSEL_L              024A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCSEL                   024A 
           PCSEL_H                 024B 
           PCSEL_L                 024A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0262 - 0263 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   Clear_ExternWatchdog()
                                                   Restart_Init() (main)
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDOUT_L              0262 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDOUT                   0262 
           PDOUT_H                 0263 
           PDOUT_L                 0262 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 026A - 026B (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDSEL_L              026A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDSEL                   026A 
           PDSEL_H                 026B 
           PDSEL_L                 026A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0282 - 0283 (0x2 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   IIC_SCL_HIGH() (rtc)
                                                   IIC_SCL_LOW() (rtc)
                                                   IIC_SDA_HIGH() (rtc)
                                                   IIC_SDA_LOW() (rtc)
                                                   Max3222_Open()
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEOUT_L              0282 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEOUT                   0282 
           PEOUT_H                 0283 
           PEOUT_L                 0282 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0284 - 0285 (0x2 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   IIC_Send_Byte(unsigned char) (rtc)
                                                   IIC_Start() (rtc)
                                                   IIC_Stop() (rtc)
                                                   IIC_Wait_Ack() (rtc)
                                                   Max3222_Open()
                                                   RTC_Open() (rtc)
                                                   Restart_Init() (main)
                                                   UART3_Open(int) (uart3)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEDIR_L              0284 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEDIR                   0284 
           PEDIR_H                 0285 
           PEDIR_L                 0284 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMCTL0_L            0120 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMCTL0                 0120 
           PMMCTL0_H               0121 
           PMMCTL0_L               0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0124 - 0125 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMHCTL_L           0124 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMHCTL                0124 
           SVSMHCTL_H              0125 
           SVSMHCTL_L              0124 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0126 - 0127 (0x2 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMLCTL_L           0126 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMLCTL                0126 
           SVSMLCTL_H              0127 
           SVSMLCTL_L              0126 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012C - 012D (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMIFG_L             012C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMIFG                  012C 
           PMMIFG_H                012D 
           PMMIFG_L                012C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0102 - 0103 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_Init()
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIFG1_L            0102 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIFG1                 0102 
           SFRIFG1_H               0103 
           SFRIFG1_L               0102 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0168 - 0169 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL4_L            0168 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL4                 0168 
           UCSCTL4_H               0169 
           UCSCTL4_L               0168 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016A - 016B (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL5_L            016A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL5                 016A 
           UCSCTL5_H               016B 
           UCSCTL5_L               016A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016C - 016D (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL6_L            016C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL6                 016C 
           UCSCTL6_H               016D 
           UCSCTL6_L               016C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016E - 016F (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL7_L            016E 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL7                 016E 
           UCSCTL7_H               016F 
           UCSCTL7_L               016E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 015C - 015D (0x2 bytes), align: 0
  Segment part 17. ROOT       Intra module refs:   Clock_Init()
                                                   System_Reset()
                                                   WatchDog_Clear() (timer)
                                                   WatchDog_Init() (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCTL_L             015C 
           LOCAL                   ADDRESS         
           =====                   =======         
           WDTCTL                  015C 
           WDTCTL_H                015D 
           WDTCTL_L                015C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C02 - 1C03 (0x2 bytes), align: 1
  Segment part 36.            Intra module refs:   TraceFunctionLine(char const *, int)
                                                   TraceMsgFuncLine(char *, int, char const *, int)
                                                   TraceOpen()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trace_open              1C02 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C04 - 1C05 (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   System_Delayms(unsigned int)
           LOCAL                   ADDRESS         
           =====                   =======         
           s_clock                 1C04 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C06 - 1C07 (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   DownInt()
                                                   UpInt()
           LOCAL                   ADDRESS         
           =====                   =======         
           _int                    1C06 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C08 - 1C09 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   Clear_ExternWatchdog()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_pin             1C08 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DA6 - 9DB3 (0xe bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceOpen()             9DA6            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98C2 - 98E1 (0x20 bytes), align: 1
  Segment part 41.            Intra module refs:   TraceMsgFuncLine(char *, int, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceFunctionLine(char const *, int)
                                   98C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 943E - 946F (0x32 bytes), align: 1
  Segment part 43.            Intra module refs:   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceMsgFuncLine(char *, int, char const *, int)
                                   943E            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9294 - 92CB (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   Clock_Init()
                                                   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Delayms(unsigned int)
                                   9294            I2C_STOP() (rom)
                                                   Led_Round() (led)
                                                   RTC_Open() (rtc)
                                                   UART3_Send(char *, int, int) (uart3)
                                                   main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EE2 - 9EEB (0xa bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DownInt()               9EE2            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AC0 - 9AD7 (0x18 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpInt()                 9AC0            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F86 - 9F8B (0x6 bytes), align: 1
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EnInt()                 9F86            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DEC - 9DF9 (0xe bytes), align: 1
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Max3222_Open()          9DEC            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9922 - 9941 (0x20 bytes), align: 1
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Reset()          9922            TIMERB1_ISR() (timer)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 85B6 - 861D (0x68 bytes), align: 1
  Segment part 62.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_SMCLK_DIV(int)    85B6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84E6 - 854D (0x68 bytes), align: 1
  Segment part 63.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_ACLK_DIV(int)     84E6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BF6 - 8C4B (0x56 bytes), align: 1
  Segment part 64.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Set_Vcore(unsigned int)
                                   8BF6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 892A - 8985 (0x5c bytes), align: 1
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_Init()            892A            Restart_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B64 - 9B79 (0x16 bytes), align: 1
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_Strlen(char *)
                                   9B64            Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8410 - 847B (0x6c bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_UintToStr4(unsigned int, char *)
                                   8410            Console_WriteInt(int) (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9962 - 997F (0x1e bytes), align: 1
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear_ExternWatchdog()
                                   9962            TIMERB1_ISR() (timer)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1C - 5C1D (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   TraceFunctionLine(char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1E - 5C2A (0xd bytes), align: 0
  Segment part 21.            Intra module refs:   System_Reset()
           LOCAL                   ADDRESS         
           =====                   =======         
           System_Reset()::__FUNCTION__
                                   5C1E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C2B - 5C37 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   System_Reset()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\Console.r43
  PROGRAM MODULE, NAME : Console

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A014 - A017 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   DataPage::~DataPage() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free                    A014 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF4 - 9FF7 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int) (tool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  9FF4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E92 - 9E9B (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Open()          9E92            Restart_Init() (main)
                                                   TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F18 - 9F1F (0x8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Close()         9F18            TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9744 - 9767 (0x24 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteString(char *)
                                   9744            TraceFunctionLine(char const *, int) (common)
                                                   TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97B0 - 97D3 (0x24 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteStringln(char *)
                                   97B0            TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BCE - 9BE1 (0x14 bytes), align: 1
  Segment part 8.             Intra module refs:   Console_WriteInt(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteBytesln(char *, int)
                                   9BCE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A26 - 9A3F (0x1a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteInt(int)   9A26            TraceFunctionLine(char const *, int) (common)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\crc.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43
  LIBRARY MODULE, NAME : ?cstart

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __MSP430F5212__         0000 
  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 5430, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0A, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5FAC, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CODE_I
  Relative segment, address: 5002, align: 1
  Segment part 5.
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: A0A6, align: 1
  Segment part 6.
    -------------------------------------------------------------------------
DATA20_Z
  Relative segment, address: 5002, align: 1
  Segment part 7.
    -------------------------------------------------------------------------
DATA20_I
  Relative segment, address: 5002, align: 1
  Segment part 8.
    -------------------------------------------------------------------------
DATA20_ID
  Relative segment, address: A0A6, align: 1
  Segment part 9.
    -------------------------------------------------------------------------
DATA20_C
  Relative segment, address: A0A6, align: 1
  Segment part 10.
    -------------------------------------------------------------------------
DATA20_N
  Relative segment, address: 5002, align: 1
  Segment part 12.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5FAE - 5FB7 (0xa bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         5FAE            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           5FAE 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5FB8 - 5FC3 (0xc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       5FB8            IsGetInput (uart0)
                                                   Is_RS485_1 (main)
                                                   Is_uart1_RX_INT (main)
                                                   Is_uart3_RX_INT (uart3)
                                                   Segment part 2 (?xgetmemchunk)
                                                   UART0_Rx_BufLen (uart0)
                                                   UART0_Rx_Buffer (uart0)
                                                   UART0_Rx_INTIndex (uart0)
                                                   UART0_Rx_INTLen (uart0)
                                                   UART1_Rx_BufLen (uart1)
                                                   UART1_Rx_Buffer (uart1)
                                                   UART1_Rx_INTIndex (uart1)
                                                   UART1_Rx_INTLen (uart1)
                                                   UART3_Rx_BufLen (uart3)
                                                   UART3_Rx_Buffer (uart3)
                                                   UART3_Rx_INTIndex (uart3)
                                                   UART3_Rx_INTLen (uart3)
                                                   UART3_Rx_RecvIndex (uart3)
                                                   UART3_Tx_Buf (uart3)
                                                   UART3_Tx_Flag (uart3)
                                                   UART3_Tx_Len (uart3)
                                                   __data16_Aldata (?xxmemxmalloc)
                                                   __iar_New_hand (?new)
                                                   _int (common)
                                                   etl (etltest)
                                                   s_ClockTicks (timer)
                                                   s_clock (common)
                                                   s_reset_count (timer)
                                                   s_reset_pin (common)
                                                   s_uart1_type (uart1)
                                                   s_uart3_type (uart3)
                                                   trace_open (common)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5FC4 - 5FD3 (0x10 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       5FC4            Opened (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5FD4 - 5FDB (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       5FD4 
           ?cstart_end             5FDC 
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: A0A6, align: 1
  Segment part 28.            Intra module refs:   Segment part 5

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 15 (?cstart)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\datapage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\debug.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dma.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43
  PROGRAM MODULE, NAME : dualpool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9F9E - 9FA3 (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_MemHolder(_Ty1 const &)[with _Ty1=less<PageCycle>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<PageCycle>]
                                   9F9E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A094 - A095 (0x2 bytes), align: 1
  Segment part 34.            Intra module refs:   _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> const &() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::Ref() const
                                   A094 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A090 - A091 (0x2 bytes), align: 1
  Segment part 35.            Intra module refs:   _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_Helper<less<PageCycle>, 0>::Ref()
                                   A090 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CAC - 9CBB (0x10 bytes), align: 1
  Segment part 9.             Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::_MemHolder(_Ty1 const &)[with _Ty1=less<PageCycle>]
                                   9CAC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A03C - A03F (0x4 bytes), align: 1
  Segment part 36.            Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> const &() const
                                   A03C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A050 - A053 (0x4 bytes), align: 1
  Segment part 37.            Intra module refs:   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<PageCycle, less<PageCycle>>::operator less<PageCycle> &()
                                   A050 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A08A - A08B (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_AllocHolder(allocator<void>)
                                   A08A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A088 - A089 (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_Alval() const
                                   A088 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F10 - 9F17 (0x8 bytes), align: 1
  Segment part 40.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<PageCycle>::operator()(_ParamTy, _ParamTy) const
                                   9F10 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E40 - 9E4B (0xc bytes), align: 1
  Segment part 41.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void swap(_Ty &, _Ty &)[with _Ty=char]
                                   9E40 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EB0 - 9EB9 (0xa bytes), align: 1
  Segment part 42.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   9EB0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EC4 - 9ECD (0xa bytes), align: 1
  Segment part 43.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator, _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::pair(_TypeUtil::_ParameterType<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type, _TypeUtil::_ParameterType<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type)
                                   9EC4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 95E4 - 960D (0x2a bytes), align: 1
  Segment part 52.            Intra module refs:   iterator_traits<_InIt>::difference_type distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
                                   95E4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C2E - 9C3F (0x12 bytes), align: 1
  Segment part 53.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iterator_traits<_InIt>::difference_type distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
                                   9C2E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F00 - 9F07 (0x8 bytes), align: 1
  Segment part 54.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::rbegin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::reverse_iterator(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator)
                                   9F00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BE2 - 9BF5 (0x14 bytes), align: 1
  Segment part 62.            Intra module refs:   reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::operator->() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::operator*() const
                                   9BE2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A068 - A06B (0x4 bytes), align: 1
  Segment part 63.            Intra module refs:   DualPool::IsHotPoolResizeTriggered()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::operator->() const
                                   A068 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A060 - A063 (0x4 bytes), align: 1
  Segment part 64.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int, void *)
                                   A060 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A05C - A05F (0x4 bytes), align: 1
  Segment part 65.            Intra module refs:   allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int) (etl)
                                                   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocate(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::allocate(unsigned int)
                                   A05C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A058 - A05B (0x4 bytes), align: 1
  Segment part 66.            Intra module refs:   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::deallocate(pointer, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::deallocate(void *)
                                   A058 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A054 - A057 (0x4 bytes), align: 1
  Segment part 68.            Intra module refs:   allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::destroy(pointer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _Destroy(_Ty *)[with _Ty=allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::value_type]
                                   A054 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A08C - A08D (0x2 bytes), align: 1
  Segment part 69.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   A08C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FBC - 9FC1 (0x6 bytes), align: 1
  Segment part 70.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::deallocate(pointer, unsigned int)
                                   9FBC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D98 - 9DA5 (0xe bytes), align: 1
  Segment part 71.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::allocate(unsigned int)
                                   9D98 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F8C - 9F91 (0x6 bytes), align: 1
  Segment part 72.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::destroy(pointer)
                                   9F8C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E4C - 9E57 (0xc bytes), align: 1
  Segment part 73.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::max_size() const
                                   9E4C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AF0 - 9B07 (0x18 bytes), align: 1
  Segment part 74.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenNode::_GenNode(_Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, char)
                                   9AF0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F80 - 9F85 (0x6 bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Color(_Genptr)
                                   9F80 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F92 - 9F97 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Isnil(_Genptr)
                                   9F92 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A096 - A097 (0x2 bytes), align: 1
  Segment part 46.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lmost()
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Left(_Genptr)
                                   A096 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A020 - A023 (0x4 bytes), align: 1
  Segment part 44.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Root()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Parent(_Genptr)
                                   A020 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A01C - A01F (0x4 bytes), align: 1
  Segment part 48.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rmost()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Right(_Genptr)
                                   A01C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 96AE - 96D3 (0x26 bytes), align: 1
  Segment part 58.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                   96AE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9688 - 96AD (0x26 bytes), align: 1
  Segment part 47.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_IncP(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Min(_Genptr)
                                   9688 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83A2 - 840F (0x6e bytes), align: 1
  Segment part 59.            Intra module refs:   _Tree_algobase<allocator<void>>::_GenIter::_Dec()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                   83A2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8AF2 - 8B49 (0x58 bytes), align: 1
  Segment part 49.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_GenIter::_Inc()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_IncP(_Genptr)
                                   8AF2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FA4 - 9FA9 (0x6 bytes), align: 1
  Segment part 76.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_GenIter(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FA4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E24 - 9E31 (0xe bytes), align: 1
  Segment part 77.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::operator==(_Tree_algobase<allocator<void>>::_GenIter const &) const
                                   9E24 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C64 - 9C75 (0x12 bytes), align: 1
  Segment part 60.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--() (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator--()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                   9C64 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C40 - 9C51 (0x12 bytes), align: 1
  Segment part 50.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Inc()
                                   9C40 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A010 - A013 (0x4 bytes), align: 1
  Segment part 56.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const (etl)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::_Mynode() const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Mynode() const
                                   A010 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99D6 - 99F1 (0x1c bytes), align: 1
  Segment part 12.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>) (etl)
                                                   _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
                                   99D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A8E - 9AA7 (0x1a bytes), align: 1
  Segment part 10.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                                   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Clear()
                                   9A8E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A00C - A00F (0x4 bytes), align: 1
  Segment part 78.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Root()
                                   A00C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A004 - A007 (0x4 bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lmost()
                                   A004 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A04C - A04F (0x4 bytes), align: 1
  Segment part 80.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rmost()
                                   A04C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7B9E - 7C51 (0xb4 bytes), align: 1
  Segment part 81.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
                                   7B9E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7C52 - 7D05 (0xb4 bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                   7C52 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6370 - 6797 (0x428 bytes), align: 1
  Segment part 83.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Erase(_Genptr)
                                   6370 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B42 - 6D71 (0x230 bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &) (etl)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                   6B42 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A09A - A09B (0x2 bytes), align: 1
  Segment part 67.            Intra module refs:   void _Destroy(_Ty *)[with _Ty=allocator<_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node>::value_type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::~_Node()
                                   A09A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9AA8 - 9ABF (0x18 bytes), align: 1
  Segment part 85.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp() const
                                   9AA8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F38 - 9F3F (0x8 bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::comp()
                                   9F38 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 978C - 97AF (0x24 bytes), align: 1
  Segment part 87.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_MyGenptr, PageCycle const &, char)
                                   978C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9720 - 9743 (0x24 bytes), align: 1
  Segment part 13.            Intra module refs:   _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_val(less<PageCycle> const &, allocator<PageCycle>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_nod(less<PageCycle> const &, allocator<PageCycle>)
                                   9720 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B7A - 9B8F (0x16 bytes), align: 1
  Segment part 14.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree(less<PageCycle> const &, allocator<PageCycle> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree_val(less<PageCycle> const &, allocator<PageCycle>)
                                   9B7A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FEC - 9FEF (0x4 bytes), align: 1
  Segment part 89.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Kfn(PageCycle const &)
                                   9FEC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A40 - 9A59 (0x1a bytes), align: 1
  Segment part 90.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Alnod() const
                                   9A40 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF0 - 9FF3 (0x4 bytes), align: 1
  Segment part 91.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FF0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F40 - 9F47 (0x8 bytes), align: 1
  Segment part 92.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   9F40 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A09C - A09D (0x2 bytes), align: 1
  Segment part 93.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   A09C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF8 - 9FFB (0x4 bytes), align: 1
  Segment part 94.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FF8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FFC - 9FFF (0x4 bytes), align: 1
  Segment part 95.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   9FFC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A000 - A003 (0x4 bytes), align: 1
  Segment part 55.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   A000 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D3C - 9D4B (0x10 bytes), align: 1
  Segment part 96.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9D3C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A008 - A00B (0x4 bytes), align: 1
  Segment part 97.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator!=(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                   A008 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E9C - 9EA5 (0xa bytes), align: 1
  Segment part 98.            Intra module refs:   DualPool::PrintEraseCyclePoolInfo()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::operator!=(_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator const &) const
                                   9E9C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A028 - A02B (0x4 bytes), align: 1
  Segment part 99.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::const_iterator::_Mynode() const
                                   A028 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D1C - 9D2B (0x10 bytes), align: 1
  Segment part 100.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::end()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9D1C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F58 - 9F5F (0x8 bytes), align: 1
  Segment part 57.            Intra module refs:   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator->() const
                                                   reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator*() const
                                   9F58 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A030 - A033 (0x4 bytes), align: 1
  Segment part 101.           Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
                                                   DualPool::PrintEraseCyclePoolInfo()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator->() const
                                   A030 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D0C - 9D1B (0x10 bytes), align: 1
  Segment part 51.            Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++(int)
                                                   iterator_traits<_InIt>::difference_type _DistanceHelper<bidirectional_iterator_tag>::_Distance(_InIt, _InIt)[with _InIt=_TypeUtil::_StripMemory<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::_Type]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++()
                                   9D0C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99BA - 99D5 (0x1c bytes), align: 1
  Segment part 102.           Intra module refs:   DualPool::PrintEraseCyclePoolInfo()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator++(int)
                                   99BA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CDC - 9CEB (0x10 bytes), align: 1
  Segment part 61.            Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
                                                   reverse_iterator<_Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator>::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::iterator::operator--()
                                   9CDC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B38 - 9B4D (0x16 bytes), align: 1
  Segment part 15.            Intra module refs:   set<PageCycle>::set()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Tree(less<PageCycle> const &, allocator<PageCycle> const &)
                                   9B38 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98E2 - 9901 (0x20 bytes), align: 1
  Segment part 105.           Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::IsHotPoolResizeTriggered()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   DualPool::PrintEraseCyclePoolInfo()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
                                   98E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B20 - 9B37 (0x18 bytes), align: 1
  Segment part 106.           Intra module refs:   DualPool::IsColdPoolResizeTriggered()
                                                   DualPool::IsDirtySwapTriggered()
                                                   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PrintEraseCyclePoolInfo()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::rbegin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::end()
                                   9B20 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9660 - 9687 (0x28 bytes), align: 1
  Segment part 107.           Intra module refs:   DualPool::IsHotPoolResizeTriggered()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::rbegin()
                                   9660 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C76 - 9C87 (0x12 bytes), align: 1
  Segment part 108.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::max_size() const
                                   9C76 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7298 - 73D3 (0x13c bytes), align: 1
  Segment part 112.           Intra module refs:   DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::HotPoolResize() (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
                                   7298 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 86E6 - 8747 (0x62 bytes), align: 1
  Segment part 113.           Intra module refs:   DualPool::PopBackColdPoolByEraseCycle()
                                                   DualPool::PopBackHotPoolByEraseCycle()
                                                   DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                                   DualPool::PopFrontHotPoolByEraseCycle()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator)
                                   86E6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7F9C - 8033 (0x98 bytes), align: 1
  Segment part 116.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
                                   7F9C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9082 - 90BF (0x3e bytes), align: 1
  Segment part 123.           Intra module refs:   DualPool::PopPageFromPool(PageCycle, enum PoolIdentify)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
                                   9082 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 999E - 99B9 (0x1c bytes), align: 1
  Segment part 115.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(iterator, iterator)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                   999E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9860 - 9881 (0x22 bytes), align: 1
  Segment part 121.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
                                   9860 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 981C - 983D (0x22 bytes), align: 1
  Segment part 119.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
                                   981C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FBC - 8FFF (0x44 bytes), align: 1
  Segment part 122.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::erase(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::equal_range(PageCycle const &)
                                   8FBC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 89E2 - 8A3D (0x5c bytes), align: 1
  Segment part 114.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Erase(_Nodeptr)
                                   89E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87AA - 8809 (0x60 bytes), align: 1
  Segment part 110.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                   87AA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 880A - 8869 (0x60 bytes), align: 1
  Segment part 120.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::lower_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                   880A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F60 - 9F67 (0x8 bytes), align: 1
  Segment part 104.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                   9F60 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F70 - 9F77 (0x8 bytes), align: 1
  Segment part 111.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::clear()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                   9F70 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F78 - 9F7F (0x8 bytes), align: 1
  Segment part 117.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
                                   9F78 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0A4 - A0A5 (0x2 bytes), align: 1
  Segment part 103.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lbound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root()
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Root() const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                                   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::insert(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Head() const
                                   A0A4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 886A - 88C9 (0x60 bytes), align: 1
  Segment part 118.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::upper_bound(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Ubound(PageCycle const &) const
                                   886A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F24 - 8F6F (0x4c bytes), align: 1
  Segment part 109.           Intra module refs:   _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Insert(bool, _Nodeptr, PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, PageCycle const &, char)
                                   8F24 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0A0 - A0A1 (0x2 bytes), align: 1
  Segment part 88.            Intra module refs:   _Tree_val<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::_Kfn(PageCycle const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>::_Kfn(PageCycle const &)
                                   A0A0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A0C - 9A25 (0x1a bytes), align: 1
  Segment part 16.            Intra module refs:   DualPool::DualPool(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set<PageCycle>::set()   9A0C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EEC - 9EF5 (0xa bytes), align: 1
  Segment part 124.           Intra module refs:   DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::PageCycle(unsigned int, int)
                                   9EEC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 94A2 - 94D1 (0x30 bytes), align: 1
  Segment part 39.            Intra module refs:   less<PageCycle>::operator()(_ParamTy, _ParamTy) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PageCycle::operator<(PageCycle const &) const
                                   94A2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93A4 - 93D7 (0x34 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::DualPool(unsigned int)
                                   93A4            ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DEE - 8E3D (0x50 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsDirtySwapTriggered()
                                   8DEE            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D4A - 8D9B (0x52 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsColdPoolResizeTriggered()
                                   8D4A            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8034 - 80C7 (0x94 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::IsHotPoolResizeTriggered()
                                   8034            ETL::TryToExecDualPoolAlgorithm() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8256 - 82C5 (0x70 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::AddPageIntoPool(PageCycle, enum PoolIdentify)
                                   8256            ETL::DirtySwap() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8ED8 - 8F23 (0x4c bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopPageFromPool(PageCycle, enum PoolIdentify)
                                   8ED8            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E3E - 8E8B (0x4e bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontHotPoolByEraseCycle()
                                   8E3E            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C4C - 8CA1 (0x56 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackHotPoolByEraseCycle()
                                   8C4C            ETL::HotPoolResize() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8986 - 89E1 (0x5c bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopBackColdPoolByEraseCycle()
                                   8986            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CA2 - 8CF5 (0x54 bytes), align: 1
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PopFrontColdPoolByEffectiveEraseCycle()
                                   8CA2            ETL::ColdPoolResize() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7602 - 76D5 (0xd4 bytes), align: 1
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::PrintEraseCyclePoolInfo()
                                   7602            TestUpdateEraseCycle() (etltest)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C38 - 5C47 (0x10 bytes), align: 0
  Segment part 2.             Intra module refs:   DualPool::IsHotPoolResizeTriggered()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C48 - 5C61 (0x1a bytes), align: 0
  Segment part 3.             Intra module refs:   DualPool::PrintEraseCyclePoolInfo()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C62 - 5C7A (0x19 bytes), align: 0
  Segment part 4.             Intra module refs:   DualPool::PrintEraseCyclePoolInfo()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C7B - 5C95 (0x1b bytes), align: 0
  Segment part 5.             Intra module refs:   DualPool::PrintEraseCyclePoolInfo()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etl.r43
  PROGRAM MODULE, NAME : etl

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A044 - A047 (0x4 bytes), align: 1
  Segment part 68.            Intra module refs:   DataPage::DataPage(int)
                                                   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calloc                  A044 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9532 - 9561 (0x30 bytes), align: 1
  Segment part 57.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
                                                   TestUpdateEraseCycle() (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::DataPage(int)
                                   9532 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D6C - 9D7B (0x10 bytes), align: 1
  Segment part 58.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
                                                   TestUpdateEraseCycle() (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::~DataPage()   9D6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F98 - 9F9D (0x6 bytes), align: 1
  Segment part 59.            Intra module refs:   void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<unsigned int>]
                                   9F98 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A098 - A099 (0x2 bytes), align: 1
  Segment part 70.            Intra module refs:   _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::Ref()
                                   A098 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D5C - 9D6B (0x10 bytes), align: 1
  Segment part 60.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
                                   9D5C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A024 - A027 (0x4 bytes), align: 1
  Segment part 72.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
                                   A024 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E64 - 9E6F (0xc bytes), align: 1
  Segment part 76.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<unsigned int>::operator()(unsigned int, unsigned int) const
                                   9E64 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9ECE - 9ED7 (0xa bytes), align: 1
  Segment part 77.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<unsigned int const, unsigned int>::pair(unsigned int)
                                   9ECE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EF6 - 9EFF (0xa bytes), align: 1
  Segment part 78.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   9EF6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A08E - A08F (0x2 bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   A08E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DD0 - 9DDD (0xe bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int)
                                   9DD0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E58 - 9E63 (0xc bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::max_size() const
                                   9E58 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F68 - 9F6F (0x8 bytes), align: 1
  Segment part 107.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
                                   9F68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97F8 - 981B (0x24 bytes), align: 1
  Segment part 109.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char)
                                   97F8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9768 - 978B (0x24 bytes), align: 1
  Segment part 64.            Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   9768 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B4E - 9B63 (0x16 bytes), align: 1
  Segment part 65.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   9B4E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A040 - A043 (0x4 bytes), align: 1
  Segment part 113.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   A040 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A5A - 9A73 (0x1a bytes), align: 1
  Segment part 115.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
                                   9A5A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A06C - A06F (0x4 bytes), align: 1
  Segment part 117.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   A06C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F08 - 9F0F (0x8 bytes), align: 1
  Segment part 121.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   9F08 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A086 - A087 (0x2 bytes), align: 1
  Segment part 123.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   A086 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A07C - A07F (0x4 bytes), align: 1
  Segment part 125.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   A07C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A080 - A083 (0x4 bytes), align: 1
  Segment part 127.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   A080 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A074 - A077 (0x4 bytes), align: 1
  Segment part 120.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   A074 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CFC - 9D0B (0x10 bytes), align: 1
  Segment part 129.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9CFC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A02C - A02F (0x4 bytes), align: 1
  Segment part 131.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                   A02C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A018 - A01B (0x4 bytes), align: 1
  Segment part 133.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const
                                   A018 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D2C - 9D3B (0x10 bytes), align: 1
  Segment part 135.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   9D2C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F20 - 9F27 (0x8 bytes), align: 1
  Segment part 136.           Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
                                   9F20 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D4C - 9D5B (0x10 bytes), align: 1
  Segment part 138.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--()
                                   9D4C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B90 - 9BA5 (0x16 bytes), align: 1
  Segment part 66.            Intra module refs:   map<unsigned int, unsigned int>::map()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
                                   9B90 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9902 - 9921 (0x20 bytes), align: 1
  Segment part 144.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                   9902 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FC2 - 9FC7 (0x6 bytes), align: 1
  Segment part 30.            Intra module refs:   ETL::InitialDualpool()
                                                   TestUpdateEraseCycle() (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<PageCycle, less<PageCycle>, allocator<PageCycle>, 0>>::size() const
                                   9FC2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C0A - 9C1B (0x12 bytes), align: 1
  Segment part 146.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
                                   9C0A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 73D4 - 750F (0x13c bytes), align: 1
  Segment part 154.           Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
                                   73D4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88CA - 8929 (0x60 bytes), align: 1
  Segment part 152.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                   88CA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F48 - 9F4F (0x8 bytes), align: 1
  Segment part 143.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                   9F48 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F50 - 9F57 (0x8 bytes), align: 1
  Segment part 153.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                   9F50 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A0A2 - A0A3 (0x2 bytes), align: 1
  Segment part 142.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Head() const
                                   A0A2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F70 - 8FBB (0x4c bytes), align: 1
  Segment part 151.           Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                   8F70 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A034 - A037 (0x4 bytes), align: 1
  Segment part 112.           Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   A034 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99F2 - 9A0B (0x1a bytes), align: 1
  Segment part 67.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::map()
                                   99F2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 936E - 93A3 (0x36 bytes), align: 1
  Segment part 155.           Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::operator[](unsigned int)
                                   936E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B4A - 8B9F (0x56 bytes), align: 1
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ETL(unsigned long long)
                                   8B4A            TestUpdateEraseCycle() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9302 - 9337 (0x36 bytes), align: 1
  Segment part 45.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::NeedFormat()       9302 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7F00 - 7F9B (0x9c bytes), align: 1
  Segment part 41.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Format(unsigned char, unsigned int)
                                   7F00            TestUpdateEraseCycle() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CF6 - 8D49 (0x54 bytes), align: 1
  Segment part 40.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::SetInfoPage(InfoPage)
                                   8CF6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81E2 - 8255 (0x74 bytes), align: 1
  Segment part 44.            Intra module refs:   ETL::NeedFormat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetInfoPage()      81E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D72 - 6F7D (0x20c bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Write(unsigned long long, char const *, int)
                                   6D72            TestUpdateEraseCycle() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C88 - 9C99 (0x12 bytes), align: 1
  Segment part 53.            Intra module refs:   ETL::RomWriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteByte(unsigned long long, char)
                                   9C88 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C1C - 9C2D (0x12 bytes), align: 1
  Segment part 54.            Intra module refs:   ETL::RomReadBytes(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadByte(unsigned long long, char *)
                                   9C1C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8682 - 86E5 (0x64 bytes), align: 1
  Segment part 37.            Intra module refs:   ETL::SetInfoPage(InfoPage)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteBytes(unsigned long long, char const *, int)
                                   8682 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8748 - 87A9 (0x62 bytes), align: 1
  Segment part 32.            Intra module refs:   ETL::GetInfoPage()
                                                   ETL::ReadDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadBytes(unsigned long long, char *, int)
                                   8748 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7DB8 - 7E5D (0xa6 bytes), align: 1
  Segment part 39.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialPhysicalPages()
                                   7DB8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 77A8 - 7877 (0xd0 bytes), align: 1
  Segment part 35.            Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialDualpool()
                                   77A8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7878 - 7947 (0xd0 bytes), align: 1
  Segment part 38.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::WriteDataPage(int, DataPage *)
                                   7878 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 76D6 - 77A7 (0xd2 bytes), align: 1
  Segment part 34.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
                                                   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ReadDataPage(int, DataPage *)
                                   76D6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EBA - 9EC3 (0xa bytes), align: 1
  Segment part 33.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetDataPageSize()
                                   9EBA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82C6 - 8333 (0x6e bytes), align: 1
  Segment part 36.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitLpnToPpnTable()
                                   82C6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BA0 - 8BF5 (0x56 bytes), align: 1
  Segment part 50.            Intra module refs:   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::TryToExecDualPoolAlgorithm()
                                   8BA0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 847C - 84E5 (0x6a bytes), align: 1
  Segment part 46.            Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::HotPoolResize()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::PrintDataPage(DataPage *)
                                   847C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F7E - 7153 (0x1d6 bytes), align: 1
  Segment part 49.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::DirtySwap()        6F7E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7510 - 7601 (0xf2 bytes), align: 1
  Segment part 48.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ColdPoolResize()   7510 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7A14 - 7ADD (0xca bytes), align: 1
  Segment part 47.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::HotPoolResize()    7A14 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C96 - 5CA0 (0xb bytes), align: 0
  Segment part 2.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CA1 - 5CBF (0x1f bytes), align: 0
  Segment part 3.             Intra module refs:   DataPage::DataPage(int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CC0 - 5CDD (0x1e bytes), align: 0
  Segment part 4.             Intra module refs:   ETL::ETL(unsigned long long)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CDE - 5CF4 (0x17 bytes), align: 0
  Segment part 5.             Intra module refs:   ETL::ETL(unsigned long long)
                                                   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CF5 - 5D09 (0x15 bytes), align: 0
  Segment part 6.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D0A - 5D24 (0x1b bytes), align: 0
  Segment part 7.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D25 - 5D29 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   ETL::InitialPhysicalPages()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D2A - 5D44 (0x1b bytes), align: 0
  Segment part 9.             Intra module refs:   ETL::ColdPoolResize()
                                                   ETL::DirtySwap()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D45 - 5D80 (0x3c bytes), align: 0
  Segment part 10.            Intra module refs:   ETL::InitialDualpool()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D81 - 5D85 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D86 - 5D99 (0x14 bytes), align: 0
  Segment part 12.            Intra module refs:   ETL::InitLpnToPpnTable()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D9A - 5DB1 (0x18 bytes), align: 0
  Segment part 13.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DB2 - 5DCF (0x1e bytes), align: 0
  Segment part 14.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DD0 - 5DEC (0x1d bytes), align: 0
  Segment part 15.            Intra module refs:   ETL::TryToExecDualPoolAlgorithm()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5DED - 5E15 (0x29 bytes), align: 0
  Segment part 16.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E16 - 5E28 (0x13 bytes), align: 0
  Segment part 17.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E29 - 5E45 (0x1d bytes), align: 0
  Segment part 18.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E46 - 5E5B (0x16 bytes), align: 0
  Segment part 19.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E5C - 5E66 (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E67 - 5E77 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E78 - 5E83 (0xc bytes), align: 0
  Segment part 22.            Intra module refs:   ETL::PrintDataPage(DataPage *)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E84 - 5E94 (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5E95 - 5EA4 (0x10 bytes), align: 0
  Segment part 24.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EA5 - 5EB8 (0x14 bytes), align: 0
  Segment part 25.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EB9 - 5ECB (0x13 bytes), align: 0
  Segment part 26.            Intra module refs:   ETL::DirtySwap()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5ECC - 5EE0 (0x15 bytes), align: 0
  Segment part 27.            Intra module refs:   ETL::ColdPoolResize()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EE1 - 5EFA (0x1a bytes), align: 0
  Segment part 28.            Intra module refs:   ETL::ColdPoolResize()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5EFB - 5F14 (0x1a bytes), align: 0
  Segment part 29.            Intra module refs:   ETL::HotPoolResize()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etltest.r43
  PROGRAM MODULE, NAME : etltest

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C0A - 1C0B (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   TestUpdateEraseCycle()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           etl                     1C0A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7948 - 7A13 (0xcc bytes), align: 1
  Segment part 146.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TestUpdateEraseCycle()
                                   7948            main (main)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F15 - 5F1B (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   TestUpdateEraseCycle()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F1C - 5F57 (0x3c bytes), align: 0
  Segment part 33.            Intra module refs:   TestUpdateEraseCycle()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F58 - 5F64 (0xd bytes), align: 0
  Segment part 34.            Intra module refs:   TestUpdateEraseCycle()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\gpio.r43
  PROGRAM MODULE, NAME : gpio

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 5C00 - 5C1B (0x1c bytes), align: 1
  Segment part 2.             Intra module refs:   GPIO_clearInterrupt
                                                   GPIO_getInterruptStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           GPIO_PORT_TO_BASE       5C00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90C0 - 90FD (0x3e bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_getInterruptStatus
                                   90C0            Port_2() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 983E - 985F (0x22 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_clearInterrupt     983E            Port_2() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\infopage.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\led.r43
  PROGRAM MODULE, NAME : led

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0222 - 0223 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led1_Off()
                                                   Led1_On()
                                                   Led2_Off()
                                                   Led2_On()
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBOUT_L              0222 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBOUT                   0222 
           PBOUT_H                 0223 
           PBOUT_L                 0222 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0224 - 0225 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   I2C_GetACK() (rom)
                                                   I2C_RxByte() (rom)
                                                   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBDIR_L              0224 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBDIR                   0224 
           PBDIR_H                 0225 
           PBDIR_L                 0224 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 022A - 022B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBSEL_L              022A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBSEL                   022A 
           PBSEL_H                 022B 
           PBSEL_L                 022A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BA6 - 9BB9 (0x14 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Init()              9BA6            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 98A2 - 98C1 (0x20 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Round()             98A2            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FB0 - 9FB5 (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_On()               9FB0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FB6 - 9FBB (0x6 bytes), align: 1
  Segment part 7.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_On()               9FB6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FE6 - 9FEB (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_Off()              9FE6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FC8 - 9FCD (0x6 bytes), align: 1
  Segment part 6.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_Off()              9FC8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A09E - A09F (0x2 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_WorkLightOff()     A09E            Restart_Init() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43
  PROGRAM MODULE, NAME : lowpower

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0202 - 0203 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAOUT_L              0202 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAOUT                   0202 
           PAOUT_H                 0203 
           PAOUT_L                 0202 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0204 - 0205 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PADIR_L              0204 
           LOCAL                   ADDRESS         
           =====                   =======         
           PADIR                   0204 
           PADIR_H                 0205 
           PADIR_L                 0204 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EA6 - 9EAF (0xa bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BoardPowerOn()          9EA6            main (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 020A - 020B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PASEL_L              020A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PASEL                   020A 
           PASEL_H                 020B 
           PASEL_L                 020A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0264 - 0265 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Restart_Init()
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDDIR_L              0264 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDDIR                   0264 
           PDDIR_H                 0265 
           PDDIR_L                 0264 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 02A4 - 02A5 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PFDIR_L              02A4 
           LOCAL                   ADDRESS         
           =====                   =======         
           PFDIR                   02A4 
           PFDIR_H                 02A5 
           PFDIR_L                 02A4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0100 - 0101 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIE1_L             0100 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIE1                  0100 
           SFRIE1_H                0101 
           SFRIE1_L                0100 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00 - 1C01 (0x2 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Opened                  1C00            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C42 - 1C42 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_RS485_1              1C42 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C43 - 1C43 (0x1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart1_RX_INT         1C43            UART1_RX_ISR() (uart1)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9338 - 936D (0x36 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    9338            Segment part 27 (?cstart)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5FDC - 6003 (0x28 bytes), align: 1
  Segment part 29.            Intra module refs:   Port_2()::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()                5FDC 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A98 - 8AF1 (0x5a bytes), align: 1
  Segment part 25.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Restart_Init()          8A98 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9942 - 9961 (0x20 bytes), align: 1
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Main_Init()             9942 
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD5 (0x56 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()::??INTVEC 84   FFD4 
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5FAC - 5FAD (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   Opened
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F65 - 5F69 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main::__FUNCTION__      5F65 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F6A - 5F77 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F78 - 5F82 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   Port_2()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\oa.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmap.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmm.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ram.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ref.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rom.r43
  PROGRAM MODULE, NAME : rom

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBIN_L               0220 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBIN                    0220 
           PBIN_H                  0221 
           PBIN_L                  0220 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DDE - 9DEB (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_OFF()            9DDE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E08 - 9E15 (0xe bytes), align: 1
  Segment part 28.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_ON()             9E08 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7ADE - 7B9D (0xc0 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteByte(unsigned long long, char)
                                   7ADE            ETL::RomWriteByte(unsigned long long, char) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7D06 - 7DB7 (0xb2 bytes), align: 1
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_ReadByte(unsigned long long, char *)
                                   7D06            ETL::RomReadByte(unsigned long long, char *) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DFA - 9E07 (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_high()      9DFA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DC2 - 9DCF (0xe bytes), align: 1
  Segment part 32.            Intra module refs:   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_low()       9DC2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DB4 - 9DC1 (0xe bytes), align: 1
  Segment part 31.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_high()      9DB4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E32 - 9E3F (0xe bytes), align: 1
  Segment part 29.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_low()       9E32 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 91EA - 9223 (0x3a bytes), align: 1
  Segment part 49.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_GetACK()            91EA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93D8 - 940B (0x34 bytes), align: 1
  Segment part 37.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_START()             93D8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 913A - 9175 (0x3c bytes), align: 1
  Segment part 33.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_STOP()              913A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90FE - 9139 (0x3c bytes), align: 1
  Segment part 36.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_TxByte(char)        90FE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E8C - 8ED7 (0x4c bytes), align: 1
  Segment part 45.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_RxByte()            8E8C 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc.r43
  PROGRAM MODULE, NAME : rtc

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIN_L               0200 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIN                    0200 
           PAIN_H                  0201 
           PAIN_L                  0200 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0280 - 0281 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   READ_SDA()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEIN_L               0280 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEIN                    0280 
           PEIN_H                  0281 
           PEIN_L                  0280 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 940C - 943D (0x32 bytes), align: 1
  Segment part 59.            Intra module refs:   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_Write_OneByte(char, char)
                                   940C            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9042 - 9081 (0x40 bytes), align: 1
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTC_Open()              9042            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FCE - 9FD3 (0x6 bytes), align: 1
  Segment part 43.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_HIGH()          9FCE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FD4 - 9FD9 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_LOW()           9FD4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FDA - 9FDF (0x6 bytes), align: 1
  Segment part 42.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_HIGH()          9FDA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FE0 - 9FE5 (0x6 bytes), align: 1
  Segment part 44.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_LOW()           9FE0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D7C - 9D89 (0xe bytes), align: 1
  Segment part 94.            Intra module refs:   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           READ_SDA()              9D7C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97D4 - 97F7 (0x24 bytes), align: 1
  Segment part 52.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Start()             97D4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 96FA - 971F (0x26 bytes), align: 1
  Segment part 46.            Intra module refs:   IIC_Wait_Ack()
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Stop()              96FA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9176 - 91AF (0x3a bytes), align: 1
  Segment part 50.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Wait_Ack()          9176 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 925C - 9293 (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Send_Byte(unsigned char)
                                   925C 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sfr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43
  PROGRAM MODULE, NAME : sys_status

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0352 - 0353 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCR0                 0352 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tec.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0340 - 0341 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CTL                  0340 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0342 - 0343 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCTL0                0342 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0380 - 0381 (0x2 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CTL                  0380 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0382 - 0383 (0x2 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCTL0                0382 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0392 - 0393 (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCR0                 0392 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C0 - 03C1 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CTL                  03C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C2 - 03C3 (0x2 bytes), align: 0
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL0                03C2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C4 - 03C5 (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL1                03C4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C6 - 03C7 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL2                03C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D2 - 03D3 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR0                 03D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D4 - 03D5 (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR1                 03D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D6 - 03D7 (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR2                 03D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03EE - 03EF (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0IV                   03EE 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0C - 1C0D (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   TIMERA0_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_ClockTicks            1C0C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0E - 1C0F (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Clear()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_count           1C0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F30 - 9F37 (0x8 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Init()         9F30            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F28 - 9F2F (0x8 bytes), align: 1
  Segment part 32.            Intra module refs:   TIMERA0_ISR()
                                                   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Clear()        9F28            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9000 - 9041 (0x42 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Init(unsigned int)
                                   9000            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FAA - 9FAF (0x6 bytes), align: 1
  Segment part 34.            Intra module refs:   TIMERA0_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Clear()          9FAA            Main_Init() (main)
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6004 - 6005 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   TIMER0_A0_ISR()::??INTVEC 108
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()         6004 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6006 - 6013 (0xe bytes), align: 1
  Segment part 40.            Intra module refs:   TIMERA0_ISR()::??INTVEC 98
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()           6006 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6014 - 6015 (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   TIMERB0_ISR()::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()           6014 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6016 - 6053 (0x3e bytes), align: 1
  Segment part 42.            Intra module refs:   TIMERB1_ISR()::??INTVEC 118
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()           6016 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFE3 (0x64 bytes), align: 1
  Segment part 18. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()::??INTVEC 98
                                   FFE2 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFED (0x6e bytes), align: 1
  Segment part 19. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()::??INTVEC 108
                                   FFEC 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF7 (0x78 bytes), align: 1
  Segment part 20. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()::??INTVEC 118
                                   FFF6 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF9 (0x7a bytes), align: 1
  Segment part 21. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()::??INTVEC 120
                                   FFF8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tlv.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tool.r43
  PROGRAM MODULE, NAME : tool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8D9C - 8DED (0x52 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tool::SwapMemory(void *, void *, unsigned int)
                                   8D9C            ETL::DirtySwap() (etl)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F83 - 5F89 (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5F8A - 5FA5 (0x1c bytes), align: 0
  Segment part 3.             Intra module refs:   Tool::SwapMemory(void *, void *, unsigned int)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart0.r43
  PROGRAM MODULE, NAME : uart0

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 05C0 - 05C1 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0CTLW0_L          05C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0CTLW0               05C0 
           UCA0CTLW0_H             05C1 
           UCA0CTLW0_L             05C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C6 - 05C7 (0x2 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0BRW_L            05C6 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0BRW                 05C6 
           UCA0BRW_H               05C7 
           UCA0BRW_L               05C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C8 - 05C8 (0x1 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                05C8 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CC - 05CC (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               05CC 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CE - 05CE (0x1 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               05CE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05DC - 05DD (0x2 bytes), align: 0
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0ICTL_L           05DC 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0ICTL                05DC 
           UCA0ICTL_H              05DD 
           UCA0ICTL_L              05DC 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C10 - 1C11 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsGetInput              1C10 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C44 - 1EC8 (0x285 bytes), align: 0
  Segment part 16.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_Buffer         1C44 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C12 - 1C17 (0x6 bytes), align: 1
  Segment part 17.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_BufLen         1C12 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C18 - 1C19 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTIndex       1C18 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1A - 1C1B (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTLen         1C1A 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 6054 - 619D (0x14a bytes), align: 1
  Segment part 46.            Intra module refs:   UART0_RX_ISR()::??INTVEC 114
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()          6054 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF3 (0x74 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()::??INTVEC 114
                                   FFF2 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart1.r43
  PROGRAM MODULE, NAME : uart1

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0244 - 0245 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCDIR_L              0244 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCDIR                   0244 
           PCDIR_H                 0245 
           PCDIR_L                 0244 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0600 - 0601 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1CTLW0_L          0600 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1CTLW0               0600 
           UCA1CTLW0_H             0601 
           UCA1CTLW0_L             0600 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0606 - 0607 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1BRW_L            0606 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1BRW                 0606 
           UCA1BRW_H               0607 
           UCA1BRW_L               0606 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0608 - 0608 (0x1 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                0608 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060C - 060C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               060C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060E - 060E (0x1 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               060E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 061C - 061D (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1ICTL_L           061C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1ICTL                061C 
           UCA1ICTL_H              061D 
           UCA1ICTL_L              061C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1EC9 - 21E8 (0x320 bytes), align: 0
  Segment part 13.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_Buffer         1EC9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1C - 1C1F (0x4 bytes), align: 1
  Segment part 14.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_BufLen         1C1C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C20 - 1C21 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTIndex       1C20 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C22 - 1C23 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTLen         1C22 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C24 - 1C25 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           s_uart1_type            1C24 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 960E - 9637 (0x2a bytes), align: 1
  Segment part 31.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Judge_Watermeter()      960E 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 619E - 6289 (0xec bytes), align: 1
  Segment part 32.            Intra module refs:   UART1_RX_ISR()::??INTVEC 92
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()          619E 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFDD (0x5e bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()::??INTVEC 92
                                   FFDC 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart3.r43
  PROGRAM MODULE, NAME : uart3

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 028A - 028B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PESEL_L              028A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PESEL                   028A 
           PESEL_H                 028B 
           PESEL_L                 028A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0680 - 0681 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3CTLW0_L          0680 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3CTLW0               0680 
           UCA3CTLW0_H             0681 
           UCA3CTLW0_L             0680 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0686 - 0687 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3BRW_L            0686 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3BRW                 0686 
           UCA3BRW_H               0687 
           UCA3BRW_L               0686 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0688 - 0688 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3MCTL                0688 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068C - 068C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3RXBUF               068C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068E - 068E (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3TXBUF               068E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 069C - 069D (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
                                                   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3ICTL_L           069C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3ICTL                069C 
           UCA3ICTL_H              069D 
           UCA3ICTL_L              069C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C26 - 1C27 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Buf            1C26 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 21E9 - 2508 (0x320 bytes), align: 0
  Segment part 15.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_Buffer         21E9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C28 - 1C2B (0x4 bytes), align: 1
  Segment part 16.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_BufLen         1C28 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2C - 1C2D (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTIndex       1C2C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2E - 1C2F (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTLen         1C2E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C30 - 1C31 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART3_ClearBuffer()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_RecvIndex      1C30 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C32 - 1C33 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Flag           1C32 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C34 - 1C35 (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Len            1C34 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 2509 - 2509 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart3_RX_INT         2509 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C36 - 1C37 (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   UART3_Open(int)
                                                   UART3_RX_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_uart3_type            1C36 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9224 - 925B (0x38 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Open(int)         9224            Console_Open() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E88 - 9E91 (0xa bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Close()           9E88            Console_Close() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9470 - 94A1 (0x32 bytes), align: 1
  Segment part 24.            Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_ClearBuffer()     9470 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80C8 - 815B (0x94 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Send(char *, int, int)
                                   80C8            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 628A - 636F (0xe6 bytes), align: 1
  Segment part 35.            Intra module refs:   UART3_RX_ISR()::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()          628A 
               interrupt function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E7C - 9E87 (0xc bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 9E7C            _Prout (?xprout)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD9 (0x5a bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()::??INTVEC 88
                                   FFD8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ucs.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43
    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9CCC - 9CDB (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   9CCC            _Nomemory() (?nomemory)
                                                   __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A092 - A093 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            A092            __exit (?__exit)
                                                   __iar_ReportAssert (?_ReportAssert)
                                                   abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_ReportAssert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9562 - 958D (0x2c bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_ReportAssert      9562            __aeabi_assert (?xassert)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9BF6 - 9C09 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  9BF6            Segment part 6 (?_exit)
                                                   _exit (?_exit)
                                                   abort (?abort)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A038, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   A038            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A038 - A03B (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9ED8 - 9EE1 (0xa bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   9ED8            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   _Allocator<void>::deallocate(void *) (dualpool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7E5E - 7EFF (0xa2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 7E5E            ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A74 - 9A8D (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Div64u

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A048 - A04B (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    A048            Segment part 27 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9B08 - 9B1F (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              9B08            ?DivMod16s (?DivMod816s)
                                                   Utility_UintToStr4(unsigned int, char *) (common)
                                                   __data16_calloc (?xxmemxcalloc)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 94D2 - 9501 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              94D2            ETL::InitialPhysicalPages() (etl)
                                                   __aeabi_assert (?xassert)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9502 - 9531 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              9502            _LitobSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9BBA - 9BCD (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            9BBA            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9C52 - 9C63 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  9C52            ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
                                                   __data16_memcpy (?memzero)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9CEC - 9CFB (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        9CEC            ?cstart_init_zero (?cstart)
                                                   __data16_calloc (?xxmemxcalloc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A064 - A067 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         A064            ?cstart_init_copy (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul8Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9882 - 9885 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8Hw                 9882            _LitobSmallNoMb (?xprintfsmall_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9886 - 98A1 (0x1c bytes), align: 1
  Segment part 1.             Intra module refs:   ?Mul8Hw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16Hw                9886            __data16_calloc (?xxmemxcalloc)
           ?Mul16to32uHw           9886 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C38 - 1C3B (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          1C38            operator new(size_t) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 95BA - 95E3 (0x2a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    95BA            ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   TestUpdateEraseCycle() (etltest)
                                                   _Allocator<void>::allocate(unsigned int) (dualpool)
               calls direct and indirect

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A070 - A073 (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             A070            operator new(size_t) (?newop_0)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 96D4 - 96F9 (0x26 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  96D4            DualPool::IsHotPoolResizeTriggered() (dualpool)
                                                   DualPool::PrintEraseCyclePoolInfo() (dualpool)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::ETL(unsigned long long) (etl)
                                                   ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::HotPoolResize() (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETL::PrintDataPage(DataPage *) (etl)
                                                   ETL::TryToExecDualPoolAlgorithm() (etl)
                                                   Port_2() (main)
                                                   TestUpdateEraseCycle() (etltest)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR11

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A078 - A07B (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR11             A078            _PutcharSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9E16 - 9E23 (0xe bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            9E16            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9C9A - 9CAB (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  9C9A            TestUpdateEraseCycle() (etltest)
                                                   _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xassert

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A084 - A085 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_EmptyStepPoint    A084            DataPage::DataPage(int) (etl)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A3E - 8A97 (0x5a bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_assert          8A3E            DataPage::DataPage(int) (etl)
                                                   ETL::ColdPoolResize() (etl)
                                                   ETL::DirtySwap() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Tool::SwapMemory(void *, void *, unsigned int) (tool)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9980 - 999D (0x1e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    9980            __data16_findmem (?xxmemxmalloc)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C3C - 1C3D (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_GetMemChunk
    -------------------------------------------------------------------------
DATA16_HEAP
  Relative segment, address: 250A, align: 1
  Segment part 4.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintfsmall_nomb

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 6798 - 6B41 (0x3aa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfSmallNoMb        6798            printf (?printf)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D8A - 9D97 (0xe bytes), align: 1
  Segment part 5.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CBC - 9CBD (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CBE - 9CCB (0xe bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 6
                                                   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 854E - 85B5 (0x68 bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 854E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E70 - 9E7B (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   LoadInt
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 92CC - 9301 (0x36 bytes), align: 1
  Segment part 10.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     92CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7154 - 7297 (0x144 bytes), align: 1
  Segment part 3.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobSmallNoMb         7154 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9638 - 965F (0x28 bytes), align: 1
  Segment part 11.            Intra module refs:   _PrintfSmallNoMb
                                                   _PutcharsSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharSmallNoMb       9638 
               calls indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 958E - 95B9 (0x2c bytes), align: 1
  Segment part 12.            Intra module refs:   Segment part 5
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsSmallNoMb      958E 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5FA6 - 5FAB (0x6 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfSmallNoMb

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9AD8 - 9AEF (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout                  9AD8            printf (?printf)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxcalloc

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 91B0 - 91E9 (0x3a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_calloc         91B0            calloc (etl)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 815C - 81E1 (0x86 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           815C            __data16_findmem (?xxmemxmalloc)
                                                   free (Console)
                                                   operator delete(void *) (?delop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C3E - 1C41 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_findmem
                                                   __data16_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         1C3E            __data16_free (?xxmemxfree)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 861E - 8681 (0x64 bytes), align: 1
  Segment part 3.             Intra module refs:   __data16_malloc
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        861E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8334 - 83A1 (0x6e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         8334            __data16_calloc (?xxmemxcalloc)
                                                   malloc (Console)
                                                   operator new(size_t) (?newop_0)
               calls direct




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0100 - 0103               4   rel    0
                                       0120 - 0121               2 
                                       0124 - 0127               4 
                                       012C - 012D               2 
                                       015C - 015D               2 
                                       0168 - 016F               8 
                                       0200 - 0205               6 
                                       020A - 020B               2 
                                       021A - 021D               4 
                                       0220 - 0225               6 
                                       022A - 022B               2 
                                       0244 - 0245               2 
                                       024A - 024B               2 
                                       0262 - 0265               4 
                                       026A - 026B               2 
                                       0280 - 0285               6 
                                       028A - 028B               2 
                                       02A4 - 02A5               2 
                                       0340 - 0343               4 
                                       0352 - 0353               2 
                                       0380 - 0383               4 
                                       0392 - 0393               2 
                                       03C0 - 03C7               8 
                                       03D2 - 03D7               6 
                                       03EE - 03EF               2 
                                       05C0 - 05C1               2 
                                       05C6 - 05C8               3 
                                       05CC - 05CC               1 
                                       05CE - 05CE               1 
                                       05DC - 05DD               2 
                                       0600 - 0601               2 
                                       0606 - 0608               3 
                                       060C - 060C               1 
                                       060E - 060E               1 
                                       061C - 061D               2 
                                       0680 - 0681               2 
                                       0686 - 0688               3 
                                       068C - 068C               1 
                                       068E - 068E               1 
                                       069C - 069D               2 
DATA16_I                               1C00 - 1C01               2   rel    1
DATA16_Z                               1C02 - 2509             908   rel    1
DATA16_HEAP                            250A - 5001            2AF8   rel    1
DATA20_I                                  5002                       rel    1
DATA20_Z                                  5002                       rel    1
DATA20_N                                  5002                       rel    1
CODE_I                                    5002                       rel    1
CSTACK                                 5430 - 5BFF             7D0   rel    1
DATA16_C                               5C00 - 5FAB             3AC   rel    1
DATA16_ID                              5FAC - 5FAD               2   rel    1
CSTART                                 5FAE - 5FDB              2E   rel    1
ISR_CODE                               5FDC - 636F             394   rel    1
<CODE> 1                               6370 - A0A5            3D36   rel    1
CODE_ID                                   A0A6                       rel    1
DATA20_ID                                 A0A6                       rel    1
DATA20_C                                  A0A6                       rel    1
INTVEC                                 FF80 - FFF9              7A   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 16 756 bytes of CODE  memory
 15 314 bytes of DATA  memory (+ 117 absolute )
    942 bytes of CONST memory

Errors: none
Warnings: 1

