Warning[w6]: Type conflict for external/entry "sys_errorcode_runcode", in module uart_config against external/entry in module timer; different basic types
  /* In module uart_config: */
  bool sys_errorcode_runcode;
  /* In module timer: */
  unsigned int sys_errorcode_runcode;
################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.4.100                                         #
#                                                                              #
#           Link time     =  19/Oct/2020  10:57:12                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#           Output file 1 =  \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43      #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\83797\AppData\Local\Temp\EW171E.tmp   #
#                            (\\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\aes.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\battbak.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\common.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\Console.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\crc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\debug.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\dma.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\etl.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\etlforat24c1024.r43 #
#                            \\Mac\Home\work\ETL\Debug\Obj\etltest.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43    #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\gpio.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\led.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43        #
#                            \\Mac\Home\work\ETL\Debug\Obj\main.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\oa.r43              #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmap.r43            #
#                            \\Mac\Home\work\ETL\Debug\Obj\pmm.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ram.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\ref.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rom.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\sfr.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43          #
#                            \\Mac\Home\work\ETL\Debug\Obj\tec.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43         #
#                            \\Mac\Home\work\ETL\Debug\Obj\tlv.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart0.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart1.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart3.r43           #
#                            \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\ucs.r43             #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43     #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43      #
#                            \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43 -o        #
#                            \\Mac\Home\work\ETL\Debug\Exe\RTUtest_GP.d43 -l   #
#                            \\Mac\Home\work\ETL\Debug\List\RTUtest_GP.map     #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\lnk430f5438a.xcl"     #
#                            (-cmsp430 -D?CPU30_OFFSET=2 -QCODE_I=CODE_ID      #
#                            -QTLS16_I=TLS16_ID -D__iar_HWMUL=4C0              #
#                            -Z(CONST)INFO=1800-19FF                           #
#                            -Z(CONST)INFOA=1980-19FF                          #
#                            -Z(CONST)INFOB=1900-197F                          #
#                            -Z(CONST)INFOC=1880-18FF                          #
#                            -Z(CONST)INFOD=1800-187F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=1C00-5 #
#                            BFF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N,DATA20_HEAP+_D #
#                            ATA20_HEAP_SIZE                                   #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=5C00-FF7F                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE16=5C00-FF7F          #
#                            -P(CODE)CODE=5C00-FF7F,10000-45BFF                #
#                            -Z(CONST)DATA20_C,DATA20_ID,CODE_ID=5C00-FF7F,100 #
#                            40-45BFF                                          #
#                            -Z(CODE)INTVEC=FF80-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\multiplier32.xcl"     #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw32=?Mul32   #
#                            -e?Mul64Hw32=_Mul64i                              #
#                            -e?Mul32u32uto64iHw32=_Mul32u32uto64i             #
#                            -e?Mul32fHw32=_Mul32f                             #
#                            -e_Mul64fHw32Ptr=_Mul64fPtr) -D_STACK_SIZE=BB8    #
#                            -rt                                               #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\lib\dlib\dl430xlsfn.r43"            #
#                            -D_DATA16_HEAP_SIZE=1F40 -s __program_start       #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2018 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           5D1C  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __code_model               = large
  __core                     = 430X
  __data_model               = small
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

       All references to: _Printf
         were redirected to: _PrintfSmallNoMb



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       1F40 
           _STACK_SIZE             0BB8 
           __iar_HWMUL             04C0            ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   Segment part 1 (?Mul8Hw)
           ?CPU30_OFFSET           0002 
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc10_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\adc12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\aes.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\battbak.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\common.r43
  PROGRAM MODULE, NAME : common

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 021A - 021B (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIE_L               021A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIE                    021A 
           PAIE_H                  021B 
           PAIE_L                  021A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 021C - 021D (0x2 bytes), align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIFG_L              021C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIFG                   021C 
           PAIFG_H                 021D 
           PAIFG_L                 021C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 024A - 024B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCSEL_L              024A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCSEL                   024A 
           PCSEL_H                 024B 
           PCSEL_L                 024A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0262 - 0263 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   Clear_ExternWatchdog()
                                                   Restart_Init() (main)
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDOUT_L              0262 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDOUT                   0262 
           PDOUT_H                 0263 
           PDOUT_L                 0262 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 026A - 026B (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDSEL_L              026A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDSEL                   026A 
           PDSEL_H                 026B 
           PDSEL_L                 026A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0282 - 0283 (0x2 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   IIC_SCL_HIGH() (rtc)
                                                   IIC_SCL_LOW() (rtc)
                                                   IIC_SDA_HIGH() (rtc)
                                                   IIC_SDA_LOW() (rtc)
                                                   Max3222_Open()
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEOUT_L              0282 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEOUT                   0282 
           PEOUT_H                 0283 
           PEOUT_L                 0282 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0284 - 0285 (0x2 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   IIC_Send_Byte(unsigned char) (rtc)
                                                   IIC_Start() (rtc)
                                                   IIC_Stop() (rtc)
                                                   IIC_Wait_Ack() (rtc)
                                                   Max3222_Open()
                                                   RTC_Open() (rtc)
                                                   Restart_Init() (main)
                                                   UART3_Open(int) (uart3)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEDIR_L              0284 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEDIR                   0284 
           PEDIR_H                 0285 
           PEDIR_L                 0284 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMCTL0_L            0120 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMCTL0                 0120 
           PMMCTL0_H               0121 
           PMMCTL0_L               0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0124 - 0125 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMHCTL_L           0124 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMHCTL                0124 
           SVSMHCTL_H              0125 
           SVSMHCTL_L              0124 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0126 - 0127 (0x2 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SVSMLCTL_L           0126 
           LOCAL                   ADDRESS         
           =====                   =======         
           SVSMLCTL                0126 
           SVSMLCTL_H              0127 
           SVSMLCTL_L              0126 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012C - 012D (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   Set_Vcore(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PMMIFG_L             012C 
           LOCAL                   ADDRESS         
           =====                   =======         
           PMMIFG                  012C 
           PMMIFG_H                012D 
           PMMIFG_L                012C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0102 - 0103 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_Init()
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIFG1_L            0102 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIFG1                 0102 
           SFRIFG1_H               0103 
           SFRIFG1_L               0102 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0168 - 0169 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL4_L            0168 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL4                 0168 
           UCSCTL4_H               0169 
           UCSCTL4_L               0168 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016A - 016B (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   Clock_ACLK_DIV(int)
                                                   Clock_SMCLK_DIV(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL5_L            016A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL5                 016A 
           UCSCTL5_H               016B 
           UCSCTL5_L               016A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016C - 016D (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL6_L            016C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL6                 016C 
           UCSCTL6_H               016D 
           UCSCTL6_L               016C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 016E - 016F (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSCTL7_L            016E 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSCTL7                 016E 
           UCSCTL7_H               016F 
           UCSCTL7_L               016E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 015C - 015D (0x2 bytes), align: 0
  Segment part 17. ROOT       Intra module refs:   Clock_Init()
                                                   System_Reset()
                                                   WatchDog_Clear() (timer)
                                                   WatchDog_Init() (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCTL_L             015C 
           LOCAL                   ADDRESS         
           =====                   =======         
           WDTCTL                  015C 
           WDTCTL_H                015D 
           WDTCTL_L                015C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C02 - 1C03 (0x2 bytes), align: 1
  Segment part 36.            Intra module refs:   TraceFunctionLine(char const *, int)
                                                   TraceMsgFuncLine(char *, int, char const *, int)
                                                   TraceOpen()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trace_open              1C02 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C04 - 1C05 (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   System_Delayms(unsigned int)
           LOCAL                   ADDRESS         
           =====                   =======         
           s_clock                 1C04 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C06 - 1C07 (0x2 bytes), align: 1
  Segment part 38.            Intra module refs:   DownInt()
                                                   UpInt()
           LOCAL                   ADDRESS         
           =====                   =======         
           _int                    1C06 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C08 - 1C09 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   Clear_ExternWatchdog()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_pin             1C08 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D30 - 8D3D (0xe bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceOpen()             8D30            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 881A - 8839 (0x20 bytes), align: 1
  Segment part 41.            Intra module refs:   TraceMsgFuncLine(char *, int, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceFunctionLine(char const *, int)
                                   881A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83D0 - 8401 (0x32 bytes), align: 1
  Segment part 43.            Intra module refs:   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TraceMsgFuncLine(char *, int, char const *, int)
                                   83D0            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81E8 - 821F (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   Clock_Init()
                                                   System_Reset()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Delayms(unsigned int)
                                   81E8            I2C_STOP() (rom)
                                                   Led_Round() (led)
                                                   RTC_Open() (rtc)
                                                   UART3_Send(char *, int, int) (uart3)
                                                   main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E10 - 8E19 (0xa bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DownInt()               8E10            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 89CC - 89E3 (0x18 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpInt()                 89CC            ROM_ReadByte(unsigned long long, char *) (rom)
                                                   ROM_WriteByte(unsigned long long, char) (rom)
                                                   RTC_Open() (rtc)
                                                   UART3_ClearBuffer() (uart3)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F08 - 8F0D (0x6 bytes), align: 1
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EnInt()                 8F08            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CDC - 8CE9 (0xe bytes), align: 1
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Max3222_Open()          8CDC            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 877A - 8799 (0x20 bytes), align: 1
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           System_Reset()          877A            TIMERB1_ISR() (timer)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7962 - 79C9 (0x68 bytes), align: 1
  Segment part 62.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_SMCLK_DIV(int)    7962 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 79CA - 7A31 (0x68 bytes), align: 1
  Segment part 63.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_ACLK_DIV(int)     79CA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7D92 - 7DE7 (0x56 bytes), align: 1
  Segment part 64.            Intra module refs:   Clock_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Set_Vcore(unsigned int)
                                   7D92 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7CDC - 7D37 (0x5c bytes), align: 1
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clock_Init()            7CDC            Restart_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 89FC - 8A11 (0x16 bytes), align: 1
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_Strlen(char *)
                                   89FC            Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 788E - 78F9 (0x6c bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Utility_UintToStr4(unsigned int, char *)
                                   788E            Console_WriteInt(int) (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8878 - 8895 (0x1e bytes), align: 1
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear_ExternWatchdog()
                                   8878            TIMERB1_ISR() (timer)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1C - 5C1D (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   TraceFunctionLine(char const *, int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C1E - 5C2A (0xd bytes), align: 0
  Segment part 21.            Intra module refs:   System_Reset()
           LOCAL                   ADDRESS         
           =====                   =======         
           System_Reset()::__FUNCTION__
                                   5C1E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C2B - 5C37 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   System_Reset()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\comp_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\Console.r43
  PROGRAM MODULE, NAME : Console

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8F6C - 8F6F (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   DataPage::~DataPage() (dualpool)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free                    8F6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DE8 - 8DF1 (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Open()          8DE8            Restart_Init() (main)
                                                   TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E64 - 8E6B (0x8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Close()         8E64            TraceOpen() (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 86A8 - 86CB (0x24 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteString(char *)
                                   86A8            TraceFunctionLine(char const *, int) (common)
                                                   TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8684 - 86A7 (0x24 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteStringln(char *)
                                   8684            TraceMsgFuncLine(char *, int, char const *, int) (common)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8AC0 - 8AD3 (0x14 bytes), align: 1
  Segment part 8.             Intra module refs:   Console_WriteInt(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteBytesln(char *, int)
                                   8AC0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8934 - 894D (0x1a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_WriteInt(int)   8934            TraceFunctionLine(char const *, int) (common)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\crc.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\cstartup.r43
  LIBRARY MODULE, NAME : ?cstart

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __MSP430F5212__         0000 
  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 5048, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0A, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5D1A, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CODE_I
  Relative segment, address: 444A, align: 1
  Segment part 5.
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: 8FF2, align: 1
  Segment part 6.
    -------------------------------------------------------------------------
DATA20_Z
  Relative segment, address: 444A, align: 1
  Segment part 7.
    -------------------------------------------------------------------------
DATA20_I
  Relative segment, address: 444A, align: 1
  Segment part 8.
    -------------------------------------------------------------------------
DATA20_ID
  Relative segment, address: 8FF2, align: 1
  Segment part 9.
    -------------------------------------------------------------------------
DATA20_C
  Relative segment, address: 8FF2, align: 1
  Segment part 10.
    -------------------------------------------------------------------------
DATA20_N
  Relative segment, address: 444A, align: 1
  Segment part 12.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5D1C - 5D25 (0xa bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         5D1C            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           5D1C 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5D26 - 5D31 (0xc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       5D26            IsGetInput (uart0)
                                                   Is_RS485_1 (main)
                                                   Is_uart1_RX_INT (main)
                                                   Is_uart3_RX_INT (uart3)
                                                   Segment part 2 (?xgetmemchunk)
                                                   UART0_Rx_BufLen (uart0)
                                                   UART0_Rx_Buffer (uart0)
                                                   UART0_Rx_INTIndex (uart0)
                                                   UART0_Rx_INTLen (uart0)
                                                   UART1_Rx_BufLen (uart1)
                                                   UART1_Rx_Buffer (uart1)
                                                   UART1_Rx_INTIndex (uart1)
                                                   UART1_Rx_INTLen (uart1)
                                                   UART3_Rx_BufLen (uart3)
                                                   UART3_Rx_Buffer (uart3)
                                                   UART3_Rx_INTIndex (uart3)
                                                   UART3_Rx_INTLen (uart3)
                                                   UART3_Rx_RecvIndex (uart3)
                                                   UART3_Tx_Buf (uart3)
                                                   UART3_Tx_Flag (uart3)
                                                   UART3_Tx_Len (uart3)
                                                   __data16_Aldata (?xxmemxmalloc)
                                                   __iar_New_hand (?new)
                                                   _int (common)
                                                   etl (etltest)
                                                   s_ClockTicks (timer)
                                                   s_clock (common)
                                                   s_reset_count (timer)
                                                   s_reset_pin (common)
                                                   s_uart1_type (uart1)
                                                   s_uart3_type (uart3)
                                                   trace_open (common)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5D32 - 5D41 (0x10 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       5D32            Opened (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 5D42 - 5D49 (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       5D42 
           ?cstart_end             5D4A 
    -------------------------------------------------------------------------
CODE_ID
  Relative segment, address: 8FF2, align: 1
  Segment part 28.            Intra module refs:   Segment part 5

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 15 (?cstart)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ctsd16.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dac12_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\debug.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dma.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\dualpool.r43
  PROGRAM MODULE, NAME : dualpool

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8BE0 - 8BEF (0x10 bytes), align: 1
  Segment part 32.            Intra module refs:   ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialPhysicalPages() (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::~DataPage()   8BE0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F02 - 8F07 (0x6 bytes), align: 1
  Segment part 2.             Intra module refs:   void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::_MemHolder(_Ty1 const &)[with _Ty1=DataPageCmpByEffectiveEraseCycle]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::_Helper<DataPageCmpByEffectiveEraseCycle, 0>::_Helper(_Ty2 const &)[with _Ty2=DataPageCmpByEffectiveEraseCycle]
                                   8F02 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EFC - 8F01 (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::_MemHolder(_Ty1 const &)[with _Ty1=DataPageCmpByEraseCycle]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::_Helper<DataPageCmpByEraseCycle, 0>::_Helper(_Ty2 const &)[with _Ty2=DataPageCmpByEraseCycle]
                                   8EFC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FE0 - 8FE1 (0x2 bytes), align: 1
  Segment part 33.            Intra module refs:   _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::operator DataPageCmpByEraseCycle &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::_Helper<DataPageCmpByEraseCycle, 0>::Ref()
                                   8FE0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FDC - 8FDD (0x2 bytes), align: 1
  Segment part 34.            Intra module refs:   _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::operator DataPageCmpByEffectiveEraseCycle &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::_Helper<DataPageCmpByEffectiveEraseCycle, 0>::Ref()
                                   8FDC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C20 - 8C2F (0x10 bytes), align: 1
  Segment part 3.             Intra module refs:   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::_MemHolder(_Ty1 const &)[with _Ty1=DataPageCmpByEffectiveEraseCycle]
                                   8C20 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C30 - 8C3F (0x10 bytes), align: 1
  Segment part 12.            Intra module refs:   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEraseCycle const &, allocator<DataPage>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::_MemHolder(_Ty1 const &)[with _Ty1=DataPageCmpByEraseCycle]
                                   8C30 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F94 - 8F97 (0x4 bytes), align: 1
  Segment part 35.            Intra module refs:   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<DataPage, DataPageCmpByEraseCycle>::operator DataPageCmpByEraseCycle &()
                                   8F94 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FA4 - 8FA7 (0x4 bytes), align: 1
  Segment part 36.            Intra module refs:   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<DataPage, DataPageCmpByEffectiveEraseCycle>::operator DataPageCmpByEffectiveEraseCycle &()
                                   8FA4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD6 - 8FD7 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_AllocHolder(allocator<void>)
                                   8FD6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD4 - 8FD5 (0x2 bytes), align: 1
  Segment part 37.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_AllocHolder<><_Alloc, false>[with _Alloc=allocator<void>]::_Alval() const
                                   8FD4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E24 - 8E2D (0xa bytes), align: 1
  Segment part 39.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   8E24 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E2E - 8E37 (0xa bytes), align: 1
  Segment part 40.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   8E2E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FC0 - 8FC3 (0x4 bytes), align: 1
  Segment part 41.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int, void *)
                                   8FC0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FC4 - 8FC7 (0x4 bytes), align: 1
  Segment part 42.            Intra module refs:   allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int) (etl)
                                                   allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node>::allocate(unsigned int)
                                                   allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node>::allocate(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Allocator<void>::allocate(unsigned int)
                                   8FC4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FCC - 8FCD (0x2 bytes), align: 1
  Segment part 48.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   8FCC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FCE - 8FCF (0x2 bytes), align: 1
  Segment part 49.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   8FCE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CEA - 8CF7 (0xe bytes), align: 1
  Segment part 52.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node>::allocate(unsigned int)
                                   8CEA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CCE - 8CDB (0xe bytes), align: 1
  Segment part 53.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node>::allocate(unsigned int)
                                   8CCE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DDC - 8DE7 (0xc bytes), align: 1
  Segment part 56.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node>::max_size() const
                                   8DDC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DD0 - 8DDB (0xc bytes), align: 1
  Segment part 57.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node>::max_size() const
                                   8DD0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 899C - 89B3 (0x18 bytes), align: 1
  Segment part 58.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char) (etl)
                                                   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, DataPage const &, char)
                                                   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenNode::_GenNode(_Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr, char)
                                   899C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EF0 - 8EF5 (0x6 bytes), align: 1
  Segment part 59.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Color(_Genptr)
                                   8EF0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EEA - 8EEF (0x6 bytes), align: 1
  Segment part 60.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Isnil(_Genptr)
                                   8EEA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD8 - 8FD9 (0x2 bytes), align: 1
  Segment part 61.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lmost()
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Left(_Genptr)
                                   8FD8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F2C - 8F2F (0x4 bytes), align: 1
  Segment part 62.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Root()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Parent(_Genptr)
                                   8F2C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F98 - 8F9B (0x4 bytes), align: 1
  Segment part 63.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rmost()
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Right(_Genptr)
                                   8F98 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8616 - 863B (0x26 bytes), align: 1
  Segment part 64.            Intra module refs:   _Tree_algobase<allocator<void>>::_DecP(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Max(_Genptr)
                                   8616 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7820 - 788D (0x6e bytes), align: 1
  Segment part 66.            Intra module refs:   _Tree_algobase<allocator<void>>::_GenIter::_Dec()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_DecP(_Genptr)
                                   7820 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EE4 - 8EE9 (0x6 bytes), align: 1
  Segment part 68.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr) (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_GenIter(_Tree_algobase<allocator<void>>::_Genptr)
                                   8EE4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D5A - 8D67 (0xe bytes), align: 1
  Segment part 69.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator const &) const
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator const &) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::operator==(_Tree_algobase<allocator<void>>::_GenIter const &) const
                                   8D5A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B56 - 8B67 (0x12 bytes), align: 1
  Segment part 70.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--() (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::iterator::operator--()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::iterator::operator--()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                   8B56 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F88 - 8F8B (0x4 bytes), align: 1
  Segment part 72.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const (etl)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::_Mynode() const
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::_Mynode() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_GenIter::_Mynode() const
                                   8F88 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8896 - 88B1 (0x1c bytes), align: 1
  Segment part 6.             Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>) (etl)
                                                   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage>)
                                                   _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEraseCycle const &, allocator<DataPage>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
                                   8896 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8900 - 8919 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Tree_algobase<allocator<void>>::_Tree_algobase(allocator<void> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Clear()
                                   8900 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F80 - 8F83 (0x4 bytes), align: 1
  Segment part 73.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                                   _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                                   _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Root()
                                   8F80 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F78 - 8F7B (0x4 bytes), align: 1
  Segment part 74.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lmost()
                                   8F78 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F74 - 8F77 (0x4 bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rmost()
                                   8F74 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6F76 - 7029 (0xb4 bytes), align: 1
  Segment part 76.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Rrotate(_Genptr)
                                   6F76 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 702A - 70DD (0xb4 bytes), align: 1
  Segment part 77.            Intra module refs:   _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Lrotate(_Genptr)
                                   702A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6488 - 66B7 (0x230 bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &) (etl)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_algobase<allocator<void>>::_Insert(bool, _Genptr, _Genptr)
                                   6488 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EAC - 8EB3 (0x8 bytes), align: 1
  Segment part 80.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::comp()
                                   8EAC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E74 - 8E7B (0x8 bytes), align: 1
  Segment part 81.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::comp()
                                   8E74 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84F4 - 8521 (0x2e bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, DataPage const &, char)
                                   84F4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84C6 - 84F3 (0x2e bytes), align: 1
  Segment part 83.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Node::_Node(_Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_MyGenptr, DataPage const &, char)
                                   84C6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 86F0 - 8713 (0x24 bytes), align: 1
  Segment part 7.             Intra module refs:   _Tree_val<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree_val(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage>)
                                   86F0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 86CC - 86EF (0x24 bytes), align: 1
  Segment part 13.            Intra module refs:   _Tree_val<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree_val(DataPageCmpByEraseCycle const &, allocator<DataPage>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree_nod(DataPageCmpByEraseCycle const &, allocator<DataPage>)
                                   86CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A3E - 8A53 (0x16 bytes), align: 1
  Segment part 8.             Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree_val(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage>)
                                   8A3E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A80 - 8A95 (0x16 bytes), align: 1
  Segment part 14.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree(DataPageCmpByEraseCycle const &, allocator<DataPage> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree_val(DataPageCmpByEraseCycle const &, allocator<DataPage>)
                                   8A80 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F60 - 8F63 (0x4 bytes), align: 1
  Segment part 85.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Kfn(DataPage const &)
                                   8F60 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F54 - 8F57 (0x4 bytes), align: 1
  Segment part 87.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Kfn(DataPage const &)
                                   8F54 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8968 - 8981 (0x1a bytes), align: 1
  Segment part 88.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
                                   8968 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88CC - 88E5 (0x1a bytes), align: 1
  Segment part 89.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Alnod() const
                                   88CC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F50 - 8F53 (0x4 bytes), align: 1
  Segment part 90.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F50 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F4C - 8F4F (0x4 bytes), align: 1
  Segment part 91.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F4C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E6C - 8E73 (0x8 bytes), align: 1
  Segment part 93.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   8E6C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E7C - 8E83 (0x8 bytes), align: 1
  Segment part 95.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   8E7C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FEC - 8FED (0x2 bytes), align: 1
  Segment part 96.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   8FEC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FF0 - 8FF1 (0x2 bytes), align: 1
  Segment part 97.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   8FF0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F34 - 8F37 (0x4 bytes), align: 1
  Segment part 98.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F34 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F38 - 8F3B (0x4 bytes), align: 1
  Segment part 99.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F38 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F3C - 8F3F (0x4 bytes), align: 1
  Segment part 100.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F3C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F40 - 8F43 (0x4 bytes), align: 1
  Segment part 101.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F40 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F44 - 8F47 (0x4 bytes), align: 1
  Segment part 92.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F44 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F48 - 8F4B (0x4 bytes), align: 1
  Segment part 94.            Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F48 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BD0 - 8BDF (0x10 bytes), align: 1
  Segment part 102.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8BD0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BB0 - 8BBF (0x10 bytes), align: 1
  Segment part 103.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8BB0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F58 - 8F5B (0x4 bytes), align: 1
  Segment part 104.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator const &) const
                                   8F58 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F5C - 8F5F (0x4 bytes), align: 1
  Segment part 105.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::operator==(_Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator const &) const
                                   8F5C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F64 - 8F67 (0x4 bytes), align: 1
  Segment part 106.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::const_iterator::_Mynode() const
                                   8F64 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F68 - 8F6B (0x4 bytes), align: 1
  Segment part 107.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::const_iterator::_Mynode() const
                                   8F68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C80 - 8C8F (0x10 bytes), align: 1
  Segment part 108.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::begin()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8C80 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C90 - 8C9F (0x10 bytes), align: 1
  Segment part 109.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::begin()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8C90 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BC0 - 8BCF (0x10 bytes), align: 1
  Segment part 116.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::iterator::operator--()
                                   8BC0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CA0 - 8CAF (0x10 bytes), align: 1
  Segment part 117.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::iterator::operator--()
                                   8CA0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A28 - 8A3D (0x16 bytes), align: 1
  Segment part 9.             Intra module refs:   set<DataPage, DataPageCmpByEffectiveEraseCycle>::set()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Tree(DataPageCmpByEffectiveEraseCycle const &, allocator<DataPage> const &)
                                   8A28 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A54 - 8A69 (0x16 bytes), align: 1
  Segment part 15.            Intra module refs:   set<DataPage, DataPageCmpByEraseCycle>::set()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Tree(DataPageCmpByEraseCycle const &, allocator<DataPage> const &)
                                   8A54 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87BA - 87D9 (0x20 bytes), align: 1
  Segment part 120.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::begin()
                                   87BA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 879A - 87B9 (0x20 bytes), align: 1
  Segment part 123.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::begin()
                                   879A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8AFC - 8B0D (0x12 bytes), align: 1
  Segment part 126.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::max_size() const
                                   8AFC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B68 - 8B79 (0x12 bytes), align: 1
  Segment part 127.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::max_size() const
                                   8B68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6B02 - 6C3D (0x13c bytes), align: 1
  Segment part 132.           Intra module refs:   DualPool::AddPageIntoPool(DataPage *, enum PoolIdentify)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
                                   6B02 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6D7A - 6EB5 (0x13c bytes), align: 1
  Segment part 137.           Intra module refs:   DualPool::AddPageIntoPool(DataPage *, enum PoolIdentify)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
                                   6D7A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7C1C - 7C7B (0x60 bytes), align: 1
  Segment part 129.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                   7C1C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7BBC - 7C1B (0x60 bytes), align: 1
  Segment part 134.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                   7BBC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E84 - 8E8B (0x8 bytes), align: 1
  Segment part 119.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                   8E84 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E8C - 8E93 (0x8 bytes), align: 1
  Segment part 122.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                   8E8C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E9C - 8EA3 (0x8 bytes), align: 1
  Segment part 131.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Root()
                                   8E9C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EA4 - 8EAB (0x8 bytes), align: 1
  Segment part 136.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Root()
                                   8EA4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FEA - 8FEB (0x2 bytes), align: 1
  Segment part 118.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Root()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Head() const
                                   8FEA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FE8 - 8FE9 (0x2 bytes), align: 1
  Segment part 121.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Lmost()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Root()
                                                   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Head() const
                                   8FE8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7F22 - 7F6D (0x4c bytes), align: 1
  Segment part 128.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
                                   7F22 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7E8A - 7ED5 (0x4c bytes), align: 1
  Segment part 133.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Insert(bool, _Nodeptr, DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, DataPage const &, char)
                                   7E8A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FE2 - 8FE3 (0x2 bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree_val<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::_Kfn(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>::_Kfn(DataPage const &)
                                   8FE2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FDA - 8FDB (0x2 bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree_val<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::_Kfn(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>::_Kfn(DataPage const &)
                                   8FDA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88B2 - 88CB (0x1a bytes), align: 1
  Segment part 10.            Intra module refs:   DualPool::DualPool(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set<DataPage, DataPageCmpByEffectiveEraseCycle>::set()
                                   88B2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 891A - 8933 (0x1a bytes), align: 1
  Segment part 16.            Intra module refs:   DualPool::DualPool(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set<DataPage, DataPageCmpByEraseCycle>::set()
                                   891A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D68 - 8D75 (0xe bytes), align: 1
  Segment part 130.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPageCmpByEraseCycle::operator()(DataPage const &, DataPage const &)
                                   8D68 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C60 - 8C6F (0x10 bytes), align: 1
  Segment part 135.           Intra module refs:   _Tree<_Tset_traits<DataPage, DataPageCmpByEffectiveEraseCycle, allocator<DataPage>, 0>>::insert(DataPage const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPageCmpByEffectiveEraseCycle::operator()(DataPage const &, DataPage const &)
                                   8C60 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8368 - 839B (0x34 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::DualPool(unsigned int)
                                   8368            ETL::InitialDualpool() (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7E3C - 7E89 (0x4e bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DualPool::AddPageIntoPool(DataPage *, enum PoolIdentify)
                                   7E3C            ETL::InitialDualpool() (etl)
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etl.r43
  PROGRAM MODULE, NAME : etl

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8FA8 - 8FAB (0x4 bytes), align: 1
  Segment part 38.            Intra module refs:   DataPage::DataPage(int)
                                                   ETL::InitialPhysicalPages()
                                                   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
                                                   ETLWriteAndRead(char *, unsigned int, unsigned long long) (etltest)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calloc                  8FA8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A96 - 8AAB (0x16 bytes), align: 1
  Segment part 28.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DataPage::DataPage(int)
                                   8A96 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F0E - 8F13 (0x6 bytes), align: 1
  Segment part 29.            Intra module refs:   void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::_Helper(_Ty2 const &)[with _Ty2=less<unsigned int>]
                                   8F0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD2 - 8FD3 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_Helper<less<unsigned int>, 0>::Ref()
                                   8FD2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8BF0 - 8BFF (0x10 bytes), align: 1
  Segment part 30.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::_MemHolder(_Ty1 const &)[with _Ty1=less<unsigned int>]
                                   8BF0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FB0 - 8FB3 (0x4 bytes), align: 1
  Segment part 40.            Intra module refs:   _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ClassUtil::_MemHolder<pair<unsigned int const, unsigned int>, less<unsigned int>>::operator less<unsigned int> &()
                                   8FB0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DC4 - 8DCF (0xc bytes), align: 1
  Segment part 42.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           less<unsigned int>::operator()(unsigned int, unsigned int) const
                                   8DC4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DFC - 8E05 (0xa bytes), align: 1
  Segment part 43.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<unsigned int const, unsigned int>::pair(unsigned int)
                                   8DFC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E1A - 8E23 (0xa bytes), align: 1
  Segment part 44.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pair<_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator, bool>::pair(_ParamTy1, bool)
                                   8E1A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FD0 - 8FD1 (0x2 bytes), align: 1
  Segment part 47.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           void allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocator(allocator<_Other> const &)[with _Other=void]
                                   8FD0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D84 - 8D91 (0xe bytes), align: 1
  Segment part 48.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::allocate(unsigned int)
                                   8D84 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DA0 - 8DAB (0xc bytes), align: 1
  Segment part 49.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           allocator<_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node>::max_size() const
                                   8DA0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EC4 - 8ECB (0x8 bytes), align: 1
  Segment part 68.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::comp()
                                   8EC4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8660 - 8683 (0x24 bytes), align: 1
  Segment part 69.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Node::_Node(_Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_MyGenptr, pair<unsigned int const, unsigned int> const &, char)
                                   8660 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8714 - 8737 (0x24 bytes), align: 1
  Segment part 34.            Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_nod<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_nod(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   8714 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A6A - 8A7F (0x16 bytes), align: 1
  Segment part 35.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree_val(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>>)
                                   8A6A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FB4 - 8FB7 (0x4 bytes), align: 1
  Segment part 71.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   8FB4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88E6 - 88FF (0x1a bytes), align: 1
  Segment part 72.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Alnod() const
                                   88E6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FAC - 8FAF (0x4 bytes), align: 1
  Segment part 73.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Isnil(_Tree_algobase<allocator<void>>::_Genptr)
                                   8FAC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E4C - 8E53 (0x8 bytes), align: 1
  Segment part 75.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                   8E4C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FDE - 8FDF (0x2 bytes), align: 1
  Segment part 76.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Left(_Tree_algobase<allocator<void>>::_Genptr)
                                   8FDE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F90 - 8F93 (0x4 bytes), align: 1
  Segment part 77.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Parent(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F90 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F84 - 8F87 (0x4 bytes), align: 1
  Segment part 78.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Right(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F84 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F7C - 8F7F (0x4 bytes), align: 1
  Segment part 74.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Key(_Tree_algobase<allocator<void>>::_Genptr)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Myval(_Tree_algobase<allocator<void>>::_Genptr)
                                   8F7C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CB0 - 8CBF (0x10 bytes), align: 1
  Segment part 79.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::const_iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8CB0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F70 - 8F73 (0x4 bytes), align: 1
  Segment part 80.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::operator==(_Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator const &) const
                                   8F70 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F30 - 8F33 (0x4 bytes), align: 1
  Segment part 81.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::const_iterator::_Mynode() const
                                   8F30 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C70 - 8C7F (0x10 bytes), align: 1
  Segment part 82.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::iterator(_Tree_algobase<allocator<void>>::_Genptr)
                                   8C70 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E94 - 8E9B (0x8 bytes), align: 1
  Segment part 83.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator*() const
                                   8E94 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C10 - 8C1F (0x10 bytes), align: 1
  Segment part 84.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::iterator::operator--()
                                   8C10 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A12 - 8A27 (0x16 bytes), align: 1
  Segment part 36.            Intra module refs:   map<unsigned int, unsigned int>::map()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Tree(less<unsigned int> const &, allocator<pair<unsigned int const, unsigned int>> const &)
                                   8A12 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 883A - 8859 (0x20 bytes), align: 1
  Segment part 87.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
                                   883A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B7A - 8B8B (0x12 bytes), align: 1
  Segment part 88.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::max_size() const
                                   8B7A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6C3E - 6D79 (0x13c bytes), align: 1
  Segment part 92.            Intra module refs:   map<unsigned int, unsigned int>::operator[](unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
                                   6C3E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7B5C - 7BBB (0x60 bytes), align: 1
  Segment part 90.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                   7B5C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EB4 - 8EBB (0x8 bytes), align: 1
  Segment part 86.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::begin()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                   8EB4 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EBC - 8EC3 (0x8 bytes), align: 1
  Segment part 91.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                   8EBC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FEE - 8FEF (0x2 bytes), align: 1
  Segment part 85.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Lmost()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Root()
                                                   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::insert(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Head() const
                                   8FEE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7ED6 - 7F21 (0x4c bytes), align: 1
  Segment part 89.            Intra module refs:   _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Insert(bool, _Nodeptr, pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tree<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Buynode(_Nodeptr, _Nodeptr, _Nodeptr, pair<unsigned int const, unsigned int> const &, char)
                                   7ED6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FA0 - 8FA3 (0x4 bytes), align: 1
  Segment part 70.            Intra module refs:   _Tree_val<_Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>>::_Kfn(pair<unsigned int const, unsigned int> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Tmap_traits<unsigned int, unsigned int, less<unsigned int>, allocator<pair<unsigned int const, unsigned int>>, 0>::_Kfn(pair<unsigned int const, unsigned int> const &)
                                   8FA0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8982 - 899B (0x1a bytes), align: 1
  Segment part 37.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::map()
                                   8982 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82C6 - 82FB (0x36 bytes), align: 1
  Segment part 93.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialPhysicalPages()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           map<unsigned int, unsigned int>::operator[](unsigned int)
                                   82C6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7FBA - 8001 (0x48 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ETL(unsigned long long)
                                   7FBA            ETLWriteAndReadTest() (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82FC - 8331 (0x36 bytes), align: 1
  Segment part 22.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::NeedFormat()       82FC 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 738A - 7425 (0x9c bytes), align: 1
  Segment part 18.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Format(unsigned char, unsigned int)
                                   738A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7DE8 - 7E3B (0x54 bytes), align: 1
  Segment part 17.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::SetInfoPage(InfoPage)
                                   7DE8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 76D0 - 7743 (0x74 bytes), align: 1
  Segment part 21.            Intra module refs:   ETL::NeedFormat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetInfoPage()      76D0 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 66B8 - 684F (0x198 bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Write(unsigned long long, char const *, int)
                                   66B8            ETLWriteAndRead(char *, unsigned int, unsigned long long) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6850 - 69BD (0x16e bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::Read(unsigned long long, char *, int)
                                   6850            ETLWriteAndRead(char *, unsigned int, unsigned long long) (etltest)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B0E - 8B1F (0x12 bytes), align: 1
  Segment part 26.            Intra module refs:   ETL::RomWriteBytes(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteByte(unsigned long long, char)
                                   8B0E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B20 - 8B31 (0x12 bytes), align: 1
  Segment part 27.            Intra module refs:   ETL::RomReadBytes(unsigned long long, char *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadByte(unsigned long long, char *)
                                   8B20 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7A32 - 7A95 (0x64 bytes), align: 1
  Segment part 14.            Intra module refs:   ETL::SetInfoPage(InfoPage)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomWriteBytes(unsigned long long, char const *, int)
                                   7A32 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7AFA - 7B5B (0x62 bytes), align: 1
  Segment part 9.             Intra module refs:   ETL::GetInfoPage()
                                                   ETL::ReadDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::RomReadBytes(unsigned long long, char *, int)
                                   7AFA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 75D8 - 7659 (0x82 bytes), align: 1
  Segment part 16.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialPhysicalPages()
                                   75D8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 765A - 76CF (0x76 bytes), align: 1
  Segment part 13.            Intra module refs:   ETL::Format(unsigned char, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitialDualpool()
                                   765A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7190 - 723B (0xac bytes), align: 1
  Segment part 15.            Intra module refs:   ETL::InitialPhysicalPages()
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::WriteDataPage(int, DataPage *)
                                   7190 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 723C - 72E7 (0xac bytes), align: 1
  Segment part 11.            Intra module refs:   ETL::InitLpnToPpnTable()
                                                   ETL::InitialDualpool()
                                                   ETL::Read(unsigned long long, char *, int)
                                                   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ReadDataPage(int, DataPage *)
                                   723C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E06 - 8E0F (0xa bytes), align: 1
  Segment part 10.            Intra module refs:   ETL::ReadDataPage(int, DataPage *)
                                                   ETL::WriteDataPage(int, DataPage *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::GetDataPageSize()
                                   8E06 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B9E - 8BAF (0x12 bytes), align: 1
  Segment part 23.            Intra module refs:   ETL::Write(unsigned long long, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::ClearDataPage(DataPage *)
                                   8B9E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 77B2 - 781F (0x6e bytes), align: 1
  Segment part 12.            Intra module refs:   ETL::ETL(unsigned long long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETL::InitLpnToPpnTable()
                                   77B2 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C38 - 5C55 (0x1e bytes), align: 0
  Segment part 2.             Intra module refs:   ETL::ETL(unsigned long long)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C56 - 5C6A (0x15 bytes), align: 0
  Segment part 3.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C6B - 5C85 (0x1b bytes), align: 0
  Segment part 4.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C86 - 5C9C (0x17 bytes), align: 0
  Segment part 5.             Intra module refs:   ETL::Format(unsigned char, unsigned int)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5C9D - 5CB0 (0x14 bytes), align: 0
  Segment part 6.             Intra module refs:   ETL::InitLpnToPpnTable()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etlforat24c1024.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\etltest.r43
  PROGRAM MODULE, NAME : etltest

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C0A - 1C0B (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   ETLWriteAndRead(char *, unsigned int, unsigned long long)
                                                   ETLWriteAndReadTest()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           etl                     1C0A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7C7C - 7CDB (0x60 bytes), align: 1
  Segment part 25.            Intra module refs:   ETLWriteAndReadTest()
           LOCAL                   ADDRESS         
           =====                   =======         
           ETLWriteAndRead(char *, unsigned int, unsigned long long)
                                   7C7C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7426 - 74BD (0x98 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETLWriteAndReadTest()   7426            main (main)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CB1 - 5CC2 (0x12 bytes), align: 0
  Segment part 12.            Intra module refs:   ETLWriteAndRead(char *, unsigned int, unsigned long long)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CC3 - 5CCF (0xd bytes), align: 0
  Segment part 13.            Intra module refs:   ETLWriteAndReadTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CD0 - 5CD6 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   ETLWriteAndReadTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CD7 - 5CF1 (0x1b bytes), align: 0
  Segment part 15.            Intra module refs:   ETLWriteAndReadTest()
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CF2 - 5CF4 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   ETLWriteAndReadTest()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\eusci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\flashctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\gpio.r43
  PROGRAM MODULE, NAME : gpio

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 5C00 - 5C1B (0x1c bytes), align: 1
  Segment part 2.             Intra module refs:   GPIO_clearInterrupt
                                                   GPIO_getInterruptStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           GPIO_PORT_TO_BASE       5C00 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8084 - 80C1 (0x3e bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_getInterruptStatus
                                   8084            Port_2() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8738 - 8759 (0x22 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GPIO_clearInterrupt     8738            Port_2() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lcd_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ldopwr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\led.r43
  PROGRAM MODULE, NAME : led

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0222 - 0223 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led1_Off()
                                                   Led1_On()
                                                   Led2_Off()
                                                   Led2_On()
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBOUT_L              0222 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBOUT                   0222 
           PBOUT_H                 0223 
           PBOUT_L                 0222 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0224 - 0225 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   I2C_GetACK() (rom)
                                                   I2C_RxByte() (rom)
                                                   I2C_Set_sck_high() (rom)
                                                   I2C_Set_sck_low() (rom)
                                                   I2C_Set_sda_high() (rom)
                                                   I2C_Set_sda_low() (rom)
                                                   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBDIR_L              0224 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBDIR                   0224 
           PBDIR_H                 0225 
           PBDIR_L                 0224 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 022A - 022B (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   Led_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBSEL_L              022A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBSEL                   022A 
           PBSEL_H                 022B 
           PBSEL_L                 022A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8AD4 - 8AE7 (0x14 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Init()              8AD4            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87FA - 8819 (0x20 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led_Round()             87FA            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EDE - 8EE3 (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_On()               8EDE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8ED8 - 8EDD (0x6 bytes), align: 1
  Segment part 7.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_On()               8ED8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8ED2 - 8ED7 (0x6 bytes), align: 1
  Segment part 8.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_Off()              8ED2 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8ECC - 8ED1 (0x6 bytes), align: 1
  Segment part 6.             Intra module refs:   Led_Round()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led2_Off()              8ECC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FE6 - 8FE7 (0x2 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Led1_WorkLightOff()     8FE6            Restart_Init() (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\lowpower.r43
  PROGRAM MODULE, NAME : lowpower

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0202 - 0203 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAOUT_L              0202 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAOUT                   0202 
           PAOUT_H                 0203 
           PAOUT_L                 0202 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0204 - 0205 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   BoardPowerOn()
                                                   ROM_WP_OFF() (rom)
                                                   ROM_WP_ON() (rom)
                                                   Restart_Init() (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PADIR_L              0204 
           LOCAL                   ADDRESS         
           =====                   =======         
           PADIR                   0204 
           PADIR_H                 0205 
           PADIR_L                 0204 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E42 - 8E4B (0xa bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BoardPowerOn()          8E42            main (main)

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 020A - 020B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PASEL_L              020A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PASEL                   020A 
           PASEL_H                 020B 
           PASEL_L                 020A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0264 - 0265 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Restart_Init()
                                                   TimerB_Init(unsigned int) (timer)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PDDIR_L              0264 
           LOCAL                   ADDRESS         
           =====                   =======         
           PDDIR                   0264 
           PDDIR_H                 0265 
           PDDIR_L                 0264 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 02A4 - 02A5 (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PFDIR_L              02A4 
           LOCAL                   ADDRESS         
           =====                   =======         
           PFDIR                   02A4 
           PFDIR_H                 02A5 
           PFDIR_L                 02A4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0100 - 0101 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SFRIE1_L             0100 
           LOCAL                   ADDRESS         
           =====                   =======         
           SFRIE1                  0100 
           SFRIE1_H                0101 
           SFRIE1_L                0100 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 1C00 - 1C01 (0x2 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Opened                  1C00            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C42 - 1C42 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Restart_Init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_RS485_1              1C42 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C43 - 1C43 (0x1 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart1_RX_INT         1C43            UART1_RX_ISR() (uart1)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8290 - 82C5 (0x36 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    8290            Segment part 27 (?cstart)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5D4A - 5D71 (0x28 bytes), align: 1
  Segment part 29.            Intra module refs:   Port_2()::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()                5D4A 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7D38 - 7D91 (0x5a bytes), align: 1
  Segment part 25.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Restart_Init()          7D38 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87DA - 87F9 (0x20 bytes), align: 1
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Main_Init()             87DA 
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD5 (0x56 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Port_2()::??INTVEC 84   FFD4 
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 5D1A - 5D1B (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   Opened
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CF5 - 5CF9 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main::__FUNCTION__      5CF5 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5CFA - 5D07 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D08 - 5D12 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   Port_2()

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\mpy32.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\oa.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmap.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\pmm.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ram.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ref.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rom.r43
  PROGRAM MODULE, NAME : rom

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PBIN_L               0220 
           LOCAL                   ADDRESS         
           =====                   =======         
           PBIN                    0220 
           PBIN_H                  0221 
           PBIN_L                  0220 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CC0 - 8CCD (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_OFF()            8CC0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8CF8 - 8D05 (0xe bytes), align: 1
  Segment part 28.            Intra module refs:   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WP_ON()             8CF8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 6EB6 - 6F75 (0xc0 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_WriteByte(unsigned long long, char)
                                   6EB6            ETL::RomWriteByte(unsigned long long, char) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 70DE - 718F (0xb2 bytes), align: 1
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ROM_ReadByte(unsigned long long, char *)
                                   70DE            ETL::RomReadByte(unsigned long long, char *) (etl)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D76 - 8D83 (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_high()      8D76 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D4C - 8D59 (0xe bytes), align: 1
  Segment part 32.            Intra module refs:   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sda_low()       8D4C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D3E - 8D4B (0xe bytes), align: 1
  Segment part 31.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_high()      8D3E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D22 - 8D2F (0xe bytes), align: 1
  Segment part 29.            Intra module refs:   I2C_GetACK()
                                                   I2C_RxByte()
                                                   I2C_START()
                                                   I2C_STOP()
                                                   I2C_TxByte(char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Set_sck_low()       8D22 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 813A - 8173 (0x3a bytes), align: 1
  Segment part 49.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_GetACK()            813A 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 839C - 83CF (0x34 bytes), align: 1
  Segment part 37.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_START()             839C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80C2 - 80FD (0x3c bytes), align: 1
  Segment part 33.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_STOP()              80C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80FE - 8139 (0x3c bytes), align: 1
  Segment part 36.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
                                                   ROM_WriteByte(unsigned long long, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_TxByte(char)        80FE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7F6E - 7FB9 (0x4c bytes), align: 1
  Segment part 45.            Intra module refs:   ROM_ReadByte(unsigned long long, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_RxByte()            7F6E 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc.r43
  PROGRAM MODULE, NAME : rtc

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PAIN_L               0200 
           LOCAL                   ADDRESS         
           =====                   =======         
           PAIN                    0200 
           PAIN_H                  0201 
           PAIN_L                  0200 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0280 - 0281 (0x2 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   READ_SDA()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PEIN_L               0280 
           LOCAL                   ADDRESS         
           =====                   =======         
           PEIN                    0280 
           PEIN_H                  0281 
           PEIN_L                  0280 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8402 - 8433 (0x32 bytes), align: 1
  Segment part 59.            Intra module refs:   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _RTC_Write_OneByte(char, char)
                                   8402            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8044 - 8083 (0x40 bytes), align: 1
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTC_Open()              8044            Main_Init() (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F26 - 8F2B (0x6 bytes), align: 1
  Segment part 43.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_HIGH()          8F26 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F20 - 8F25 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SCL_LOW()           8F20 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F1A - 8F1F (0x6 bytes), align: 1
  Segment part 42.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
                                                   IIC_Wait_Ack()
                                                   RTC_Open()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_HIGH()          8F1A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F14 - 8F19 (0x6 bytes), align: 1
  Segment part 44.            Intra module refs:   IIC_Send_Byte(unsigned char)
                                                   IIC_Start()
                                                   IIC_Stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_SDA_LOW()           8F14 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D06 - 8D13 (0xe bytes), align: 1
  Segment part 94.            Intra module refs:   IIC_Wait_Ack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           READ_SDA()              8D06 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 863C - 865F (0x24 bytes), align: 1
  Segment part 52.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Start()             863C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 85CA - 85EF (0x26 bytes), align: 1
  Segment part 46.            Intra module refs:   IIC_Wait_Ack()
                                                   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Stop()              85CA 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8174 - 81AD (0x3a bytes), align: 1
  Segment part 50.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Wait_Ack()          8174 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8220 - 8257 (0x38 bytes), align: 1
  Segment part 51.            Intra module refs:   _RTC_Write_OneByte(char, char)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IIC_Send_Byte(unsigned char)
                                   8220 
               calls direct

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\rtc_c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sd24_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sfr.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sys_status.r43
  PROGRAM MODULE, NAME : sys_status

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0352 - 0353 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCR0                 0352 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\sysctl.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tec.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer.r43
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0340 - 0341 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CTL                  0340 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0342 - 0343 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA0CCTL0                0342 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0380 - 0381 (0x2 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CTL                  0380 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0382 - 0383 (0x2 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCTL0                0382 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0392 - 0393 (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TA1CCR0                 0392 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C0 - 03C1 (0x2 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CTL                  03C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C2 - 03C3 (0x2 bytes), align: 0
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL0                03C2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C4 - 03C5 (0x2 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL1                03C4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03C6 - 03C7 (0x2 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCTL2                03C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D2 - 03D3 (0x2 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR0                 03D2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D4 - 03D5 (0x2 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR1                 03D4 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03D6 - 03D7 (0x2 bytes), align: 0
  Segment part 15. ROOT       Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Init(unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0CCR2                 03D6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 03EE - 03EF (0x2 bytes), align: 0
  Segment part 16. ROOT       Intra module refs:   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TB0IV                   03EE 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0C - 1C0D (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   TIMERA0_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_ClockTicks            1C0C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C0E - 1C0F (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   TIMERB1_ISR()
                                                   TimerB_Clear()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_reset_count           1C0E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E5C - 8E63 (0x8 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Init()         8E5C            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E54 - 8E5B (0x8 bytes), align: 1
  Segment part 32.            Intra module refs:   TIMERA0_ISR()
                                                   TIMERB1_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WatchDog_Clear()        8E54            Main_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8002 - 8043 (0x42 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Init(unsigned int)
                                   8002            Restart_Init() (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8EF6 - 8EFB (0x6 bytes), align: 1
  Segment part 34.            Intra module refs:   TIMERA0_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerB_Clear()          8EF6            Main_Init() (main)
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5D72 - 5D73 (0x2 bytes), align: 1
  Segment part 39.            Intra module refs:   TIMER0_A0_ISR()::??INTVEC 108
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()         5D72 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5D74 - 5D81 (0xe bytes), align: 1
  Segment part 40.            Intra module refs:   TIMERA0_ISR()::??INTVEC 98
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()           5D74 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5D82 - 5D83 (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   TIMERB0_ISR()::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()           5D82 
               interrupt function
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5D84 - 5DC1 (0x3e bytes), align: 1
  Segment part 42.            Intra module refs:   TIMERB1_ISR()::??INTVEC 118
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()           5D84 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFE3 (0x64 bytes), align: 1
  Segment part 18. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERA0_ISR()::??INTVEC 98
                                   FFE2 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFED (0x6e bytes), align: 1
  Segment part 19. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER0_A0_ISR()::??INTVEC 108
                                   FFEC 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF7 (0x78 bytes), align: 1
  Segment part 20. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB1_ISR()::??INTVEC 118
                                   FFF6 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF9 (0x7a bytes), align: 1
  Segment part 21. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMERB0_ISR()::??INTVEC 120
                                   FFF8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_a.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_b.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\timer_d.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\tlv.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart0.r43
  PROGRAM MODULE, NAME : uart0

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 05C0 - 05C1 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0CTLW0_L          05C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0CTLW0               05C0 
           UCA0CTLW0_H             05C1 
           UCA0CTLW0_L             05C0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C6 - 05C7 (0x2 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0BRW_L            05C6 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0BRW                 05C6 
           UCA0BRW_H               05C7 
           UCA0BRW_L               05C6 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05C8 - 05C8 (0x1 bytes), align: 0
  Segment part 6. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                05C8 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CC - 05CC (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               05CC 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05CE - 05CE (0x1 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               05CE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 05DC - 05DD (0x2 bytes), align: 0
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA0ICTL_L           05DC 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA0ICTL                05DC 
           UCA0ICTL_H              05DD 
           UCA0ICTL_L              05DC 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C10 - 1C11 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsGetInput              1C10 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C44 - 1EC8 (0x285 bytes), align: 0
  Segment part 16.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_Buffer         1C44 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C12 - 1C17 (0x6 bytes), align: 1
  Segment part 17.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_BufLen         1C12 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C18 - 1C19 (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTIndex       1C18 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1A - 1C1B (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART0_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_Rx_INTLen         1C1A 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5DC2 - 5F0B (0x14a bytes), align: 1
  Segment part 46.            Intra module refs:   UART0_RX_ISR()::??INTVEC 114
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()          5DC2 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFF3 (0x74 bytes), align: 1
  Segment part 10. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_RX_ISR()::??INTVEC 114
                                   FFF2 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart1.r43
  PROGRAM MODULE, NAME : uart1

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0244 - 0245 (0x2 bytes), align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCDIR_L              0244 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCDIR                   0244 
           PCDIR_H                 0245 
           PCDIR_L                 0244 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0600 - 0601 (0x2 bytes), align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1CTLW0_L          0600 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1CTLW0               0600 
           UCA1CTLW0_H             0601 
           UCA1CTLW0_L             0600 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0606 - 0607 (0x2 bytes), align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1BRW_L            0606 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1BRW                 0606 
           UCA1BRW_H               0607 
           UCA1BRW_L               0606 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0608 - 0608 (0x1 bytes), align: 0
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1MCTL                0608 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060C - 060C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1RXBUF               060C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 060E - 060E (0x1 bytes), align: 0
  Segment part 7. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA1TXBUF               060E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 061C - 061D (0x2 bytes), align: 0
  Segment part 8. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA1ICTL_L           061C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA1ICTL                061C 
           UCA1ICTL_H              061D 
           UCA1ICTL_L              061C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1EC9 - 21E8 (0x320 bytes), align: 0
  Segment part 13.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_Buffer         1EC9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C1C - 1C1F (0x4 bytes), align: 1
  Segment part 14.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_BufLen         1C1C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C20 - 1C21 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTIndex       1C20 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C22 - 1C23 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   Judge_Watermeter()
                                                   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_Rx_INTLen         1C22 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C24 - 1C25 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           s_uart1_type            1C24 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8578 - 85A1 (0x2a bytes), align: 1
  Segment part 31.            Intra module refs:   UART1_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Judge_Watermeter()      8578 
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5F0C - 5FF7 (0xec bytes), align: 1
  Segment part 32.            Intra module refs:   UART1_RX_ISR()::??INTVEC 92
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()          5F0C 
               interrupt function
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFDD (0x5e bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART1_RX_ISR()::??INTVEC 92
                                   FFDC 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart3.r43
  PROGRAM MODULE, NAME : uart3

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 028A - 028B (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PESEL_L              028A 
           LOCAL                   ADDRESS         
           =====                   =======         
           PESEL                   028A 
           PESEL_H                 028B 
           PESEL_L                 028A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0680 - 0681 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3CTLW0_L          0680 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3CTLW0               0680 
           UCA3CTLW0_H             0681 
           UCA3CTLW0_L             0680 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0686 - 0687 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3BRW_L            0686 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3BRW                 0686 
           UCA3BRW_H               0687 
           UCA3BRW_L               0686 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0688 - 0688 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3MCTL                0688 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068C - 068C (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3RXBUF               068C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 068E - 068E (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA3TXBUF               068E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 069C - 069D (0x2 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
                                                   UART3_Send(char *, int, int)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCA3ICTL_L           069C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCA3ICTL                069C 
           UCA3ICTL_H              069D 
           UCA3ICTL_L              069C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C26 - 1C27 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Buf            1C26 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 21E9 - 2508 (0x320 bytes), align: 0
  Segment part 15.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_Buffer         21E9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C28 - 1C2B (0x4 bytes), align: 1
  Segment part 16.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_BufLen         1C28 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2C - 1C2D (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTIndex       1C2C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C2E - 1C2F (0x2 bytes), align: 1
  Segment part 18.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_INTLen         1C2E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C30 - 1C31 (0x2 bytes), align: 1
  Segment part 19.            Intra module refs:   UART3_ClearBuffer()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Rx_RecvIndex      1C30 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C32 - 1C33 (0x2 bytes), align: 1
  Segment part 20.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Flag           1C32 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C34 - 1C35 (0x2 bytes), align: 1
  Segment part 21.            Intra module refs:   UART3_ClearBuffer()
                                                   UART3_Send(char *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Tx_Len            1C34 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 2509 - 2509 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   UART3_RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Is_uart3_RX_INT         2509 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C36 - 1C37 (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   UART3_Open(int)
                                                   UART3_RX_ISR()
           LOCAL                   ADDRESS         
           =====                   =======         
           s_uart3_type            1C36 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8258 - 828F (0x38 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Open(int)         8258            Console_Open() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DF2 - 8DFB (0xa bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Close()           8DF2            Console_Close() (Console)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8434 - 8465 (0x32 bytes), align: 1
  Segment part 24.            Intra module refs:   UART3_Close()
                                                   UART3_Open(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_ClearBuffer()     8434 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 74BE - 7551 (0x94 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_Send(char *, int, int)
                                   74BE            Console_WriteBytesln(char *, int) (Console)
                                                   Console_WriteString(char *) (Console)
                                                   Console_WriteStringln(char *) (Console)
               calls direct
    -------------------------------------------------------------------------
ISR_CODE
  Relative segment, address: 5FF8 - 60DD (0xe6 bytes), align: 1
  Segment part 35.            Intra module refs:   UART3_RX_ISR()::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()          5FF8 
               interrupt function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DB8 - 8DC3 (0xc bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 8DB8            _Prout (?xprout)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FF80 - FFD9 (0x5a bytes), align: 1
  Segment part 9. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART3_RX_ISR()::??INTVEC 88
                                   FFD8 

    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\uart_config.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\ucs.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_a_uart.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_i2c.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\usci_b_spi.r43
    *************************************************************************

  FILE NAME : \\Mac\Home\work\ETL\Debug\Obj\wdt_a.r43
    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8C00 - 8C0F (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   8C00            _Nomemory() (?nomemory)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8FE4 - 8FE5 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            8FE4            __exit (?__exit)
                                                   abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8AE8 - 8AFB (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  8AE8            Segment part 6 (?_exit)
                                                   _exit (?_exit)
                                                   abort (?abort)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8F8C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   8F8C            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F8C - 8F8F (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8E38 - 8E41 (0xa bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   8E38            ETL::InitLpnToPpnTable() (etl)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 72E8 - 7389 (0xa2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 72E8            ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 894E - 8967 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Div64u

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8F9C - 8F9F (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    8F9C            Segment part 27 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 89E4 - 89FB (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              89E4            ?DivMod16s (?DivMod816s)
                                                   Utility_UintToStr4(unsigned int, char *) (common)
                                                   __data16_calloc (?xxmemxcalloc)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8466 - 8495 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              8466            ETL::InitialPhysicalPages() (etl)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8496 - 84C5 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              8496            _LitobSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8AAC - 8ABF (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            8AAC            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8B44 - 8B55 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  8B44            ETL::Read(unsigned long long, char *, int) (etl)
                                                   ETL::ReadDataPage(int, DataPage *) (etl)
                                                   ETL::Write(unsigned long long, char const *, int) (etl)
                                                   ETL::WriteDataPage(int, DataPage *) (etl)
                                                   __data16_memcpy (?memzero)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8B8C - 8B9D (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  8B8C            ETL::ClearDataPage(DataPage *) (etl)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8C50 - 8C5F (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        8C50            ?cstart_init_zero (?cstart)
                                                   __data16_calloc (?xxmemxcalloc)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8FBC - 8FBF (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         8FBC            ?cstart_init_copy (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul8Hw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 875A - 875D (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8Hw                 875A            _LitobSmallNoMb (?xprintfsmall_nomb)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 875E - 8779 (0x1c bytes), align: 1
  Segment part 1.             Intra module refs:   ?Mul8Hw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16Hw                875E            __data16_calloc (?xxmemxcalloc)
           ?Mul16to32uHw           875E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C38 - 1C3B (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          1C38            operator new(size_t) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 854E - 8577 (0x2a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    854E            ETL::InitLpnToPpnTable() (etl)
                                                   ETL::InitialDualpool() (etl)
                                                   ETLWriteAndReadTest() (etltest)
                                                   _Allocator<void>::allocate(unsigned int) (dualpool)
               calls direct and indirect

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8FC8 - 8FCB (0x4 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             8FC8            operator new(size_t) (?newop_0)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 85F0 - 8615 (0x26 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  85F0            ETL::ETL(unsigned long long) (etl)
                                                   ETL::Format(unsigned char, unsigned int) (etl)
                                                   ETL::InitLpnToPpnTable() (etl)
                                                   ETLWriteAndRead(char *, unsigned int, unsigned long long) (etltest)
                                                   ETLWriteAndReadTest() (etltest)
                                                   Port_2() (main)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?IndCallR11

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8FB8 - 8FBB (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?IndCallR11             8FB8            _PutcharSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8D92 - 8D9F (0xe bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            8D92            _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8B32 - 8B43 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  8B32            ETLWriteAndReadTest() (etltest)
                                                   _PrintfSmallNoMb (?xprintfsmall_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 885A - 8877 (0x1e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    885A            __data16_findmem (?xxmemxmalloc)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 1C3C - 1C3D (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_GetMemChunk
    -------------------------------------------------------------------------
DATA16_HEAP
  Relative segment, address: 250A, align: 1
  Segment part 4.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintfsmall_nomb

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 60DE - 6487 (0x3aa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfSmallNoMb        60DE            printf (?printf)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D14 - 8D21 (0xe bytes), align: 1
  Segment part 5.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C40 - 8C41 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8C42 - 8C4F (0xe bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 6
                                                   _PrintfSmallNoMb
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 78FA - 7961 (0x68 bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 78FA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8DAC - 8DB7 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   LoadInt
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8332 - 8367 (0x36 bytes), align: 1
  Segment part 10.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     8332 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 69BE - 6B01 (0x144 bytes), align: 1
  Segment part 3.             Intra module refs:   _PrintfSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobSmallNoMb         69BE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 85A2 - 85C9 (0x28 bytes), align: 1
  Segment part 11.            Intra module refs:   _PrintfSmallNoMb
                                                   _PutcharsSmallNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharSmallNoMb       85A2 
               calls indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8522 - 854D (0x2c bytes), align: 1
  Segment part 12.            Intra module refs:   Segment part 5
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsSmallNoMb      8522 
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 5D13 - 5D18 (0x6 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfSmallNoMb

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 89B4 - 89CB (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout                  89B4            printf (?printf)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxcalloc

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 81AE - 81E7 (0x3a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_calloc         81AE            calloc (etl)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 7552 - 75D7 (0x86 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           7552            __data16_findmem (?xxmemxmalloc)
                                                   free (Console)
                                                   operator delete(void *) (?delop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 1C3E - 1C41 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   __data16_findmem
                                                   __data16_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         1C3E            __data16_free (?xxmemxfree)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7A96 - 7AF9 (0x64 bytes), align: 1
  Segment part 3.             Intra module refs:   __data16_malloc
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        7A96 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 7744 - 77B1 (0x6e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         7744            __data16_calloc (?xxmemxcalloc)
                                                   operator new(size_t) (?newop_0)
               calls direct




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0100 - 0103               4   rel    0
                                       0120 - 0121               2 
                                       0124 - 0127               4 
                                       012C - 012D               2 
                                       015C - 015D               2 
                                       0168 - 016F               8 
                                       0200 - 0205               6 
                                       020A - 020B               2 
                                       021A - 021D               4 
                                       0220 - 0225               6 
                                       022A - 022B               2 
                                       0244 - 0245               2 
                                       024A - 024B               2 
                                       0262 - 0265               4 
                                       026A - 026B               2 
                                       0280 - 0285               6 
                                       028A - 028B               2 
                                       02A4 - 02A5               2 
                                       0340 - 0343               4 
                                       0352 - 0353               2 
                                       0380 - 0383               4 
                                       0392 - 0393               2 
                                       03C0 - 03C7               8 
                                       03D2 - 03D7               6 
                                       03EE - 03EF               2 
                                       05C0 - 05C1               2 
                                       05C6 - 05C8               3 
                                       05CC - 05CC               1 
                                       05CE - 05CE               1 
                                       05DC - 05DD               2 
                                       0600 - 0601               2 
                                       0606 - 0608               3 
                                       060C - 060C               1 
                                       060E - 060E               1 
                                       061C - 061D               2 
                                       0680 - 0681               2 
                                       0686 - 0688               3 
                                       068C - 068C               1 
                                       068E - 068E               1 
                                       069C - 069D               2 
DATA16_I                               1C00 - 1C01               2   rel    1
DATA16_Z                               1C02 - 2509             908   rel    1
DATA16_HEAP                            250A - 4449            1F40   rel    1
DATA20_I                                  444A                       rel    1
DATA20_Z                                  444A                       rel    1
DATA20_N                                  444A                       rel    1
CODE_I                                    444A                       rel    1
CSTACK                                 5048 - 5BFF             BB8   rel    1
DATA16_C                               5C00 - 5D18             119   rel    1
DATA16_ID                              5D1A - 5D1B               2   rel    1
CSTART                                 5D1C - 5D49              2E   rel    1
ISR_CODE                               5D4A - 60DD             394   rel    1
<CODE> 1                               60DE - 8FF1            2F14   rel    1
CODE_ID                                   8FF2                       rel    1
DATA20_ID                                 8FF2                       rel    1
DATA20_C                                  8FF2                       rel    1
INTVEC                                 FF80 - FFF9              7A   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 13 138 bytes of CODE  memory
 13 314 bytes of DATA  memory (+ 117 absolute )
    283 bytes of CONST memory

Errors: none
Warnings: 1

