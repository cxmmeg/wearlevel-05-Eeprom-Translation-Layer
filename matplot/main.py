import makefigure as mf


def main():

    #     mf.makeBarEdgecachedpVsOrigindp(
    #         [50.55, 1.05, 100, 440], [57.63, 1.06, 138, 1356], 10000, True)

    #     ['standard deviation', 'overhead ratio', 'write speed', 'ram cost']
    #     mf.makeBarEdgecachedpVsOrigindpVSWithoutDP([50.55, 1.05, 100, 440], [
    #         57.63, 1.06, 138, 1356], [5100.50, 1.0, 147, 0], 10000, True)

    #     hotdata = [
    #         [96,  96,  96,  94,  94,  94,  96,  94,  96,  96],
    #         [94,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  96,  94],
    #         [96,  94,  96,  94,  96,  94,  96,  94,  65,  66],
    #         [94,  95,  82,  80,  94,  79,  96,  95,  96,  90],
    #     ]

    #     mf.drawHot(10, 11, hotdata, 10000, 'edgecache-hotfigure', True)

    #     cycle_data = [5010, 10079, 15069, 20018, 25007, 30017, 35086, 40075, 45025, 50014, 55003, 60093, 65082, 70031, 75021, 80010, 85100, 90089, 95038, 100028,
    #                   105017, 110106, 115096, 120045, 125034, 130004, 135113, 140103, 145052, 150041, 155011, 160000, 165109, 170059, 175048, 180017, 185007, 190116, 195065, 200055]
    #     overhead_ratio = [1.2898, 1.3076, 1.3372, 1.3520, 1.3610, 1.3670, 1.3714, 1.3745, 1.3771, 1.3790, 1.3806, 1.3820, 1.3831, 1.3841, 1.3850, 1.3857, 1.3864, 1.3870, 1.3875,
    #                       1.3880, 1.3884, 1.3888, 1.3891, 1.3895, 1.3898, 1.3900, 1.3903, 1.3905, 1.3908, 1.3910, 1.3911, 1.3913, 1.3915, 1.3917, 1.3918, 1.3919, 1.3921, 1.3922, 1.3924, 1.3925]

    #     standard_deviation = [125.47, 76.54, 80.54, 83.76, 76.93, 80.49, 85.02, 75.99, 62.81, 46.03, 57.57, 74.28, 79.67, 83.06, 77.78, 84.66, 83.84, 76.84,
    #                           65.64, 49.84, 52.07, 71.54, 83.32, 82.29, 78.67, 81.71, 83.06, 77.54, 73.90, 53.89, 43.84, 70.51, 81.00, 81.60, 79.46, 79.20, 81.12, 78.34, 74.63, 56.75]

    #     mf.drawPlotRelationBtwWritecyclesAndOverheadRationAndStandardDeviation(
    #         cycle_data, overhead_ratio, standard_deviation, 200000)

    # draw plot compared by standard deviation

    cycle_data = [5010, 10079, 15069, 20018, 25007, 30017, 35086, 40075, 45025, 50014, 55003, 60093, 65082, 70031, 75021, 80010, 85100, 90089, 95038, 100028,
                  105017, 110106, 115096, 120045, 125034, 130004, 135113, 140103, 145052, 150041, 155011, 160000, 165109, 170059, 175048, 180017, 185007, 190116, 195065, 200055]
    sd_0 = [125.47, 76.54, 80.54, 83.76, 76.93, 80.49, 85.02, 75.99, 62.81, 46.03, 57.57, 74.28, 79.67, 83.06, 77.78, 84.66, 83.84, 76.84, 65.64,
            49.84, 52.07, 71.54, 83.32, 82.29, 78.67, 81.71, 83.06, 77.54, 73.90, 53.89, 43.84, 70.51, 81.00, 81.60, 79.46, 79.20, 81.12, 78.34, 74.63, 56.75]
    sd_1 = [372.99, 465.47, 525.04, 619.47, 660.74, 654.74, 600.15, 483.61, 439.92, 348.80, 118.30, 372.71, 445.54, 451.59, 400.79, 235.19, 302.54, 422.92, 451.81, 432.47,
            331.34, 176.40, 382.99, 448.13, 449.28, 391.07, 196.25, 317.89, 427.80, 450.68, 428.34, 317.89, 209.41, 391.71, 448.95, 446.91, 381.95, 159.17, 334.19, 433.33]
    sd_2 = [694.01, 960.29, 1141.41, 1269.57, 1370.92, 1442.31, 1493.02, 1526.23, 1534.51, 1676.31, 1799.20, 1900.13, 1982.71, 2045.93, 2095.23, 2129.29, 2151.14, 2159.99, 2154.51, 2138.01,
            2104.18, 2058.13, 1996.47, 1918.17, 1824.25, 1704.54, 1556.41, 1509.89, 1487.47, 1448.74, 1386.57, 1300.24, 1182.55, 1023.71, 804.06, 432.83, 552.81, 871.84, 1069.88, 1213.61]

    mf.drawPlotByStandardDeviation(cycle_data, sd_0, sd_1, sd_2, 200000)


if __name__ == "__main__":
    main()
